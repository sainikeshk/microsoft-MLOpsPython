{
	"name": "TwitterOrganicPipeline",
	"properties": {
		"activities": [
			{
				"name": "Get Twitter Authentication Header For Organic Tweets",
				"type": "AzureFunctionActivity",
				"dependsOn": [
					{
						"activity": "Cleanup Twitter Organic Tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"functionName": "GetTwitterAuthenticationHeader",
					"method": "GET",
					"headers": {
						"ConsumerKey": {
							"value": "@variables('ConsumerKey')",
							"type": "Expression"
						},
						"ConsumerKeySecret": {
							"value": "@variables('ConsumerKeySecret')",
							"type": "Expression"
						},
						"AccessToken": {
							"value": "@variables('AccessToken')",
							"type": "Expression"
						},
						"AccessTokenSecret": {
							"value": "@variables('AccessTokenSecret')",
							"type": "Expression"
						},
						"APIUrl": {
							"value": "@replace(variables('OrganicTweetUrl'),'AccountIdPlaceHolder', variables('AccountId'))",
							"type": "Expression"
						},
						"UrlParams": "timeline_type=ORGANIC&tweet_type=PUBLISHED&trim_user=true"
					}
				},
				"linkedServiceName": {
					"referenceName": "GetTwitterAuthenticationHeader",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Ingest Into TwitterOrganicTweetStage",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Get Twitter Authentication Header For Organic Tweets",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"additionalHeaders": {
							"Authorization": {
								"value": "@activity('Get Twitter Authentication Header For Organic Tweets').output.AccessTokenValue",
								"type": "Expression"
							}
						}
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "['favorite_count']"
								},
								"sink": {
									"name": "favorite_count",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['retweet_count']"
								},
								"sink": {
									"name": "retweet_count",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['in_reply_to_status_id']"
								},
								"sink": {
									"name": "in_reply_to_status_id",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['created_at']"
								},
								"sink": {
									"name": "created_at",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['favorited']"
								},
								"sink": {
									"name": "favorited",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['full_text']"
								},
								"sink": {
									"name": "full_text",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['tweet_id']"
								},
								"sink": {
									"name": "tweet_id",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['request']['params']['account_id']"
								},
								"sink": {
									"name": "account_id",
									"type": "String"
								}
							}
						],
						"collectionReference": "$['data']",
						"mapComplexValuesToString": true
					}
				},
				"inputs": [
					{
						"referenceName": "DynamicRESTDataSet",
						"type": "DatasetReference",
						"parameters": {
							"Url": {
								"value": "@concat(replace(variables('OrganicTweetUrl'),'AccountIdPlaceHolder', variables('AccountId')),'?timeline_type=ORGANIC&tweet_type=PUBLISHED&trim_user=true')",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "TwitterOrganicTweetStage",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Get Distinct OrganicTweetString",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Populate TwitterOrganicTweetString",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select  OrganicTweetString from TwitterOrganicTweetString",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "TwitterOrganicTweetString",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Populate TwitterOrganicTweetString",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Ingest Into TwitterOrganicTweetStage",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spPopulateTwitterOrganicTweetString]"
				},
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Ingest into TwitterOrganicTweetMetrics",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ForEach OrganicTweetString",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spInsertTwitterOrganicEngagementData]"
				},
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Cleanup Twitter Organic Tables",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Check if Differential",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spCleanUpTwitterOrganicTables]"
				},
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "ForEach OrganicTweetString",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Distinct OrganicTweetString",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Distinct OrganicTweetString').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Execute TwitterOrganicTweetMetricsPipeline",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "TwitterOrganicTweetMetricsPipeline",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"OrganicTweetIdString": {
										"value": "@item().OrganicTweetString ",
										"type": "Expression"
									},
									"ConsumerKey": {
										"value": "@variables('ConsumerKey')",
										"type": "Expression"
									},
									"ConsumerKeySecret": {
										"value": "@variables('ConsumerKeySecret')",
										"type": "Expression"
									},
									"AccessToken": {
										"value": "@variables('AccessToken')",
										"type": "Expression"
									},
									"AccessTokenSecret": {
										"value": "@variables('AccessTokenSecret')",
										"type": "Expression"
									},
									"AccountId": {
										"value": "@variables('AccountId')",
										"type": "Expression"
									},
									"StartDate": {
										"value": "@variables('StartDate')",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "Ingest Into TwitterOrganicTweet",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Ingest Into TwitterOrganicTweetStage",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "TwitterOrganicTweetFlow",
						"type": "DataFlowReference"
					},
					"integrationRuntime": {
						"referenceName": "HighPerformanceIR",
						"type": "IntegrationRuntimeReference"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Ingest into ProdTwitterOrganicTweetMetrics",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Ingest into TwitterOrganicTweetMetrics",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Ingest Into TwitterOrganicTweet",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "@{concat('Delete from prod.TwitterOrganicTweetMetrics where MetricDate >=''',variables('StartDate'),'''')}",
							"type": "Expression"
						},
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "TweetId",
									"type": "Int64",
									"physicalType": "bigint"
								},
								"sink": {
									"name": "TweetId",
									"type": "Int64",
									"physicalType": "bigint"
								}
							},
							{
								"source": {
									"name": "MetricDate",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "MetricDate",
									"type": "DateTime",
									"physicalType": "datetime"
								}
							},
							{
								"source": {
									"name": "Impressions",
									"type": "Double",
									"physicalType": "float"
								},
								"sink": {
									"name": "Impressions",
									"type": "Double",
									"physicalType": "float"
								}
							},
							{
								"source": {
									"name": "TweetsSend",
									"type": "Double",
									"physicalType": "float"
								},
								"sink": {
									"name": "TweetsSend",
									"type": "Double",
									"physicalType": "float"
								}
							},
							{
								"source": {
									"name": "QualifiedImpressions",
									"type": "Double",
									"physicalType": "float"
								},
								"sink": {
									"name": "QualifiedImpressions",
									"type": "Double",
									"physicalType": "float"
								}
							},
							{
								"source": {
									"name": "Follows",
									"type": "Double",
									"physicalType": "float"
								},
								"sink": {
									"name": "Follows",
									"type": "Double",
									"physicalType": "float"
								}
							},
							{
								"source": {
									"name": "AppClicks",
									"type": "Double",
									"physicalType": "float"
								},
								"sink": {
									"name": "AppClicks",
									"type": "Double",
									"physicalType": "float"
								}
							},
							{
								"source": {
									"name": "Retweets",
									"type": "Double",
									"physicalType": "float"
								},
								"sink": {
									"name": "Retweets",
									"type": "Double",
									"physicalType": "float"
								}
							},
							{
								"source": {
									"name": "Unfollows",
									"type": "Double",
									"physicalType": "float"
								},
								"sink": {
									"name": "Unfollows",
									"type": "Double",
									"physicalType": "float"
								}
							},
							{
								"source": {
									"name": "Likes",
									"type": "Double",
									"physicalType": "float"
								},
								"sink": {
									"name": "Likes",
									"type": "Double",
									"physicalType": "float"
								}
							},
							{
								"source": {
									"name": "Engagements",
									"type": "Double",
									"physicalType": "float"
								},
								"sink": {
									"name": "Engagements",
									"type": "Double",
									"physicalType": "float"
								}
							},
							{
								"source": {
									"name": "Clicks",
									"type": "Double",
									"physicalType": "float"
								},
								"sink": {
									"name": "Clicks",
									"type": "Double",
									"physicalType": "float"
								}
							},
							{
								"source": {
									"name": "CardEngagements",
									"type": "Double",
									"physicalType": "float"
								},
								"sink": {
									"name": "CardEngagements",
									"type": "Double",
									"physicalType": "float"
								}
							},
							{
								"source": {
									"name": "PollCardVote",
									"type": "Double",
									"physicalType": "float"
								},
								"sink": {
									"name": "PollCardVote",
									"type": "Double",
									"physicalType": "float"
								}
							},
							{
								"source": {
									"name": "Replies",
									"type": "Double",
									"physicalType": "float"
								},
								"sink": {
									"name": "Replies",
									"type": "Double",
									"physicalType": "float"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "TwitterOrganicTweetMetrics",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ProdTwitterOrganicTweetMetrics",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Check if Differential",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(variables('Differential'), true)\n\n ",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Set StartDate",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "StartDate",
								"value": {
									"value": "@formatDateTime(adddays(utcnow(),-2),'yyyy-MM-dd')",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"variables": {
			"ConsumerKey": {
				"type": "String",
				"defaultValue": "0bNbRmwfcwUylurWUlMLXVw6s"
			},
			"ConsumerKeySecret": {
				"type": "String",
				"defaultValue": "tTrmn64h8rvHSNfnqYzKk6TOdug8lUIT9m1lu4wLWh7cSKt7IS"
			},
			"AccessToken": {
				"type": "String",
				"defaultValue": "1247510171749883906-Mw7rz6qlwk38ZIAdnzD0RmUPQSqw78"
			},
			"AccessTokenSecret": {
				"type": "String",
				"defaultValue": "lxDxAxy1H6EhHniLrNyBxwEIwmZbGeOLXgaNXrUmsRDew"
			},
			"AccountId": {
				"type": "String",
				"defaultValue": "18ce554fqwc"
			},
			"AnalyticsUrl": {
				"type": "String",
				"defaultValue": "https://ads-api.twitter.com/8/stats/accounts/AccountIdPlaceHolder"
			},
			"StartDate": {
				"type": "String",
				"defaultValue": "2020-01-01"
			},
			"OrganicTweetUrl": {
				"type": "String",
				"defaultValue": "https://ads-api.twitter.com/8/accounts/AccountIdPlaceHolder/tweets"
			},
			"Differential": {
				"type": "Boolean",
				"defaultValue": true
			}
		},
		"folder": {
			"name": "Twitter"
		},
		"annotations": [],
		"lastPublishTime": "2020-11-11T05:10:46Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}