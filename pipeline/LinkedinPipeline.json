{
	"name": "LinkedinPipeline",
	"properties": {
		"activities": [
			{
				"name": "Ingest Into AccountStage",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Clean up Linkedin Tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"additionalHeaders": {
							"Authorization": {
								"value": "@pipeline().globalParameters.LinkedinKey",
								"type": "Expression"
							}
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "['type']"
								},
								"sink": {
									"name": "Type",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['changeAuditStamps']['created']['time']"
								},
								"sink": {
									"name": "Created",
									"type": "Int64"
								}
							},
							{
								"source": {
									"path": "['changeAuditStamps']['lastModified']['time']"
								},
								"sink": {
									"name": "Modified",
									"type": "Int64"
								}
							},
							{
								"source": {
									"path": "['name']"
								},
								"sink": {
									"name": "Name",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['currency']"
								},
								"sink": {
									"name": "Currency",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['id']"
								},
								"sink": {
									"name": "AccountId",
									"type": "Int32"
								}
							},
							{
								"source": {
									"path": "['status']"
								},
								"sink": {
									"name": "Status",
									"type": "String"
								}
							}
						],
						"collectionReference": "$['elements']"
					}
				},
				"inputs": [
					{
						"referenceName": "Linkedin",
						"type": "DatasetReference",
						"parameters": {
							"Url": "https://api.linkedin.com/v2/adAccountsV2?q=search"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "AccountStage",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Ingest Into Account",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Ingest Into AccountStage",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "AccountDataFlow",
						"type": "DataFlowReference"
					},
					"integrationRuntime": {
						"referenceName": "HighPerformanceIR",
						"type": "IntegrationRuntimeReference"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Distinct AccountIds",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Ingest Into Account",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "Select Distinct AccountId from Account",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Account",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "For Each Id Get Campaign Data",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Distinct AccountIds",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Distinct AccountIds').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Ingest Into CampaignStage",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"additionalHeaders": {
										"Authorization": {
											"value": "@pipeline().globalParameters.LinkedinKey",
											"type": "Expression"
										}
									}
								},
								"sink": {
									"type": "AzureSqlSink"
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"path": "['type']"
											},
											"sink": {
												"name": "Type",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['changeAuditStamps']['created']['time']"
											},
											"sink": {
												"name": "Created",
												"type": "Int64"
											}
										},
										{
											"source": {
												"path": "['changeAuditStamps']['lastModified']['time']"
											},
											"sink": {
												"name": "Modified",
												"type": "Int64"
											}
										},
										{
											"source": {
												"path": "['costType']"
											},
											"sink": {
												"name": "CostType",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['id']"
											},
											"sink": {
												"name": "CampaignId",
												"type": "Int32"
											}
										},
										{
											"source": {
												"path": "['objectiveType']"
											},
											"sink": {
												"name": "Objective",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['campaignGroup']"
											},
											"sink": {
												"name": "CampaignGroup",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['dailyBudget']['currencyCode']"
											},
											"sink": {
												"name": "DailyCurrencyCode",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['dailyBudget']['amount']"
											},
											"sink": {
												"name": "DailyAmount",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['unitCost']['currencyCode']"
											},
											"sink": {
												"name": "UnitCurrencyCode",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['unitCost']['amount']"
											},
											"sink": {
												"name": "UnitAmount",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['name']"
											},
											"sink": {
												"name": "Name",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['account']"
											},
											"sink": {
												"name": "Account",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['status']"
											},
											"sink": {
												"name": "Status",
												"type": "String"
											}
										}
									],
									"collectionReference": "$['elements']"
								}
							},
							"inputs": [
								{
									"referenceName": "Linkedin",
									"type": "DatasetReference",
									"parameters": {
										"Url": "@concat('https://api.linkedin.com/v2/adCampaignsV2?q=search&search.account.values[0]=urn:li:sponsoredAccount:', item().AccountId)"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "CampaignStage",
									"type": "DatasetReference"
								}
							]
						}
					]
				}
			},
			{
				"name": "For Each Id Get Campaign Group Data",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Distinct AccountIds",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Distinct AccountIds').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Ingest Into CampaignGroupStage",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"additionalHeaders": {
										"Authorization": {
											"value": "@pipeline().globalParameters.LinkedinKey",
											"type": "Expression"
										}
									}
								},
								"sink": {
									"type": "AzureSqlSink"
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"path": "['changeAuditStamps']['created']['time']"
											},
											"sink": {
												"name": "Created",
												"type": "Int64"
											}
										},
										{
											"source": {
												"path": "['changeAuditStamps']['lastModified']['time']"
											},
											"sink": {
												"name": "Modified",
												"type": "Int64"
											}
										},
										{
											"source": {
												"path": "['name']"
											},
											"sink": {
												"name": "Name",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['id']"
											},
											"sink": {
												"name": "CampaignGroupId",
												"type": "Int32"
											}
										},
										{
											"source": {
												"path": "['account']"
											},
											"sink": {
												"name": "AccountId",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['status']"
											},
											"sink": {
												"name": "Status",
												"type": "String"
											}
										}
									],
									"collectionReference": "$['elements']"
								}
							},
							"inputs": [
								{
									"referenceName": "Linkedin",
									"type": "DatasetReference",
									"parameters": {
										"Url": {
											"value": "@concat('https://api.linkedin.com/v2/adCampaignGroupsV2?q=search&search.account.values[0]=urn:li:sponsoredAccount:',item().AccountId)",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "CampaignGroupStage",
									"type": "DatasetReference"
								}
							]
						}
					]
				}
			},
			{
				"name": "Ingest into CampaignGroup",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "For Each Id Get Campaign Data",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "For Each Id Get Campaign Group Data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "CampaignGroupDataFlow",
						"type": "DataFlowReference"
					},
					"integrationRuntime": {
						"referenceName": "HighPerformanceIR",
						"type": "IntegrationRuntimeReference"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Ingest Into Campaign",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Ingest into CampaignGroup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "CampaignDataFlow",
						"type": "DataFlowReference"
					},
					"integrationRuntime": {
						"referenceName": "HighPerformanceIR",
						"type": "IntegrationRuntimeReference"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Distinct CampaignIds",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Ingest Into Campaign",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "Select Distinct CampaignId from Campaign",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Campaign",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "For Each Id Get Advertisment Data",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Distinct CampaignIds",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Distinct CampaignIds').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Ingest into AdvertismentStage",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"additionalHeaders": {
										"Authorization": {
											"value": "@pipeline().globalParameters.LinkedinKey",
											"type": "Expression"
										}
									}
								},
								"sink": {
									"type": "AzureSqlSink"
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"path": "['reference']"
											},
											"sink": {
												"name": "Name",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['changeAuditStamps']['created']['time']"
											},
											"sink": {
												"name": "Created",
												"type": "Int64"
											}
										},
										{
											"source": {
												"path": "['changeAuditStamps']['lastModified']['time']"
											},
											"sink": {
												"name": "Modified",
												"type": "Int64"
											}
										},
										{
											"source": {
												"path": "['campaign']"
											},
											"sink": {
												"name": "CampaignId",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['id']"
											},
											"sink": {
												"name": "AdvertismentId",
												"type": "Int32"
											}
										},
										{
											"source": {
												"path": "['type']"
											},
											"sink": {
												"name": "Type",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['status']"
											},
											"sink": {
												"name": "Status",
												"type": "String"
											}
										}
									],
									"collectionReference": "$['elements']",
									"mapComplexValuesToString": true
								}
							},
							"inputs": [
								{
									"referenceName": "Linkedin",
									"type": "DatasetReference",
									"parameters": {
										"Url": {
											"value": "@concat('https://api.linkedin.com/v2/adCreativesV2?q=search&search.campaign.values[0]=urn:li:sponsoredCampaign:',item().CampaignId)",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "AdvertismentStage",
									"type": "DatasetReference"
								}
							]
						}
					]
				}
			},
			{
				"name": "For Each ID Get AdvertismentDetail Data",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Distinct CampaignIds",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Distinct CampaignIds').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Ingest Into AdvertismentDetailLinkedinStage",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"additionalHeaders": {
										"Authorization": {
											"value": "@pipeline().globalParameters.LinkedinKey",
											"type": "Expression"
										}
									}
								},
								"sink": {
									"type": "AzureSqlSink"
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"path": "['comments']"
											},
											"sink": {
												"name": "comments",
												"type": "Int32"
											}
										},
										{
											"source": {
												"path": "['costInUsd']"
											},
											"sink": {
												"name": "costInUsd",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['dateRange']['start']['month']"
											},
											"sink": {
												"name": "AdvertismentDateMonth",
												"type": "Int32"
											}
										},
										{
											"source": {
												"path": "['dateRange']['start']['day']"
											},
											"sink": {
												"name": "AdvertismentDateDay",
												"type": "Int32"
											}
										},
										{
											"source": {
												"path": "['dateRange']['start']['year']"
											},
											"sink": {
												"name": "AdvertismentDateYear",
												"type": "Int32"
											}
										},
										{
											"source": {
												"path": "['dateRange']['end']['month']"
											},
											"sink": {
												"name": "AdvertismentEndMonth",
												"type": "Int32"
											}
										},
										{
											"source": {
												"path": "['dateRange']['end']['day']"
											},
											"sink": {
												"name": "AdvertismentEndDay",
												"type": "Int32"
											}
										},
										{
											"source": {
												"path": "['dateRange']['end']['year']"
											},
											"sink": {
												"name": "AdvertismentEndYear",
												"type": "Int32"
											}
										},
										{
											"source": {
												"path": "['commentLikes']"
											},
											"sink": {
												"name": "commentLikes",
												"type": "Int32"
											}
										},
										{
											"source": {
												"path": "['follows']"
											},
											"sink": {
												"name": "follows",
												"type": "Int32"
											}
										},
										{
											"source": {
												"path": "['impressions']"
											},
											"sink": {
												"name": "impressions",
												"type": "Int32"
											}
										},
										{
											"source": {
												"path": "['otherEngagements']"
											},
											"sink": {
												"name": "otherEngagements",
												"type": "Int32"
											}
										},
										{
											"source": {
												"path": "['shares']"
											},
											"sink": {
												"name": "shares",
												"type": "Int32"
											}
										},
										{
											"source": {
												"path": "['cardImpressions']"
											},
											"sink": {
												"name": "cardImpressions",
												"type": "Int32"
											}
										},
										{
											"source": {
												"path": "['clicks']"
											},
											"sink": {
												"name": "clicks",
												"type": "Int32"
											}
										},
										{
											"source": {
												"path": "['cardClicks']"
											},
											"sink": {
												"name": "cardClicks",
												"type": "Int32"
											}
										},
										{
											"source": {
												"path": "['totalEngagements']"
											},
											"sink": {
												"name": "totalEngagements",
												"type": "Int32"
											}
										},
										{
											"source": {
												"path": "['reactions']"
											},
											"sink": {
												"name": "reactions",
												"type": "Int32"
											}
										},
										{
											"source": {
												"path": "['approximateUniqueImpressions']"
											},
											"sink": {
												"name": "approximateUniqueImpressions",
												"type": "Int32"
											}
										},
										{
											"source": {
												"path": "['pivotValues']"
											},
											"sink": {
												"name": "AdvertismentId",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['likes']"
											},
											"sink": {
												"name": "likes",
												"type": "Int32"
											}
										}
									],
									"collectionReference": "$['elements']",
									"mapComplexValuesToString": true
								}
							},
							"inputs": [
								{
									"referenceName": "Linkedin",
									"type": "DatasetReference",
									"parameters": {
										"Url": {
											"value": "@concat('https://api.linkedin.com/v2/adAnalyticsV2?q=analytics&pivot=CREATIVE&timeGranularity=DAILY&dateRange.start.day=',variables('AnalyticsStartDate'),'&dateRange.start.month=',variables('AnalyticsStartMonth'),'&dateRange.start.year=',variables('AnalyticsStartYear'),'&campaigns[0]=urn:li:sponsoredCampaign:',item().CampaignId,'&fields=clicks,impressions,dateRange,costInUsd,totalEngagements,reactions,comments,shares,follows,otherEngagements,pivotValues,commentLikes,approximateUniqueImpressions,cardClicks,cardImpressions,likes')",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "AdvertismentDetailLinkedinStage",
									"type": "DatasetReference"
								}
							]
						}
					]
				}
			},
			{
				"name": "Ingest into Advertisment",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "For Each Id Get Advertisment Data",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "For Each ID Get AdvertismentDetail Data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "AdvertismentDataFlow",
						"type": "DataFlowReference"
					},
					"integrationRuntime": {
						"referenceName": "HighPerformanceIR",
						"type": "IntegrationRuntimeReference"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Ingest into AdvertismentDetailLinkedin",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Ingest into Advertisment",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "AdvertismentDetailLinkedinDataFlow",
						"type": "DataFlowReference"
					},
					"integrationRuntime": {
						"referenceName": "HighPerformanceIR",
						"type": "IntegrationRuntimeReference"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Get Distinct AdvertismentIds",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Ingest into Advertisment",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "Select distinct AdvertismentId from Advertisment",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Advertisment",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "For Each ID Get Advertisment Text",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Distinct AdvertismentIds",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Distinct AdvertismentIds').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Ingest into AdvertismentTextStage",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"additionalHeaders": {
										"Authorization": {
											"value": "@pipeline().globalParameters.LinkedinKey",
											"type": "Expression"
										}
									}
								},
								"sink": {
									"type": "AzureSqlSink"
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"path": "$['variables']['data']['com.linkedin.ads.SponsoredUpdateCreativeVariables']['share~']['text']['text']"
											},
											"sink": {
												"name": "Text",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['variables']['data']['com.linkedin.ads.SponsoredUpdateCreativeVariables']['share~']['subject']"
											},
											"sink": {
												"name": "Title",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['variables']['data']['com.linkedin.ads.SponsoredUpdateCreativeVariables']['share~']['content']['contentEntities'][0]['description']"
											},
											"sink": {
												"name": "Description",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['variables']['data']['com.linkedin.ads.SponsoredUpdateCreativeVariables']['share~']['content']['contentEntities'][0]['entityLocation']"
											},
											"sink": {
												"name": "EntityLocation",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['variables']['data']['com.linkedin.ads.SponsoredUpdateCreativeVariables']['share~']['content']['contentEntities'][0]['title']"
											},
											"sink": {
												"name": "Name",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['id']"
											},
											"sink": {
												"name": "AdvertismentId",
												"type": "String"
											}
										}
									],
									"collectionReference": "",
									"mapComplexValuesToString": false
								}
							},
							"inputs": [
								{
									"referenceName": "Linkedin",
									"type": "DatasetReference",
									"parameters": {
										"Url": {
											"value": "@replace(variables('ProjectionUrl'),'AdvertismentIdPlaceHolder',string(item().AdvertismentId))",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "AdvertismentTextStage",
									"type": "DatasetReference"
								}
							]
						}
					]
				}
			},
			{
				"name": "Clean up Linkedin Tables",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Check if Differential",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spCleanUpLinkedinTables]"
				},
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Ingest Into LinkedinShareStage",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Clean up Linkedin Tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"additionalHeaders": {
							"Authorization": {
								"value": "@pipeline().globalParameters.LinkedinKey",
								"type": "Expression"
							}
						},
						"paginationRules": {
							"AbsoluteUrl": "$.paging.links[?(@.rel=='next')].href"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "['owner']"
								},
								"sink": {
									"name": "owner",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['activity']"
								},
								"sink": {
									"name": "activity",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['created']['actor']"
								},
								"sink": {
									"name": "createdby",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['created']['time']"
								},
								"sink": {
									"name": "created",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['lastModified']['actor']"
								},
								"sink": {
									"name": "lastModifiedby",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['lastModified']['time']"
								},
								"sink": {
									"name": "lastModified",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['text']['text']"
								},
								"sink": {
									"name": "text",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['id']"
								},
								"sink": {
									"name": "id",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['content']['contentEntities'][0]['entityLocation']"
								},
								"sink": {
									"name": "entityLocation",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['content']['contentEntities'][0]['entity']"
								},
								"sink": {
									"name": "entity",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['content']['description']"
								},
								"sink": {
									"name": "description",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['content']['title']"
								},
								"sink": {
									"name": "title",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['content']['shareMediaCategory']"
								},
								"sink": {
									"name": "shareMediaCategory",
									"type": "String"
								}
							}
						],
						"collectionReference": "$['elements']"
					}
				},
				"inputs": [
					{
						"referenceName": "Linkedin",
						"type": "DatasetReference",
						"parameters": {
							"Url": "https://api.linkedin.com/v2/shares?count=100&q=owners&owners=urn:li:organization:95496"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "LinkedinShareStage",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Populate LinkedinShareString",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Ingest Into LInkedinShare",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spPopulateLinkedinShareString]"
				},
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "ForEach ShareString",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get ShareString for URL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get ShareString for URL').output.value\n",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Ingest into LinkedinShareMetrics",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"additionalHeaders": {
										"Authorization": {
											"value": "@pipeline().globalParameters.LinkedinKey",
											"type": "Expression"
										}
									}
								},
								"sink": {
									"type": "AzureSqlSink"
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"path": "['totalShareStatistics']['shareCount']"
											},
											"sink": {
												"name": "ShareCount",
												"type": "Double"
											}
										},
										{
											"source": {
												"path": "['totalShareStatistics']['likeCount']"
											},
											"sink": {
												"name": "LikeCount",
												"type": "Double"
											}
										},
										{
											"source": {
												"path": "['totalShareStatistics']['engagement']"
											},
											"sink": {
												"name": "Engagement",
												"type": "Double"
											}
										},
										{
											"source": {
												"path": "['totalShareStatistics']['clickCount']"
											},
											"sink": {
												"name": "ClickCount",
												"type": "Double"
											}
										},
										{
											"source": {
												"path": "['totalShareStatistics']['impressionCount']"
											},
											"sink": {
												"name": "ImpressionCount",
												"type": "Double"
											}
										},
										{
											"source": {
												"path": "['totalShareStatistics']['commentCount']"
											},
											"sink": {
												"name": "CommentCount",
												"type": "Double"
											}
										},
										{
											"source": {
												"path": "['share']"
											},
											"sink": {
												"name": "ShareId",
												"type": "String"
											}
										}
									],
									"collectionReference": "$['elements']"
								}
							},
							"inputs": [
								{
									"referenceName": "DynamicRESTDataSet",
									"type": "DatasetReference",
									"parameters": {
										"Url": {
											"value": "@concat('https://api.linkedin.com/v2/organizationalEntityShareStatistics?q=organizationalEntity&organizationalEntity=urn:li:organization:95496&',item().ShareString)",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "LinkedinShareMetrics",
									"type": "DatasetReference"
								}
							]
						}
					]
				}
			},
			{
				"name": "Get ShareString for URL",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Populate LinkedinShareString",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": " select ShareString from LinkedinShareString order by Id asc",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "LinkedinShareStage",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Ingest Into LInkedinShare",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Ingest Into LinkedinShareStage",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "ShareDataFlow",
						"type": "DataFlowReference"
					},
					"integrationRuntime": {
						"referenceName": "HighPerformanceIR",
						"type": "IntegrationRuntimeReference"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Tables list to Copy",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "For Each ID Get Advertisment Text",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Ingest into AdvertismentDetailLinkedin",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "\nselect 'Advertisment' as TblName\nunion\nselect 'Campaign' as TblName\nunion\nselect 'AdvertismentTextStage' as TblName",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "HubspotContact",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Copy Each Table to Prod",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Tables list to Copy",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Tables list to Copy').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Ingest into Prod Tables",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@{concat('select * from dbo.',item().TblName)}",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "AzureSqlSink",
									"preCopyScript": {
										"value": "@{concat('delete from prod.',item().TblName)}",
										"type": "Expression"
									},
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DynamicDataSet",
									"type": "DatasetReference",
									"parameters": {
										"TblName": "@item().TblName"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DynamicDataSet",
									"type": "DatasetReference",
									"parameters": {
										"TblName": {
											"value": "@item().TblName",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Organic Tables list to Copy",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "ForEach ShareString",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select 'LinkedinShareMetrics' as TblName\nunion\nselect 'LinkedinShare' as TblName",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "HubspotContact",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Copy Each Organic Table to Prod",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Organic Tables list to Copy",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Organic Tables list to Copy').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Ingest into Organic Prod Tables",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@{concat('select * from dbo.',item().TblName)}",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "AzureSqlSink",
									"preCopyScript": {
										"value": "@{concat('delete from prod.',item().TblName)}",
										"type": "Expression"
									},
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DynamicDataSet",
									"type": "DatasetReference",
									"parameters": {
										"TblName": "@item().TblName"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DynamicDataSet",
									"type": "DatasetReference",
									"parameters": {
										"TblName": {
											"value": "@item().TblName",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Ingest into ProdAdvertismentDetailLinkedin",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy Each Table to Prod",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "@{concat('Delete from prod.AdvertismentDetailLinkedin where AdvertismentStartDate >=''',variables('StartDate'),'''')}",
							"type": "Expression"
						},
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "AdvertismentDetailLinkedin",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ProdAdvertismentDetailLinkedin",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Check if Differential",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(variables('Differential'), true)\n\n ",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Set StartDate",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "StartDate",
								"value": {
									"value": "@formatDateTime(adddays(utcnow(),-2),'yyyy-MM-dd')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set AnalyticsStartMonth",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set StartDate",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "AnalyticsStartMonth",
								"value": {
									"value": "@formatDateTime(adddays(utcnow(),-2),'MM')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set AnalyticsStartYear",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set StartDate",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "AnalyticsStartYear",
								"value": {
									"value": "@formatDateTime(adddays(utcnow(),-2),'yyyy')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set AnalyticsStateDate",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set StartDate",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "AnalyticsStartDate",
								"value": {
									"value": "@formatDateTime(adddays(utcnow(),-2),'dd')",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"variables": {
			"AnalyticsStartDate": {
				"type": "String",
				"defaultValue": "01"
			},
			"AnalyticsStartMonth": {
				"type": "String",
				"defaultValue": "05"
			},
			"AnalyticsStartYear": {
				"type": "String",
				"defaultValue": "2019"
			},
			"ProjectionUrl": {
				"type": "String",
				"defaultValue": "https://api.linkedin.com/v2/adCreativesV2/AdvertismentIdPlaceHolder?projection=(id,variables(data(*,com.linkedin.ads.SponsoredUpdateCreativeVariables(*,share~(subject,text(text),content(contentEntities(*(description,entityLocation,title))))))))"
			},
			"StartDate": {
				"type": "String"
			},
			"Differential": {
				"type": "Boolean",
				"defaultValue": true
			}
		},
		"annotations": [],
		"lastPublishTime": "2020-11-11T05:10:46Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}