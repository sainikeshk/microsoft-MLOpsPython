{
	"name": "GoogleAnalyticsPipeline",
	"properties": {
		"activities": [
			{
				"name": "Get Bearer Token",
				"type": "AzureFunctionActivity",
				"dependsOn": [
					{
						"activity": "Clean up tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"functionName": "GetGoogleAnalyticsAPIBearerToken",
					"method": "POST",
					"body": {
						"from": "Pipeline"
					}
				},
				"linkedServiceName": {
					"referenceName": "GoogleAnalyticsFunction",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Get Medium Data From Google API",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Get Bearer Token",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "POST",
						"requestBody": {
							"value": "@{replace(replace(replace(variables('BodyJSON'),'startDatePlaceholder',variables('StartDate')),'groupNamePlaceholder','ga:sourceMedium'),'viewIdPlaceholder',variables('ViewId'))}",
							"type": "Expression"
						},
						"additionalHeaders": {
							"Authorization": {
								"value": "@activity('Get Bearer Token').output.AccessTokenValue",
								"type": "Expression"
							},
							"Content-type": "application/json"
						}
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false,
					"dataIntegrationUnits": {
						"value": "@pipeline().globalParameters.DIUCount",
						"type": "Expression"
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "['dimensions']"
								},
								"sink": {
									"name": "MetricsArr",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['metrics'][0]['values']"
								},
								"sink": {
									"name": "ValuesArr",
									"type": "String"
								}
							}
						],
						"collectionReference": "$['reports'][0]['data']['rows']",
						"mapComplexValuesToString": true
					}
				},
				"inputs": [
					{
						"referenceName": "GoogleAnalyticsAPI",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "GoogleAnalyticsStage",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Ingest Medium Into GoogleAnalyticsData",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Get Medium Data From Google API",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "GoogleAnalyticsDataDataFlow",
						"type": "DataFlowReference",
						"parameters": {
							"GroupId": {
								"value": "1",
								"type": "Expression"
							}
						}
					},
					"integrationRuntime": {
						"referenceName": "HighPerformanceIR",
						"type": "IntegrationRuntimeReference"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Get Gender Data From Google API",
				"description": "",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Ingest Medium Into GoogleAnalyticsData",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "POST",
						"requestBody": {
							"value": "@{replace(replace(replace(variables('BodyJSON'),'startDatePlaceholder',variables('StartDate')),'groupNamePlaceholder','ga:userGender'),'viewIdPlaceholder',variables('ViewId'))}",
							"type": "Expression"
						},
						"additionalHeaders": {
							"Authorization": {
								"value": "@activity('Get Bearer Token').output.AccessTokenValue",
								"type": "Expression"
							},
							"Content-type": "application/json"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "Delete from GoogleAnalyticsStage",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": {
						"value": "@pipeline().globalParameters.DIUCount",
						"type": "Expression"
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "['dimensions']"
								},
								"sink": {
									"name": "MetricsArr",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['metrics'][0]['values']"
								},
								"sink": {
									"name": "ValuesArr",
									"type": "String"
								}
							}
						],
						"collectionReference": "$['reports'][0]['data']['rows']",
						"mapComplexValuesToString": true
					}
				},
				"inputs": [
					{
						"referenceName": "GoogleAnalyticsAPI",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "GoogleAnalyticsStage",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Ingest Gender Into GoogleAnalyticsData",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Get Gender Data From Google API",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "GoogleAnalyticsDataDataFlow",
						"type": "DataFlowReference",
						"parameters": {
							"GroupId": {
								"value": "2",
								"type": "Expression"
							}
						}
					},
					"integrationRuntime": {
						"referenceName": "HighPerformanceIR",
						"type": "IntegrationRuntimeReference"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Get Country Data From Google API",
				"description": "",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Ingest Gender Into GoogleAnalyticsData",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "POST",
						"requestBody": {
							"value": "@{replace(replace(replace(variables('BodyJSON'),'startDatePlaceholder',variables('StartDate')),'groupNamePlaceholder','ga:country'),'viewIdPlaceholder',variables('ViewId'))}",
							"type": "Expression"
						},
						"additionalHeaders": {
							"Authorization": {
								"value": "@activity('Get Bearer Token').output.AccessTokenValue",
								"type": "Expression"
							},
							"Content-type": "application/json"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "Delete from GoogleAnalyticsStage",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": {
						"value": "@pipeline().globalParameters.DIUCount",
						"type": "Expression"
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "['dimensions']"
								},
								"sink": {
									"name": "MetricsArr",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['metrics'][0]['values']"
								},
								"sink": {
									"name": "ValuesArr",
									"type": "String"
								}
							}
						],
						"collectionReference": "$['reports'][0]['data']['rows']",
						"mapComplexValuesToString": true
					}
				},
				"inputs": [
					{
						"referenceName": "GoogleAnalyticsAPI",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "GoogleAnalyticsStage",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Ingest Country Into GoogleAnalyticsData",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Get Country Data From Google API",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "GoogleAnalyticsDataDataFlow",
						"type": "DataFlowReference",
						"parameters": {
							"GroupId": {
								"value": "3",
								"type": "Expression"
							}
						}
					},
					"integrationRuntime": {
						"referenceName": "HighPerformanceIR",
						"type": "IntegrationRuntimeReference"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Get Age Data From Google",
				"description": "",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Ingest Country Into GoogleAnalyticsData",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "POST",
						"requestBody": {
							"value": "@{replace(replace(replace(variables('BodyJSON'),'startDatePlaceholder',variables('StartDate')),'groupNamePlaceholder','ga:userAgeBracket'),'viewIdPlaceholder',variables('ViewId'))}",
							"type": "Expression"
						},
						"additionalHeaders": {
							"Authorization": {
								"value": "@activity('Get Bearer Token').output.AccessTokenValue",
								"type": "Expression"
							},
							"Content-type": "application/json"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "Delete from GoogleAnalyticsStage",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": {
						"value": "@pipeline().globalParameters.DIUCount",
						"type": "Expression"
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "['dimensions']"
								},
								"sink": {
									"name": "MetricsArr",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['metrics'][0]['values']"
								},
								"sink": {
									"name": "ValuesArr",
									"type": "String"
								}
							}
						],
						"collectionReference": "$['reports'][0]['data']['rows']",
						"mapComplexValuesToString": true
					}
				},
				"inputs": [
					{
						"referenceName": "GoogleAnalyticsAPI",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "GoogleAnalyticsStage",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Ingest Age Into GoogleAnalyticsData",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Get Age Data From Google",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "GoogleAnalyticsDataDataFlow",
						"type": "DataFlowReference",
						"parameters": {
							"GroupId": {
								"value": "4",
								"type": "Expression"
							}
						}
					},
					"integrationRuntime": {
						"referenceName": "HighPerformanceIR",
						"type": "IntegrationRuntimeReference"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Get DeviceCategory Data From Google",
				"description": "",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Ingest Age Into GoogleAnalyticsData",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "POST",
						"requestBody": {
							"value": "@{replace(replace(replace(variables('BodyJSON'),'startDatePlaceholder',variables('StartDate')),'groupNamePlaceholder','ga:deviceCategory'),'viewIdPlaceholder',variables('ViewId'))}",
							"type": "Expression"
						},
						"additionalHeaders": {
							"Authorization": {
								"value": "@activity('Get Bearer Token').output.AccessTokenValue",
								"type": "Expression"
							},
							"Content-type": "application/json"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "Delete from GoogleAnalyticsStage",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": {
						"value": "@pipeline().globalParameters.DIUCount",
						"type": "Expression"
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "['dimensions']"
								},
								"sink": {
									"name": "MetricsArr",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['metrics'][0]['values']"
								},
								"sink": {
									"name": "ValuesArr",
									"type": "String"
								}
							}
						],
						"collectionReference": "$['reports'][0]['data']['rows']",
						"mapComplexValuesToString": true
					}
				},
				"inputs": [
					{
						"referenceName": "GoogleAnalyticsAPI",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "GoogleAnalyticsStage",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Ingest DeviceCategory Into GoogleAnalyticsData",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Get DeviceCategory Data From Google",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "GoogleAnalyticsDataDataFlow",
						"type": "DataFlowReference",
						"parameters": {
							"GroupId": {
								"value": "5",
								"type": "Expression"
							}
						}
					},
					"integrationRuntime": {
						"referenceName": "HighPerformanceIR",
						"type": "IntegrationRuntimeReference"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Get Campaign Data From Google",
				"description": "",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Ingest DeviceCategory Into GoogleAnalyticsData",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "POST",
						"requestBody": {
							"value": "@{replace(replace(replace(variables('BodyJSON'),'startDatePlaceholder',variables('StartDate')),'groupNamePlaceholder','ga:campaign'),'viewIdPlaceholder',variables('ViewId'))}",
							"type": "Expression"
						},
						"additionalHeaders": {
							"Authorization": {
								"value": "@activity('Get Bearer Token').output.AccessTokenValue",
								"type": "Expression"
							},
							"Content-type": "application/json"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "Delete from GoogleAnalyticsStage",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": {
						"value": "@pipeline().globalParameters.DIUCount",
						"type": "Expression"
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "['dimensions']"
								},
								"sink": {
									"name": "MetricsArr",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['metrics'][0]['values']"
								},
								"sink": {
									"name": "ValuesArr",
									"type": "String"
								}
							}
						],
						"collectionReference": "$['reports'][0]['data']['rows']",
						"mapComplexValuesToString": true
					}
				},
				"inputs": [
					{
						"referenceName": "GoogleAnalyticsAPI",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "GoogleAnalyticsStage",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Ingest Campaign Into GoogleAnalyticsData",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Get Campaign Data From Google",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "GoogleAnalyticsDataDataFlow",
						"type": "DataFlowReference",
						"parameters": {
							"GroupId": {
								"value": "6",
								"type": "Expression"
							}
						}
					},
					"integrationRuntime": {
						"referenceName": "HighPerformanceIR",
						"type": "IntegrationRuntimeReference"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Ingest into ProdGoogleAnalyticsData",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Ingest Campaign Into GoogleAnalyticsData",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "@{concat('Delete from Prod.GoogleAnalyticsData where SourceDate >=''',variables('StartDate'),'''')}",
							"type": "Expression"
						},
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": {
						"value": "@pipeline().globalParameters.DIUCount",
						"type": "Expression"
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "GroupId",
									"type": "Int16",
									"physicalType": "smallint"
								},
								"sink": {
									"name": "GroupId",
									"type": "Int16",
									"physicalType": "smallint"
								}
							},
							{
								"source": {
									"name": "GroupValue",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "GroupValue",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "SourceDate",
									"type": "DateTime",
									"physicalType": "date"
								},
								"sink": {
									"name": "SourceDate",
									"type": "DateTime",
									"physicalType": "date"
								}
							},
							{
								"source": {
									"name": "Users",
									"type": "Double",
									"physicalType": "float"
								},
								"sink": {
									"name": "Users",
									"type": "Double",
									"physicalType": "float"
								}
							},
							{
								"source": {
									"name": "NewUsers",
									"type": "Double",
									"physicalType": "float"
								},
								"sink": {
									"name": "NewUsers",
									"type": "Double",
									"physicalType": "float"
								}
							},
							{
								"source": {
									"name": "Pageviews",
									"type": "Double",
									"physicalType": "float"
								},
								"sink": {
									"name": "Pageviews",
									"type": "Double",
									"physicalType": "float"
								}
							},
							{
								"source": {
									"name": "SessionsPerUser",
									"type": "Double",
									"physicalType": "float"
								},
								"sink": {
									"name": "SessionsPerUser",
									"type": "Double",
									"physicalType": "float"
								}
							},
							{
								"source": {
									"name": "Sessions",
									"type": "Double",
									"physicalType": "float"
								},
								"sink": {
									"name": "Sessions",
									"type": "Double",
									"physicalType": "float"
								}
							},
							{
								"source": {
									"name": "BounceRate",
									"type": "Double",
									"physicalType": "float"
								},
								"sink": {
									"name": "BounceRate",
									"type": "Double",
									"physicalType": "float"
								}
							},
							{
								"source": {
									"name": "AvgSessionDuration",
									"type": "Double",
									"physicalType": "float"
								},
								"sink": {
									"name": "AvgSessionDuration",
									"type": "Double",
									"physicalType": "float"
								}
							},
							{
								"source": {
									"name": "Goal1ConversionRate",
									"type": "Double",
									"physicalType": "float"
								},
								"sink": {
									"name": "Goal1ConversionRate",
									"type": "Double",
									"physicalType": "float"
								}
							},
							{
								"source": {
									"name": "Goal1Completions",
									"type": "Double",
									"physicalType": "float"
								},
								"sink": {
									"name": "Goal1Completions",
									"type": "Double",
									"physicalType": "float"
								}
							},
							{
								"source": {
									"name": "Goal1Value",
									"type": "Double",
									"physicalType": "float"
								},
								"sink": {
									"name": "Goal1Value",
									"type": "Double",
									"physicalType": "float"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "GoogleAnalyticsData",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ProdGoogleAnalyticsData",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Clean up tables",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Check if Differential",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spCleanUpGoogleAnalyticsTables]"
				},
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Check if Differential",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(variables('Differential'), true)\n\n ",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Set StartDate",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "StartDate",
								"value": {
									"value": "@formatDateTime(adddays(utcnow(),-2),'yyyy-MM-dd')",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"variables": {
			"ViewId": {
				"type": "String",
				"defaultValue": "214321017"
			},
			"StartDate": {
				"type": "String",
				"defaultValue": "2020-01-01"
			},
			"BodyJSON": {
				"type": "String",
				"defaultValue": "{ \t\"reportRequests\": [ \t\t{ \t\t\t\"viewId\": \"viewIdPlaceholder\", \t\t\t\"dateRanges\": [ \t\t\t\t{ \t\t\t\t\t\"startDate\": \"startDatePlaceholder\", \t\t\t\t\t\"endDate\": \"today\" \t\t\t\t} \t\t\t], \t\t\t\"dimensions\": [ \t\t\t\t{ \t\t\t\t\t\"name\": \"groupNamePlaceholder\" \t\t\t\t}, \t\t\t\t{ \t\t\t\t\t\"name\": \"ga:date\" \t\t\t\t} \t\t\t], \t\t\t\"metrics\": [ \t\t\t\t{ \t\t\t\t\t\"expression\": \"ga:users\", \t\t\t\t\t\"alias\": \"Users\" \t\t\t\t}, \t\t\t\t{ \t\t\t\t\t\"expression\": \"ga:newUsers\", \t\t\t\t\t\"alias\": \"NewUsers\" \t\t\t\t}, \t\t\t\t{ \t\t\t\t\t\"expression\": \"ga:pageviews\", \t\t\t\t\t\"alias\": \"PageViews\" \t\t\t\t}, \t\t\t\t{ \t\t\t\t\t\"expression\": \"ga:sessionsPerUser\", \t\t\t\t\t\"alias\": \"SessionsPerUser\" \t\t\t\t}, \t\t\t\t{ \t\t\t\t\t\"expression\": \"ga:sessions\", \t\t\t\t\t\"alias\": \"Sessions\" \t\t\t\t}, \t\t\t\t{ \t\t\t\t\t\"expression\": \"ga:bounceRate\", \t\t\t\t\t\"alias\": \"BounceRate\" \t\t\t\t}, \t\t\t\t{ \t\t\t\t\t\"expression\": \"ga:avgSessionDuration\", \t\t\t\t\t\"alias\": \"AvgSessionDuration\" \t\t\t\t}, \t\t\t\t{ \t\t\t\t\t\"expression\": \"ga:goal1ConversionRate\", \t\t\t\t\t\"alias\": \"Goal1ConversionRate\" \t\t\t\t}, \t\t\t\t{ \t\t\t\t\t\"expression\": \"ga:goal1Completions\", \t\t\t\t\t\"alias\": \"Goal1Completions\" \t\t\t\t}, \t\t\t\t{ \t\t\t\t\t\"expression\": \"ga:goal1Value\", \t\t\t\t\t\"alias\": \"Goal1Value\" \t\t\t\t} \t\t\t], \t\t\t\"pageSize\": 10000 \t\t} \t] }"
			},
			"Differential": {
				"type": "Boolean",
				"defaultValue": true
			}
		},
		"annotations": [],
		"lastPublishTime": "2020-11-11T05:10:46Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}