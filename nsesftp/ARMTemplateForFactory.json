{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "nsesftp"
		},
		"AzureBatch1_accessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accessKey' of 'AzureBatch1'"
		},
		"AzureDatabricks1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks1'"
		},
		"AzureMySql1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureMySql1'"
		},
		"DashboardBlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DashboardBlobStorage'"
		},
		"DashboardDb_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DashboardDb'"
		},
		"DashboardTableStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DashboardTableStorage'"
		},
		"GetGoogleAdsBearerToken_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'GetGoogleAdsBearerToken'"
		},
		"GetGoogleDoubleClickBidManagerToken_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'GetGoogleDoubleClickBidManagerToken'"
		},
		"GetHubspotBearerToken_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'GetHubspotBearerToken'"
		},
		"GetTwitterAuthenticationHeader_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'GetTwitterAuthenticationHeader'"
		},
		"GoogleAnalyticsFunction_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'GoogleAnalyticsFunction'"
		},
		"GoogleDV360Function_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'GoogleDV360Function'"
		},
		"MSDynamicsAXLiveService_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'MSDynamicsAXLiveService'"
		},
		"PythonBatch_accessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accessKey' of 'PythonBatch'"
		},
		"SaveDV360MetricCSV_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'SaveDV360MetricCSV'"
		},
		"SaveDV360ReportFunction_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'SaveDV360ReportFunction'"
		},
		"SftpConnLs_privateKeyContent": {
			"type": "secureString",
			"metadata": "Secure string for 'privateKeyContent' of 'SftpConnLs'"
		},
		"SftpConnLs_passPhrase": {
			"type": "secureString",
			"metadata": "Secure string for 'passPhrase' of 'SftpConnLs'"
		},
		"TwitterAnalyticsRequestDatesCheck_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'TwitterAnalyticsRequestDatesCheck'"
		},
		"batchnse_accessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accessKey' of 'batchnse'"
		},
		"bintoasciiAdb_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'bintoasciiAdb'"
		},
		"indblobToindSql_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'indblobToindSql'"
		},
		"sftpbinaryBlob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sftpbinaryBlob'"
		},
		"AzureBatch1_properties_typeProperties_accountName": {
			"type": "string",
			"defaultValue": "nse"
		},
		"AzureBatch1_properties_typeProperties_batchUri": {
			"type": "string",
			"defaultValue": "https://nse.eastus.batch.azure.com"
		},
		"AzureBatch1_properties_typeProperties_poolName": {
			"type": "string",
			"defaultValue": "nse123"
		},
		"DynamicRESTAPI_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().Url}"
		},
		"GetGoogleAdsBearerToken_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://tfocodashboardfunctions.azurewebsites.net"
		},
		"GetGoogleDoubleClickBidManagerToken_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://tfocodashboardfunctions.azurewebsites.net"
		},
		"GetHubspotBearerToken_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://tfocodashboardfunctions.azurewebsites.net"
		},
		"GetTwitterAuthenticationHeader_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://tfocodashboardfunctions.azurewebsites.net"
		},
		"GoogleAnalyticsAPI_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://analyticsreporting.googleapis.com/v4/reports:batchGet"
		},
		"GoogleAnalyticsFunction_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://tfocodashboardfunctions.azurewebsites.net"
		},
		"GoogleDV360API_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().Url}"
		},
		"GoogleDV360Function_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://tfocodashboardfunctions.azurewebsites.net"
		},
		"LinkedinAPI_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().Url}"
		},
		"MSDynamicsAXLiveService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://tfo-live.operations.dynamics.com/data"
		},
		"MSDynamicsAXLiveService_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "722fb109-13f1-4aa0-9a39-dd9440082369"
		},
		"MSDynamicsAXLiveService_properties_typeProperties_aadResourceId": {
			"type": "string",
			"defaultValue": "https://tfo-live.operations.dynamics.com"
		},
		"MSDynamicsAXLiveService_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "7d55aa19-d4ad-4447-ac83-e17200bfa898"
		},
		"PythonBatch_properties_typeProperties_accountName": {
			"type": "string",
			"defaultValue": "nse"
		},
		"PythonBatch_properties_typeProperties_batchUri": {
			"type": "string",
			"defaultValue": "https://nse.eastus.batch.azure.com"
		},
		"PythonBatch_properties_typeProperties_poolName": {
			"type": "string",
			"defaultValue": "1234567"
		},
		"SaveDV360MetricCSV_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://tfocodashboardfunctions.azurewebsites.net"
		},
		"SaveDV360ReportFunction_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://tfocodashboardfunctions.azurewebsites.net"
		},
		"SftpConnLs_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "121.241.2.65"
		},
		"SftpConnLs_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "MAVRCM15"
		},
		"TwitterAnalyticsRequestDatesCheck_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://tfocodashboardfunctions.azurewebsites.net"
		},
		"batchnse_properties_typeProperties_accountName": {
			"type": "string",
			"defaultValue": "nsebatch"
		},
		"batchnse_properties_typeProperties_batchUri": {
			"type": "string",
			"defaultValue": "https://nsebatch.eastus.batch.azure.com"
		},
		"batchnse_properties_typeProperties_poolName": {
			"type": "string",
			"defaultValue": "nsePool"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/GoogleDV360CostPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Bearer Token",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "Cleanup Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "GetGoogleDoubleClickBidManagerToken",
							"method": "POST",
							"headers": {
								"client_id": {
									"value": "@variables('client_id')",
									"type": "Expression"
								},
								"client_secret": {
									"value": "@variables('client_secret')",
									"type": "Expression"
								},
								"refresh_token": {
									"value": "@variables('refresh_token')",
									"type": "Expression"
								}
							},
							"body": {
								"from": "Pipeline"
							}
						},
						"linkedServiceName": {
							"referenceName": "GetGoogleDoubleClickBidManagerToken",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Run DV360Query",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Bearer Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Authorization": {
										"value": "@activity('Get Bearer Token').output.AccessTokenValue",
										"type": "Expression"
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Delete from GoogleDV360QueryFile",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['queryId']"
										},
										"sink": {
											"name": "QueryId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['metadata']['title']"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['metadata']['googleCloudStoragePathForLatestReport']"
										},
										"sink": {
											"name": "StoragePath",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DynamicRESTDataSet",
								"type": "DatasetReference",
								"parameters": {
									"Url": "@replace(variables('RunUrl'),'QueryIdPlaceHolder',variables('QueryId'))"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "GoogleDV360QueryFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Get Generated CSV Report StoragePath",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Run DV360Query",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Select StoragePath from GoogleDV360QueryFile",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "GoogleDV360QueryFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Get Generated CSV Report",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Get Generated CSV Report StoragePath",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@activity('Get Generated CSV Report StoragePath').output.firstRow.StoragePath",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "Save CSV Report",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "Get Generated CSV Report",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "SaveDV360MetricsCSV",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@activity('Get Generated CSV Report').output.Response",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "SaveDV360MetricCSV",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Ingest into GoogleDV360CostMetricsStage",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Save CSV Report",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Advertiser ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AdvertiserId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Advertiser",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Advertiser",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Advertiser Currency",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AdvertiserCurrency",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Campaign ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CampaignId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Insertion Order",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "InsertionOrder",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Insertion Order ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "InsertionOrderId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Line Item",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LineItem",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Line Item ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LineItemId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Campaign",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Campaign",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Creative",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Creative",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Date",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Impressions",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Impressions",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Billable Impressions",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BillableImpressions",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Clicks",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Clicks",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Click Rate (CTR)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ClickRateCTR",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Total Conversions",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalConversions",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Post-Click Conversions",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PostClickConversions",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Post-View Conversions",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PostViewConversions",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Revenue (Adv Currency)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RevenueAdvCurrency",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Media Cost (Advertiser Currency)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MediaCostAdvetiserCurrency",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Billable Cost (Adv Currency)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BillableCostAdvertiserCurrency",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Platform Fee (Adv Currency)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PlatformFeeAdvertiserCurrency",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Platform Fee Rate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PlatformFeeRate",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DV360CostReport",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "GoogleDV360CostMetricsStage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Ingest into GoogleDV360CostMetrics",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Ingest into GoogleDV360CostMetricsStage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DV360CostMetricsDataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Currency": {},
									"GoogleDV360CostMetricsStage": {},
									"GoogleDV360CostMetrics": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "HighPerformanceIR",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Cleanup Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spCleanUpGoogleDV360CostTables]"
						},
						"linkedServiceName": {
							"referenceName": "DashboardDb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Ingest into ProdGoogleDV360CostMetrics",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Ingest into GoogleDV360CostMetrics",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Delete from prod.GoogleDV360CostMetrics",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "GoogleDV360CostMetrics",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ProdGoogleDV360CostMetrics",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"variables": {
					"QueryId": {
						"type": "String",
						"defaultValue": "737387306"
					},
					"RunUrl": {
						"type": "String",
						"defaultValue": "https://www.googleapis.com/doubleclickbidmanager/v1.1/query/QueryIdPlaceHolder"
					},
					"client_id": {
						"type": "String",
						"defaultValue": "846510467628-s82p2r3kns7tctorpmqhvs5asi2kbev1.apps.googleusercontent.com"
					},
					"client_secret": {
						"type": "String",
						"defaultValue": "HwnuWSil6GE-c5jd_6fBNqIQ"
					},
					"refresh_token": {
						"type": "String",
						"defaultValue": "1//03XUpD_KVRMaECgYIARAAGAMSNwF-L9IrWd-Iwn0uUSzlCIQBr_UvoA9g7wpRHlNrqI9VdSvGdQqZiQlTckpiDE_L8FaQ4tw1fF8"
					}
				},
				"folder": {
					"name": "DV360"
				},
				"annotations": [],
				"lastPublishTime": "2020-11-11T05:10:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/GetGoogleDoubleClickBidManagerToken')]",
				"[concat(variables('factoryId'), '/datasets/DynamicRESTDataSet')]",
				"[concat(variables('factoryId'), '/datasets/GoogleDV360QueryFile')]",
				"[concat(variables('factoryId'), '/linkedServices/SaveDV360MetricCSV')]",
				"[concat(variables('factoryId'), '/datasets/DV360CostReport')]",
				"[concat(variables('factoryId'), '/datasets/GoogleDV360CostMetricsStage')]",
				"[concat(variables('factoryId'), '/dataflows/DV360CostMetricsDataFlow')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/HighPerformanceIR')]",
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]",
				"[concat(variables('factoryId'), '/datasets/GoogleDV360CostMetrics')]",
				"[concat(variables('factoryId'), '/datasets/ProdGoogleDV360CostMetrics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GoogleDV360Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Bearer Token",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "Cleanup Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "GetGoogleDCMReportingAPIBearerToken",
							"method": "POST",
							"headers": {},
							"body": {
								"from": "Pipeline"
							}
						},
						"linkedServiceName": {
							"referenceName": "GoogleDV360Function",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Generate Report",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Bearer Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "POST",
								"requestBody": "",
								"additionalHeaders": {
									"Authorization": {
										"value": "@activity('Get Bearer Token').output.AccessTokenValue",
										"type": "Expression"
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Delete from GoogleDV360ReportFile",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "FileId",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['lastModifiedTime']"
										},
										"sink": {
											"name": "GeneratedTimeStamp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fileName']"
										},
										"sink": {
											"name": "FileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['dateRange']['startDate']"
										},
										"sink": {
											"name": "StartDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['dateRange']['endDate']"
										},
										"sink": {
											"name": "EndDate",
											"type": "String"
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "GoogleDV360API",
								"type": "DatasetReference",
								"parameters": {
									"Url": {
										"value": "@replace(replace(variables('ReportGenerationUrl'),'ProfileIdPlaceholder',variables('ProfileId')),'ReportIdPlaceholder',variables('ReportId'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "GoogleDV360ReportFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Get Report FileId",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Generate Report",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Select CAST(FileId as varchar) as FileId from GoogleDV360ReportFile",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "GoogleDV360ReportFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Get Report File",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Get Report FileId",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@replace(replace(variables('FileDownloadUrl'),'ProfileIdPlaceholder',variables('ProfileId')),'FileIdPlaceholder',activity('Get Report FileId').output.firstRow.FileId)",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {
								"Authorization": {
									"value": "@activity('Get Bearer Token').output.AccessTokenValue",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Save Report File",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "Get Report File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "SaveDV360Report",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@activity('Get Report File').output.Response",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "SaveDV360ReportFunction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Ingest into GoogleDV360CampaignStage",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Save Report File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Delete from GoogleDV360CampaignStage",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Campaign",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CampaignName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Campaign ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CampaignId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Creative",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Creative",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Date",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Impressions",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Impressions",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Clicks",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Clicks",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Click Rate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ClickRate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Total Conversions",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalConversions",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Click-through Conversions",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ClickThroughConversions",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Remarketing : TFO - tfoco.com - Detail Submit: Total Conversions",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TfocoComDetailSubmitTotalConversions",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Remarketing : TFO - new tfoco.com - Global Tag: Total Conversions",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NewTfocoComGlobalTagTotalConversions",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Remarketing : TFO - new tfoco.com - Homepage - Visit: Total Conversions",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NewTfocoComHomePageVisitTotalConversions",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Remarketing : TFO - new tfoco.com - Investment Planner - Visit: Total Conversions",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NewTfocoComInvestmentPlannerVisitTotalConversions",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Remarketing : TFO - new tfoco.com - Portfolio Planner - Visit: Total Conversions",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NewTfocoComPortfolioPlannerVisitTotalConversions",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Remarketing : TFO - new tfoco.com - Webinar signup: Total Conversions",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NewTfocoComWebinarSignupTotalConversions",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Remarketing : TFO - new tfoco.com - Detail Submit: Total Conversions",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NewTfocoComDetailSubmitTotalConversions",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Remarketing : TFO - tfoco.com - Homepage - Visit: Total Conversions",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TfocoComHomePageVisitTotalConversions",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Remarketing : TFO - tfoco.com - Wealth Planning - Visit: Total Conversions",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TfocoComWealthPlanningTotalConversions",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Remarketing : TFO - tfoco.com - Who We Are - Visit: Total Conversions\r",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TfocoComWhoWeAreTotalConversions",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DV360CampaignCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "GoogleDV360CampaignStage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Ingest into GoogleDV360Campaign",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Ingest into GoogleDV360CampaignStage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DV360CampaignDataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"GoogleDV360CampaignStage": {},
									"GoogleDV360Campaign": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "HighPerformanceIR",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Cleanup Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spCleanUpGoogleDV360CampaignTables]"
						},
						"linkedServiceName": {
							"referenceName": "DashboardDb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Ingest into ProdGoogleDV360Campaign",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Ingest into GoogleDV360Campaign",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Delete from prod.GoogleDV360Campaign",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CampaignId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CampaignId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CampaignName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CampaignName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Creative",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Creative",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Impressions",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Impressions",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Clicks",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Clicks",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "ClickRate",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "ClickRate",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "TotalConversions",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "TotalConversions",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "ClickThroughConversions",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "ClickThroughConversions",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "TfocoComDetailSubmitTotalConversions",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "TfocoComDetailSubmitTotalConversions",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "NewTfocoComGlobalTagTotalConversions",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "NewTfocoComGlobalTagTotalConversions",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "NewTfocoComHomePageVisitTotalConversions",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "NewTfocoComHomePageVisitTotalConversions",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "NewTfocoComInvestmentPlannerVisitTotalConversions",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "NewTfocoComInvestmentPlannerVisitTotalConversions",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "NewTfocoComPortfolioPlannerVisitTotalConversions",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "NewTfocoComPortfolioPlannerVisitTotalConversions",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "NewTfocoComWebinarSignupTotalConversions",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "NewTfocoComWebinarSignupTotalConversions",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "NewTfocoComDetailSubmitTotalConversions",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "NewTfocoComDetailSubmitTotalConversions",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "TfocoComHomePageVisitTotalConversions",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "TfocoComHomePageVisitTotalConversions",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "TfocoComWealthPlanningTotalConversions",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "TfocoComWealthPlanningTotalConversions",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "TfocoComWhoWeAreTotalConversions",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "TfocoComWhoWeAreTotalConversions",
											"type": "Double",
											"physicalType": "float"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "GoogleDV360Campaign",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ProdGoogleDV360Campaign",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"variables": {
					"ProfileId": {
						"type": "String",
						"defaultValue": "6035039"
					},
					"ReportId": {
						"type": "String",
						"defaultValue": "735756341"
					},
					"ReportGenerationUrl": {
						"type": "String",
						"defaultValue": "https://www.googleapis.com/dfareporting/v3.4/userprofiles/ProfileIdPlaceholder/reports/ReportIdPlaceholder/run"
					},
					"FileDownloadUrl": {
						"type": "String",
						"defaultValue": "https://www.googleapis.com/dfareporting/v3.4/reports/ProfileIdPlaceholder/files/FileIdPlaceholder?alt=media"
					}
				},
				"folder": {
					"name": "DV360"
				},
				"annotations": [],
				"lastPublishTime": "2020-11-11T05:10:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/GoogleDV360Function')]",
				"[concat(variables('factoryId'), '/datasets/GoogleDV360API')]",
				"[concat(variables('factoryId'), '/datasets/GoogleDV360ReportFile')]",
				"[concat(variables('factoryId'), '/linkedServices/SaveDV360ReportFunction')]",
				"[concat(variables('factoryId'), '/datasets/DV360CampaignCSV')]",
				"[concat(variables('factoryId'), '/datasets/GoogleDV360CampaignStage')]",
				"[concat(variables('factoryId'), '/dataflows/DV360CampaignDataFlow')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/HighPerformanceIR')]",
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]",
				"[concat(variables('factoryId'), '/datasets/GoogleDV360Campaign')]",
				"[concat(variables('factoryId'), '/datasets/ProdGoogleDV360Campaign')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterEngagementsMetricsPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until IsLastRequest is True",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set StartDate Variable From Parent Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('IsLastRequest'),true)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Check AnalyticsRequestDates",
									"type": "AzureFunctionActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"functionName": "TwitterAnalyticsRequestDatesCheck",
										"method": "GET",
										"headers": {
											"StartDate": {
												"value": "@variables('StartDate')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "TwitterAnalyticsRequestDatesCheck",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set IsLastReq",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Ingest into TwitterEnagagementMetricsStage",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "IsLastRequest",
										"value": {
											"value": "@activity('Check AnalyticsRequestDates').output.IsLastReq",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Get Authorization Header",
									"type": "AzureFunctionActivity",
									"dependsOn": [
										{
											"activity": "Set AnalyticsParams",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"functionName": "GetTwitterAuthenticationHeader",
										"method": "GET",
										"headers": {
											"ConsumerKey": {
												"value": "@pipeline().parameters.ConsumerKey",
												"type": "Expression"
											},
											"ConsumerKeySecret": {
												"value": "@pipeline().parameters.ConsumerKeySecret",
												"type": "Expression"
											},
											"AccessToken": {
												"value": "@pipeline().parameters.AccessToken",
												"type": "Expression"
											},
											"AccessTokenSecret": {
												"value": "@pipeline().parameters.AccessTokenSecret",
												"type": "Expression"
											},
											"APIUrl": {
												"value": "@replace(variables('AnalyticsUrl'),'AccountIdPlaceHolder', pipeline().parameters.AccountId)",
												"type": "Expression"
											},
											"UrlParams": {
												"value": "@variables('AnalyticsParams')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "GetTwitterAuthenticationHeader",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set AnalyticsParams",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Check AnalyticsRequestDates",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "AnalyticsParams",
										"value": {
											"value": "@replace(replace(replace('entity=LINE_ITEM&entity_ids=LineItemIdPlaceHolder&start_time=StartTimePlaceHolder&end_time=EndTimePlaceHolder&granularity=DAY&placement=ALL_ON_TWITTER&metric_groups=ENGAGEMENT,BILLING', 'LineItemIdPlaceHolder', pipeline().parameters.LineItemString),'StartTimePlaceHolder',activity('Check AnalyticsRequestDates').output.StartDate),'EndTimePlaceHolder',activity('Check AnalyticsRequestDates').output.EndDate)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Ingest into TwitterEnagagementMetricsStage",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Get Authorization Header",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"Authorization": {
													"value": "@activity('Get Authorization Header').output.AccessTokenValue",
													"type": "Expression"
												}
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "LineItemId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['impressions']"
													},
													"sink": {
														"name": "impressions",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['tweets_send']"
													},
													"sink": {
														"name": "tweets_send",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['billed_charge_local_micro']"
													},
													"sink": {
														"name": "billed_charge_local_micro",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['qualified_impressions']"
													},
													"sink": {
														"name": "qualified_impressions",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['follows']"
													},
													"sink": {
														"name": "follows",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['app_clicks']"
													},
													"sink": {
														"name": "app_clicks",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['retweets']"
													},
													"sink": {
														"name": "retweets",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['unfollows']"
													},
													"sink": {
														"name": "unfollows",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['likes']"
													},
													"sink": {
														"name": "likes",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['engagements']"
													},
													"sink": {
														"name": "engagements",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['clicks']"
													},
													"sink": {
														"name": "clicks",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['card_engagements']"
													},
													"sink": {
														"name": "card_engagements",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['poll_card_vote']"
													},
													"sink": {
														"name": "poll_card_vote",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['replies']"
													},
													"sink": {
														"name": "replies",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['billed_engagements']"
													},
													"sink": {
														"name": "billed_engagements",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['request']['params']['start_time']"
													},
													"sink": {
														"name": "StartDate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['request']['params']['end_time']"
													},
													"sink": {
														"name": "EndDate",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "DynamicRESTDataSet",
											"type": "DatasetReference",
											"parameters": {
												"Url": {
													"value": "@concat(replace(variables('AnalyticsUrl'),'AccountIdPlaceHolder', pipeline().parameters.AccountId),'?',variables('AnalyticsParams'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "TwitterEnagagementMetricsStage",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Set StartDate",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Ingest into TwitterEnagagementMetricsStage",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "StartDate",
										"value": {
											"value": "@activity('Check AnalyticsRequestDates').output.NextStartDate",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set IsLastRequest True",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Check AnalyticsRequestDates",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "Ingest into TwitterEnagagementMetricsStage",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "Get Authorization Header",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "IsLastRequest",
										"value": {
											"value": "@bool(true)",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Set StartDate Variable From Parent Pipeline",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "StartDate",
							"value": {
								"value": "@pipeline().parameters.StartDate",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"LineItemString": {
						"type": "string",
						"defaultValue": "h4kdj,h6wlt,h76yb,h7ehl,h7v2n,h846c,h87mc,h8oma,h918n,h9k3x,h9k4g,hehuo,hei55,hgcm1,hgq07,hh39c,hhzec,hi0ok,hj5ql,hkrxq"
					},
					"ConsumerKey": {
						"type": "string",
						"defaultValue": "0bNbRmwfcwUylurWUlMLXVw6s"
					},
					"ConsumerKeySecret": {
						"type": "string",
						"defaultValue": "tTrmn64h8rvHSNfnqYzKk6TOdug8lUIT9m1lu4wLWh7cSKt7IS"
					},
					"AccessToken": {
						"type": "string",
						"defaultValue": "1247510171749883906-Mw7rz6qlwk38ZIAdnzD0RmUPQSqw78"
					},
					"AccessTokenSecret": {
						"type": "string",
						"defaultValue": "lxDxAxy1H6EhHniLrNyBxwEIwmZbGeOLXgaNXrUmsRDew"
					},
					"AccountId": {
						"type": "string",
						"defaultValue": "18ce554fqwc"
					},
					"StartDate": {
						"type": "string",
						"defaultValue": "2020-01-01"
					}
				},
				"variables": {
					"AnalyticsUrl": {
						"type": "String",
						"defaultValue": "https://ads-api.twitter.com/8/stats/accounts/AccountIdPlaceHolder"
					},
					"StartDate": {
						"type": "String",
						"defaultValue": "2020-01-01"
					},
					"IsLastRequest": {
						"type": "Boolean"
					},
					"AnalyticsParams": {
						"type": "String",
						"defaultValue": "entity=LINE_ITEM&entity_ids=LineItemIdPlaceHolder&start_time=StartTimePlaceHolder&end_time=EndTimePlaceHolder&granularity=DAY&placement=ALL_ON_TWITTER&metric_groups=ENGAGEMENT,BILLING"
					}
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"lastPublishTime": "2020-11-11T05:10:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TwitterAnalyticsRequestDatesCheck')]",
				"[concat(variables('factoryId'), '/linkedServices/GetTwitterAuthenticationHeader')]",
				"[concat(variables('factoryId'), '/datasets/DynamicRESTDataSet')]",
				"[concat(variables('factoryId'), '/datasets/TwitterEnagagementMetricsStage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterOrganicPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Twitter Authentication Header For Organic Tweets",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "Cleanup Twitter Organic Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "GetTwitterAuthenticationHeader",
							"method": "GET",
							"headers": {
								"ConsumerKey": {
									"value": "@variables('ConsumerKey')",
									"type": "Expression"
								},
								"ConsumerKeySecret": {
									"value": "@variables('ConsumerKeySecret')",
									"type": "Expression"
								},
								"AccessToken": {
									"value": "@variables('AccessToken')",
									"type": "Expression"
								},
								"AccessTokenSecret": {
									"value": "@variables('AccessTokenSecret')",
									"type": "Expression"
								},
								"APIUrl": {
									"value": "@replace(variables('OrganicTweetUrl'),'AccountIdPlaceHolder', variables('AccountId'))",
									"type": "Expression"
								},
								"UrlParams": "timeline_type=ORGANIC&tweet_type=PUBLISHED&trim_user=true"
							}
						},
						"linkedServiceName": {
							"referenceName": "GetTwitterAuthenticationHeader",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Ingest Into TwitterOrganicTweetStage",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Twitter Authentication Header For Organic Tweets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Authorization": {
										"value": "@activity('Get Twitter Authentication Header For Organic Tweets').output.AccessTokenValue",
										"type": "Expression"
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['favorite_count']"
										},
										"sink": {
											"name": "favorite_count",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['retweet_count']"
										},
										"sink": {
											"name": "retweet_count",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['in_reply_to_status_id']"
										},
										"sink": {
											"name": "in_reply_to_status_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['created_at']"
										},
										"sink": {
											"name": "created_at",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['favorited']"
										},
										"sink": {
											"name": "favorited",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['full_text']"
										},
										"sink": {
											"name": "full_text",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['tweet_id']"
										},
										"sink": {
											"name": "tweet_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['request']['params']['account_id']"
										},
										"sink": {
											"name": "account_id",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['data']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "DynamicRESTDataSet",
								"type": "DatasetReference",
								"parameters": {
									"Url": {
										"value": "@concat(replace(variables('OrganicTweetUrl'),'AccountIdPlaceHolder', variables('AccountId')),'?timeline_type=ORGANIC&tweet_type=PUBLISHED&trim_user=true')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "TwitterOrganicTweetStage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Get Distinct OrganicTweetString",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Populate TwitterOrganicTweetString",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select  OrganicTweetString from TwitterOrganicTweetString",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TwitterOrganicTweetString",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Populate TwitterOrganicTweetString",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Ingest Into TwitterOrganicTweetStage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateTwitterOrganicTweetString]"
						},
						"linkedServiceName": {
							"referenceName": "DashboardDb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Ingest into TwitterOrganicTweetMetrics",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach OrganicTweetString",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spInsertTwitterOrganicEngagementData]"
						},
						"linkedServiceName": {
							"referenceName": "DashboardDb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Cleanup Twitter Organic Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Check if Differential",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spCleanUpTwitterOrganicTables]"
						},
						"linkedServiceName": {
							"referenceName": "DashboardDb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ForEach OrganicTweetString",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Distinct OrganicTweetString",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Distinct OrganicTweetString').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Execute TwitterOrganicTweetMetricsPipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "TwitterOrganicTweetMetricsPipeline",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"OrganicTweetIdString": {
												"value": "@item().OrganicTweetString ",
												"type": "Expression"
											},
											"ConsumerKey": {
												"value": "@variables('ConsumerKey')",
												"type": "Expression"
											},
											"ConsumerKeySecret": {
												"value": "@variables('ConsumerKeySecret')",
												"type": "Expression"
											},
											"AccessToken": {
												"value": "@variables('AccessToken')",
												"type": "Expression"
											},
											"AccessTokenSecret": {
												"value": "@variables('AccessTokenSecret')",
												"type": "Expression"
											},
											"AccountId": {
												"value": "@variables('AccountId')",
												"type": "Expression"
											},
											"StartDate": {
												"value": "@variables('StartDate')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Ingest Into TwitterOrganicTweet",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Ingest Into TwitterOrganicTweetStage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TwitterOrganicTweetFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"TwitterOrganicTweetStage": {},
									"TwitterOrganicTweet": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "HighPerformanceIR",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Ingest into ProdTwitterOrganicTweetMetrics",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Ingest into TwitterOrganicTweetMetrics",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Ingest Into TwitterOrganicTweet",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "@{concat('Delete from prod.TwitterOrganicTweetMetrics where MetricDate >=''',variables('StartDate'),'''')}",
									"type": "Expression"
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "TweetId",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "TweetId",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "MetricDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "MetricDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Impressions",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Impressions",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "TweetsSend",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "TweetsSend",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "QualifiedImpressions",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "QualifiedImpressions",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Follows",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Follows",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "AppClicks",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "AppClicks",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Retweets",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Retweets",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Unfollows",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Unfollows",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Likes",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Likes",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Engagements",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Engagements",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Clicks",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Clicks",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "CardEngagements",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "CardEngagements",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "PollCardVote",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "PollCardVote",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Replies",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Replies",
											"type": "Double",
											"physicalType": "float"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TwitterOrganicTweetMetrics",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ProdTwitterOrganicTweetMetrics",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Check if Differential",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('Differential'), true)\n\n ",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Set StartDate",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "StartDate",
										"value": {
											"value": "@formatDateTime(adddays(utcnow(),-2),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"variables": {
					"ConsumerKey": {
						"type": "String",
						"defaultValue": "0bNbRmwfcwUylurWUlMLXVw6s"
					},
					"ConsumerKeySecret": {
						"type": "String",
						"defaultValue": "tTrmn64h8rvHSNfnqYzKk6TOdug8lUIT9m1lu4wLWh7cSKt7IS"
					},
					"AccessToken": {
						"type": "String",
						"defaultValue": "1247510171749883906-Mw7rz6qlwk38ZIAdnzD0RmUPQSqw78"
					},
					"AccessTokenSecret": {
						"type": "String",
						"defaultValue": "lxDxAxy1H6EhHniLrNyBxwEIwmZbGeOLXgaNXrUmsRDew"
					},
					"AccountId": {
						"type": "String",
						"defaultValue": "18ce554fqwc"
					},
					"AnalyticsUrl": {
						"type": "String",
						"defaultValue": "https://ads-api.twitter.com/8/stats/accounts/AccountIdPlaceHolder"
					},
					"StartDate": {
						"type": "String",
						"defaultValue": "2020-01-01"
					},
					"OrganicTweetUrl": {
						"type": "String",
						"defaultValue": "https://ads-api.twitter.com/8/accounts/AccountIdPlaceHolder/tweets"
					},
					"Differential": {
						"type": "Boolean",
						"defaultValue": true
					}
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"lastPublishTime": "2020-11-11T05:10:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/GetTwitterAuthenticationHeader')]",
				"[concat(variables('factoryId'), '/datasets/DynamicRESTDataSet')]",
				"[concat(variables('factoryId'), '/datasets/TwitterOrganicTweetStage')]",
				"[concat(variables('factoryId'), '/datasets/TwitterOrganicTweetString')]",
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]",
				"[concat(variables('factoryId'), '/dataflows/TwitterOrganicTweetFlow')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/HighPerformanceIR')]",
				"[concat(variables('factoryId'), '/datasets/TwitterOrganicTweetMetrics')]",
				"[concat(variables('factoryId'), '/datasets/ProdTwitterOrganicTweetMetrics')]",
				"[concat(variables('factoryId'), '/pipelines/TwitterOrganicTweetMetricsPipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterOrganicTweetMetricsPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until IsOrganicLastRequest is True",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set OrganicStartDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('IsOrganicLastRequest'),true)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Check OrganicAnalyticsRequestDates",
									"type": "AzureFunctionActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"functionName": "TwitterAnalyticsRequestDatesCheck",
										"method": "GET",
										"headers": {
											"StartDate": {
												"value": "@variables('OrganicStartDate')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "TwitterAnalyticsRequestDatesCheck",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set IsOrganicLastReq",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Ingest into TwitterOrganicTweetMetricsStage",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "IsOrganicLastRequest",
										"value": {
											"value": "@activity('Check OrganicAnalyticsRequestDates').output.IsLastReq",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Get Organic Authorization Header",
									"type": "AzureFunctionActivity",
									"dependsOn": [
										{
											"activity": "Set OrganicAnalyticsParams",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"functionName": "GetTwitterAuthenticationHeader",
										"method": "GET",
										"headers": {
											"ConsumerKey": {
												"value": "@pipeline().parameters.ConsumerKey",
												"type": "Expression"
											},
											"ConsumerKeySecret": {
												"value": "@pipeline().parameters.ConsumerKeySecret",
												"type": "Expression"
											},
											"AccessToken": {
												"value": "@pipeline().parameters.AccessToken",
												"type": "Expression"
											},
											"AccessTokenSecret": {
												"value": "@pipeline().parameters.AccessTokenSecret",
												"type": "Expression"
											},
											"APIUrl": {
												"value": "@replace(variables('AnalyticsUrl'),'AccountIdPlaceHolder', pipeline().parameters.AccountId)",
												"type": "Expression"
											},
											"UrlParams": {
												"value": "@variables('OrganicAnalyticsParams')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "GetTwitterAuthenticationHeader",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set OrganicAnalyticsParams",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Check OrganicAnalyticsRequestDates",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "OrganicAnalyticsParams",
										"value": {
											"value": "@replace(replace(replace('entity=ORGANIC_TWEET&entity_ids=OrganicTweetIdPlaceHolder&start_time=StartTimePlaceHolder&end_time=EndTimePlaceHolder&granularity=DAY&placement=ALL_ON_TWITTER&metric_groups=ENGAGEMENT', 'OrganicTweetIdPlaceHolder', pipeline().parameters.OrganicTweetIdString),'StartTimePlaceHolder',activity('Check OrganicAnalyticsRequestDates').output.StartDate),'EndTimePlaceHolder',activity('Check OrganicAnalyticsRequestDates').output.EndDate)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Ingest into TwitterOrganicTweetMetricsStage",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Get Organic Authorization Header",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"Authorization": {
													"value": "@activity('Get Organic Authorization Header').output.AccessTokenValue",
													"type": "Expression"
												}
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "TweetId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['impressions']"
													},
													"sink": {
														"name": "impressions",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['tweets_send']"
													},
													"sink": {
														"name": "tweets_send",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['billed_charge_local_micro']"
													},
													"sink": {
														"name": "billed_charge_local_micro",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['qualified_impressions']"
													},
													"sink": {
														"name": "qualified_impressions",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['follows']"
													},
													"sink": {
														"name": "follows",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['app_clicks']"
													},
													"sink": {
														"name": "app_clicks",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['retweets']"
													},
													"sink": {
														"name": "retweets",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['unfollows']"
													},
													"sink": {
														"name": "unfollows",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['likes']"
													},
													"sink": {
														"name": "likes",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['engagements']"
													},
													"sink": {
														"name": "engagements",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['clicks']"
													},
													"sink": {
														"name": "clicks",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['card_engagements']"
													},
													"sink": {
														"name": "card_engagements",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['poll_card_vote']"
													},
													"sink": {
														"name": "poll_card_vote",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['replies']"
													},
													"sink": {
														"name": "replies",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id_data'][0]['metrics']['billed_engagements']"
													},
													"sink": {
														"name": "billed_engagements",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['request']['params']['start_time']"
													},
													"sink": {
														"name": "StartDate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['request']['params']['end_time']"
													},
													"sink": {
														"name": "EndDate",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['data']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "DynamicRESTDataSet",
											"type": "DatasetReference",
											"parameters": {
												"Url": {
													"value": "@concat(replace(variables('AnalyticsUrl'),'AccountIdPlaceHolder', pipeline().parameters.AccountId),'?',variables('OrganicAnalyticsParams'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "TwitterOrganicTweetMetricsStage",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Set StartDate",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Ingest into TwitterOrganicTweetMetricsStage",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "OrganicStartDate",
										"value": {
											"value": "@activity('Check OrganicAnalyticsRequestDates').output.NextStartDate",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set IsOrganicLastReq True",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Check OrganicAnalyticsRequestDates",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "Ingest into TwitterOrganicTweetMetricsStage",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "Get Organic Authorization Header",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "IsOrganicLastRequest",
										"value": {
											"value": "@bool(true)",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Set OrganicStartDate",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "OrganicStartDate",
							"value": {
								"value": "@pipeline().parameters.StartDate",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"OrganicTweetIdString": {
						"type": "string",
						"defaultValue": "1248317813162414080,1257728122658660354,1260473725662769152,1262366148609400834,1269637852830273536,1269683037278801923,1270344578831441921,1270346585562636288,1270365231299076096,1273652891098796036,1274750137013800960,1275395020296720385,1276181413906329601,1277185756436594688,1277198559172009987,1278704814830940161,1278705468878262278,1279767468106567680,1279784599011209217,1280086006314799105"
					},
					"ConsumerKey": {
						"type": "string",
						"defaultValue": "0bNbRmwfcwUylurWUlMLXVw6s"
					},
					"ConsumerKeySecret": {
						"type": "string",
						"defaultValue": "tTrmn64h8rvHSNfnqYzKk6TOdug8lUIT9m1lu4wLWh7cSKt7IS"
					},
					"AccessToken": {
						"type": "string",
						"defaultValue": "1247510171749883906-Mw7rz6qlwk38ZIAdnzD0RmUPQSqw78"
					},
					"AccessTokenSecret": {
						"type": "string",
						"defaultValue": "lxDxAxy1H6EhHniLrNyBxwEIwmZbGeOLXgaNXrUmsRDew"
					},
					"AccountId": {
						"type": "string",
						"defaultValue": "18ce554fqwc"
					},
					"StartDate": {
						"type": "string"
					}
				},
				"variables": {
					"AnalyticsUrl": {
						"type": "String",
						"defaultValue": "https://ads-api.twitter.com/8/stats/accounts/AccountIdPlaceHolder"
					},
					"OrganicStartDate": {
						"type": "String",
						"defaultValue": "2020-01-01"
					},
					"IsOrganicLastRequest": {
						"type": "Boolean"
					},
					"OrganicAnalyticsParams": {
						"type": "String",
						"defaultValue": "entity=ORGANIC_TWEET&entity_ids=OrganicTweetIdPlaceHolder&start_time=StartTimePlaceHolder&end_time=EndTimePlaceHolder&granularity=DAY&placement=ALL_ON_TWITTER&metric_groups=ENGAGEMENT"
					}
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"lastPublishTime": "2020-11-11T05:10:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TwitterAnalyticsRequestDatesCheck')]",
				"[concat(variables('factoryId'), '/linkedServices/GetTwitterAuthenticationHeader')]",
				"[concat(variables('factoryId'), '/datasets/DynamicRESTDataSet')]",
				"[concat(variables('factoryId'), '/datasets/TwitterOrganicTweetMetricsStage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Twitter Authentication Header For Accounts",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "Cleanup Twitter Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "GetTwitterAuthenticationHeader",
							"method": "GET",
							"headers": {
								"ConsumerKey": {
									"value": "@variables('ConsumerKey')",
									"type": "Expression"
								},
								"ConsumerKeySecret": {
									"value": "@variables('ConsumerKeySecret')",
									"type": "Expression"
								},
								"AccessToken": {
									"value": "@variables('AccessToken')",
									"type": "Expression"
								},
								"AccessTokenSecret": {
									"value": "@variables('AccessTokenSecret')",
									"type": "Expression"
								},
								"APIUrl": {
									"value": "@replace(variables('AccountUrl'),'AccountIdPlaceHolder', variables('AccountId'))",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "GetTwitterAuthenticationHeader",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Ingest Into TwitterAccountStage",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Twitter Authentication Header For Accounts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Authorization": {
										"value": "@activity('Get Twitter Authentication Header For Accounts').output.AccessTokenValue",
										"type": "Expression"
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['data']['name']"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['data']['business_name']"
										},
										"sink": {
											"name": "BusinessName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['data']['id']"
										},
										"sink": {
											"name": "AccountId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['data']['created_at']"
										},
										"sink": {
											"name": "Created",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['data']['updated_at']"
										},
										"sink": {
											"name": "Updated",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['data']['industry_type']"
										},
										"sink": {
											"name": "IndustryType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['data']['approval_status']"
										},
										"sink": {
											"name": "ApprovalStatus",
											"type": "String"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "DynamicRESTDataSet",
								"type": "DatasetReference",
								"parameters": {
									"Url": {
										"value": "@replace(variables('AccountUrl'),'AccountIdPlaceHolder', variables('AccountId'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "TwitterAccountStage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Ingest Into TwitterAccount",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Ingest Into TwitterAccountStage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TwitterAccountDataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"TwitterAccountStage": {},
									"InustryType": {},
									"ApprovalStatus": {},
									"TwitterAccount": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "HighPerformanceIR",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Get Twitter Authentication Header For Campaigns",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "Cleanup Twitter Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "GetTwitterAuthenticationHeader",
							"method": "GET",
							"headers": {
								"ConsumerKey": {
									"value": "@variables('ConsumerKey')",
									"type": "Expression"
								},
								"ConsumerKeySecret": {
									"value": "@variables('ConsumerKeySecret')",
									"type": "Expression"
								},
								"AccessToken": {
									"value": "@variables('AccessToken')",
									"type": "Expression"
								},
								"AccessTokenSecret": {
									"value": "@variables('AccessTokenSecret')",
									"type": "Expression"
								},
								"APIUrl": {
									"value": "@replace(variables('CampaignUrl'),'AccountIdPlaceHolder', variables('AccountId'))",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "GetTwitterAuthenticationHeader",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Ingest Into TwitterCampaignStage",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Twitter Authentication Header For Campaigns",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Authorization": {
										"value": "@activity('Get Twitter Authentication Header For Campaigns').output.AccessTokenValue\n",
										"type": "Expression"
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['start_time']"
										},
										"sink": {
											"name": "StartDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['servable']"
										},
										"sink": {
											"name": "Servable",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['daily_budget_amount_local_micro']"
										},
										"sink": {
											"name": "DailyBudgetAmount",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['end_time']"
										},
										"sink": {
											"name": "EndDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['total_budget_amount_local_micro']"
										},
										"sink": {
											"name": "TotalBudgetAmount",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "CampaignId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['entity_status']"
										},
										"sink": {
											"name": "Status",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['currency']"
										},
										"sink": {
											"name": "Currency",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['created_at']"
										},
										"sink": {
											"name": "Created",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['updated_at']"
										},
										"sink": {
											"name": "Modified",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['request']['params']['account_id']"
										},
										"sink": {
											"name": "AccountId",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['data']"
							}
						},
						"inputs": [
							{
								"referenceName": "DynamicRESTDataSet",
								"type": "DatasetReference",
								"parameters": {
									"Url": {
										"value": "@replace(variables('CampaignUrl'),'AccountIdPlaceHolder', variables('AccountId'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "TwitterCampaignStage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Get Twitter Authentication Header For LineItems",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "Cleanup Twitter Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "GetTwitterAuthenticationHeader",
							"method": "GET",
							"headers": {
								"ConsumerKey": {
									"value": "@variables('ConsumerKey')",
									"type": "Expression"
								},
								"ConsumerKeySecret": {
									"value": "@variables('ConsumerKeySecret')",
									"type": "Expression"
								},
								"AccessToken": {
									"value": "@variables('AccessToken')",
									"type": "Expression"
								},
								"AccessTokenSecret": {
									"value": "@variables('AccessTokenSecret')",
									"type": "Expression"
								},
								"APIUrl": {
									"value": "@replace(variables('LineItemUrl'),'AccountIdPlaceHolder', variables('AccountId'))",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "GetTwitterAuthenticationHeader",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Ingest Into TwitterLineItemStage",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Twitter Authentication Header For LineItems",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Authorization": {
										"value": "@activity('Get Twitter Authentication Header For LineItems').output.AccessTokenValue",
										"type": "Expression"
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['request']['params']['account_id']"
										},
										"sink": {
											"name": "AccountId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['bid_type']"
										},
										"sink": {
											"name": "BidType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['advertiser_user_id']"
										},
										"sink": {
											"name": "AdvertiserUserId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['start_time']"
										},
										"sink": {
											"name": "StartDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['bid_amount_local_micro']"
										},
										"sink": {
											"name": "BidAmountLocalMicro",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['automatically_select_bid']"
										},
										"sink": {
											"name": "AutomaticallySelectBid",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['advertiser_domain']"
										},
										"sink": {
											"name": "AdvertiserDomain",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['target_cpa_local_micro']"
										},
										"sink": {
											"name": "TargetCPALocalMicro",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['primary_web_event_tag']"
										},
										"sink": {
											"name": "PrimaryWebEventTag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['charge_by']"
										},
										"sink": {
											"name": "ChargeBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['product_type']"
										},
										"sink": {
											"name": "ProductType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['end_time']"
										},
										"sink": {
											"name": "EndDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['bid_unit']"
										},
										"sink": {
											"name": "BidUnit",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['total_budget_amount_local_micro']"
										},
										"sink": {
											"name": "TotalBudgetAmountLocalMicro",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['objective']"
										},
										"sink": {
											"name": "Objective",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "Id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['entity_status']"
										},
										"sink": {
											"name": "EntityStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['optimization']"
										},
										"sink": {
											"name": "Optimization",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['currency']"
										},
										"sink": {
											"name": "Currency",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['created_at']"
										},
										"sink": {
											"name": "Created",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['updated_at']"
										},
										"sink": {
											"name": "Updated",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['campaign_id']"
										},
										"sink": {
											"name": "CampaignId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['creative_source']"
										},
										"sink": {
											"name": "CreativeSource",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['data']"
							}
						},
						"inputs": [
							{
								"referenceName": "DynamicRESTDataSet",
								"type": "DatasetReference",
								"parameters": {
									"Url": {
										"value": "@replace(variables('LineItemUrl'),'AccountIdPlaceHolder', variables('AccountId'))\n",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "TwitterLineItemStage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Get Twitter Authentication Header For WebSiteCards",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "Cleanup Twitter Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "GetTwitterAuthenticationHeader",
							"method": "GET",
							"headers": {
								"ConsumerKey": {
									"value": "@variables('ConsumerKey')",
									"type": "Expression"
								},
								"ConsumerKeySecret": {
									"value": "@variables('ConsumerKeySecret')",
									"type": "Expression"
								},
								"AccessToken": {
									"value": "@variables('AccessToken')",
									"type": "Expression"
								},
								"AccessTokenSecret": {
									"value": "@variables('AccessTokenSecret')",
									"type": "Expression"
								},
								"APIUrl": {
									"value": "@replace(variables('CardUrl'),'AccountIdPlaceHolder', variables('AccountId'))",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "GetTwitterAuthenticationHeader",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Ingest Into TwitterWebSiteCardStage",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Twitter Authentication Header For WebSiteCards",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Authorization": {
										"value": "@activity('Get Twitter Authentication Header For WebSiteCards').output.AccessTokenValue",
										"type": "Expression"
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['website_shortened_url']"
										},
										"sink": {
											"name": "WebsiteShortenedUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['image_display_height']"
										},
										"sink": {
											"name": "ImageDisplayHeight",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['media_url']"
										},
										"sink": {
											"name": "MediaUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['website_display_url']"
										},
										"sink": {
											"name": "WebsiteDisplayUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "Id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['website_dest_url']"
										},
										"sink": {
											"name": "WebsiteDestUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['media_key']"
										},
										"sink": {
											"name": "MediaKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['created_at']"
										},
										"sink": {
											"name": "Created",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['image_display_width']"
										},
										"sink": {
											"name": "ImageDisplayWidth",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['website_title']"
										},
										"sink": {
											"name": "WebsiteTitle",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['card_uri']"
										},
										"sink": {
											"name": "CardUri",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['website_url']"
										},
										"sink": {
											"name": "WebsiteUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['updated_at']"
										},
										"sink": {
											"name": "Updated",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['card_type']"
										},
										"sink": {
											"name": "CardType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['request']['params']['account_id']"
										},
										"sink": {
											"name": "AccountId",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['data']"
							}
						},
						"inputs": [
							{
								"referenceName": "DynamicRESTDataSet",
								"type": "DatasetReference",
								"parameters": {
									"Url": "@replace(variables('CardUrl'),'AccountIdPlaceHolder', variables('AccountId'))"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "TwitterWebSiteCardStage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Cleanup Twitter Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Check if Differential",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spCleanUpTwitterTables]"
						},
						"linkedServiceName": {
							"referenceName": "DashboardDb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get LineItemsString",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Populate TwitterLineItemString",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select  LineItemString from [dbo].[TwitterLineItemString]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TwitterLineItemString",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Populate TwitterLineItemString",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Ingest Into TwitterLineItemStage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateTwitterLineItemString]"
						},
						"linkedServiceName": {
							"referenceName": "DashboardDb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ForEach LineItemString",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get LineItemsString",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get LineItemsString').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Execute EngagementsMetricsPipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "TwitterEngagementsMetricsPipeline",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"LineItemString": {
												"value": "@item().LineItemString",
												"type": "Expression"
											},
											"ConsumerKey": {
												"value": "@variables('ConsumerKey')",
												"type": "Expression"
											},
											"ConsumerKeySecret": {
												"value": "@variables('ConsumerKeySecret')",
												"type": "Expression"
											},
											"AccessToken": {
												"value": "@variables('AccessToken')",
												"type": "Expression"
											},
											"AccessTokenSecret": {
												"value": "@variables('AccessTokenSecret')",
												"type": "Expression"
											},
											"AccountId": {
												"value": "@variables('AccountId')",
												"type": "Expression"
											},
											"StartDate": {
												"value": "@variables('StartDate')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Ingest into TwitterEnagagementMetrics",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEach LineItemString",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spInsertTwitterEngagementData]"
						},
						"linkedServiceName": {
							"referenceName": "DashboardDb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get Twitter Authentication Header For Tweets",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "Cleanup Twitter Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "GetTwitterAuthenticationHeader",
							"method": "GET",
							"headers": {
								"ConsumerKey": {
									"value": "@variables('ConsumerKey')",
									"type": "Expression"
								},
								"ConsumerKeySecret": {
									"value": "@variables('ConsumerKeySecret')",
									"type": "Expression"
								},
								"AccessToken": {
									"value": "@variables('AccessToken')",
									"type": "Expression"
								},
								"AccessTokenSecret": {
									"value": "@variables('AccessTokenSecret')",
									"type": "Expression"
								},
								"APIUrl": {
									"value": "@replace(variables('TweetUrl'),'AccountIdPlaceHolder', variables('AccountId'))",
									"type": "Expression"
								},
								"UrlParams": "tweet_type=PUBLISHED"
							}
						},
						"linkedServiceName": {
							"referenceName": "GetTwitterAuthenticationHeader",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Ingest Into TwitterTweetStage",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Twitter Authentication Header For Tweets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Authorization": {
										"value": "@activity('Get Twitter Authentication Header For Tweets').output.AccessTokenValue",
										"type": "Expression"
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['source']"
										},
										"sink": {
											"name": "source",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['entities']['hashtags'][0]['text']"
										},
										"sink": {
											"name": "hashtags",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['in_reply_to_status_id_str']"
										},
										"sink": {
											"name": "in_reply_to_status_id_str",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['geo']"
										},
										"sink": {
											"name": "geo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['in_reply_to_user_id']"
										},
										"sink": {
											"name": "in_reply_to_user_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['retweet_count']"
										},
										"sink": {
											"name": "retweet_count",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['created_at']"
										},
										"sink": {
											"name": "created_at",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['tweet_type']"
										},
										"sink": {
											"name": "tweet_type",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['card_uri']"
										},
										"sink": {
											"name": "card_uri",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['full_text']"
										},
										"sink": {
											"name": "full_text",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['in_reply_to_screen_name']"
										},
										"sink": {
											"name": "in_reply_to_screen_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['tweet_id']"
										},
										"sink": {
											"name": "tweet_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['request']['params']['account_id']"
										},
										"sink": {
											"name": "account_id",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['data']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "DynamicRESTDataSet",
								"type": "DatasetReference",
								"parameters": {
									"Url": {
										"value": "@concat(replace(variables('TweetUrl'),'AccountIdPlaceHolder', variables('AccountId')),'?','tweet_type=PUBLISHED')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "TwitterTweetStage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Ingest into TwitterCampaign",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Ingest Into TwitterCampaignStage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TwitterCampaignDataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"TwitterCampaignStage": {},
									"Currency": {},
									"CampaignStatus": {},
									"TwitterCampaign": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "HighPerformanceIR",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Ingest into TwitterLineItem",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Ingest Into TwitterLineItemStage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TwitterLineItemDataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"TwitterLineItemStage": {},
									"BidType": {},
									"ChargeBy": {},
									"ProductType": {},
									"EntityStatus": {},
									"BidUnit": {},
									"TwitterObjetive": {},
									"Currency": {},
									"TwitterLineItem": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "HighPerformanceIR",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Get Twitter Authentication Header For Promoted Tweets",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "Cleanup Twitter Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "GetTwitterAuthenticationHeader",
							"method": "GET",
							"headers": {
								"ConsumerKey": {
									"value": "@variables('ConsumerKey')",
									"type": "Expression"
								},
								"ConsumerKeySecret": {
									"value": "@variables('ConsumerKeySecret')",
									"type": "Expression"
								},
								"AccessToken": {
									"value": "@variables('AccessToken')",
									"type": "Expression"
								},
								"AccessTokenSecret": {
									"value": "@variables('AccessTokenSecret')",
									"type": "Expression"
								},
								"APIUrl": {
									"value": "@replace(variables('PromotedTweetUrl'),'AccountIdPlaceHolder', variables('AccountId'))",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "GetTwitterAuthenticationHeader",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Ingest Into TwitterLineItemTweetStage",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Twitter Authentication Header For Promoted Tweets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Authorization": {
										"value": "@activity('Get Twitter Authentication Header For Promoted Tweets').output.AccessTokenValue",
										"type": "Expression"
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['line_item_id']"
										},
										"sink": {
											"name": "LineItemId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['entity_status']"
										},
										"sink": {
											"name": "entity_status",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['created_at']"
										},
										"sink": {
											"name": "created_at",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['updated_at']"
										},
										"sink": {
											"name": "updated_at",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['approval_status']"
										},
										"sink": {
											"name": "approval_status",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['tweet_id']"
										},
										"sink": {
											"name": "TweetId",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['data']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "DynamicRESTDataSet",
								"type": "DatasetReference",
								"parameters": {
									"Url": {
										"value": "@replace(variables('PromotedTweetUrl'),'AccountIdPlaceHolder', variables('AccountId'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "TwitterLineItemTweetStage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Ingest into TwitterTweet",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Ingest Into TwitterTweetStage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TwitterTweetDataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"TwitterTweetStage": {},
									"TwitterTweet": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "HighPerformanceIR",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Ingest into TwitterLineItemTweet",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Ingest Into TwitterLineItemTweetStage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TwitterLineItemTweetDataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"TwitterLineItemTweetStage": {},
									"TwitterLineItemTweet": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "HighPerformanceIR",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Tables list to Copy",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Ingest into TwitterEnagagementMetrics",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Ingest into TwitterCampaign",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Ingest into TwitterTweet",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Ingest into TwitterLineItemTweet",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Ingest into TwitterLineItem",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select 'TwitterLineItem' as TblName\nunion\nselect 'TwitterCampaign' as TblName\nunion\nselect 'TwitterLineItemTweet' as TblName\nunion\nselect 'TwitterTweet' as TblName",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "HubspotContact",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Copy Each Table to Prod",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Tables list to Copy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Tables list to Copy').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Ingest into Prod Tables",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@{concat('select * from dbo.',item().TblName)}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": {
												"value": "@{concat('delete from prod.',item().TblName)}",
												"type": "Expression"
											},
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DynamicDataSet",
											"type": "DatasetReference",
											"parameters": {
												"TblName": "@item().TblName"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DynamicDataSet",
											"type": "DatasetReference",
											"parameters": {
												"TblName": {
													"value": "@item().TblName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Copy Recent Metrics",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Each Table to Prod",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "@{concat('Delete from prod.TwitterEnagagementMetrics where MetricDate >''',variables('StartDate'),'''')}",
									"type": "Expression"
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "LineItemId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LineItemId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MetricDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "MetricDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Impressions",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Impressions",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "TweetsSend",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "TweetsSend",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "QualifiedImpressions",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "QualifiedImpressions",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Follows",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Follows",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "AppClicks",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "AppClicks",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Retweets",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Retweets",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Unfollows",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Unfollows",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Likes",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Likes",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Engagements",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Engagements",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Clicks",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Clicks",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "CardEngagements",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "CardEngagements",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "PollCardVote",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "PollCardVote",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Replies",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Replies",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "BilledChargeLocalMicro",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "BilledChargeLocalMicro",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "BilledEngagements",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "BilledEngagements",
											"type": "Double",
											"physicalType": "float"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TwitterEnagagementMetrics",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ProdTwitterEnagagementMetrics",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Check if Differential",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('Differential'), true)\n\n ",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Set StartDate",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "StartDate",
										"value": {
											"value": "@formatDateTime(adddays(utcnow(),-2),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"variables": {
					"ConsumerKey": {
						"type": "String",
						"defaultValue": "0bNbRmwfcwUylurWUlMLXVw6s"
					},
					"ConsumerKeySecret": {
						"type": "String",
						"defaultValue": "tTrmn64h8rvHSNfnqYzKk6TOdug8lUIT9m1lu4wLWh7cSKt7IS"
					},
					"AccessToken": {
						"type": "String",
						"defaultValue": "1247510171749883906-Mw7rz6qlwk38ZIAdnzD0RmUPQSqw78"
					},
					"AccessTokenSecret": {
						"type": "String",
						"defaultValue": "lxDxAxy1H6EhHniLrNyBxwEIwmZbGeOLXgaNXrUmsRDew"
					},
					"AccountUrl": {
						"type": "String",
						"defaultValue": "https://ads-api.twitter.com/8/accounts/AccountIdPlaceHolder"
					},
					"AccountId": {
						"type": "String",
						"defaultValue": "18ce554fqwc"
					},
					"CampaignUrl": {
						"type": "String",
						"defaultValue": "https://ads-api.twitter.com/8/accounts/AccountIdPlaceHolder/campaigns"
					},
					"LineItemUrl": {
						"type": "String",
						"defaultValue": "https://ads-api.twitter.com/8/accounts/AccountIdPlaceHolder/line_items"
					},
					"AnalyticsUrl": {
						"type": "String",
						"defaultValue": "https://ads-api.twitter.com/8/stats/accounts/AccountIdPlaceHolder"
					},
					"StartDate": {
						"type": "String",
						"defaultValue": "2020-01-01"
					},
					"CardUrl": {
						"type": "String",
						"defaultValue": "https://ads-api.twitter.com/8/accounts/AccountIdPlaceHolder/cards/website"
					},
					"TweetUrl": {
						"type": "String",
						"defaultValue": "https://ads-api.twitter.com/8/accounts/AccountIdPlaceHolder/tweets"
					},
					"PromotedTweetUrl": {
						"type": "String",
						"defaultValue": "https://ads-api.twitter.com/8/accounts/AccountIdPlaceHolder/promoted_tweets"
					},
					"OrganicTweetUrl": {
						"type": "String",
						"defaultValue": "https://ads-api.twitter.com/8/accounts/AccountIdPlaceHolder/tweets"
					},
					"Differential": {
						"type": "Boolean",
						"defaultValue": true
					}
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"lastPublishTime": "2020-11-11T05:10:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/GetTwitterAuthenticationHeader')]",
				"[concat(variables('factoryId'), '/datasets/DynamicRESTDataSet')]",
				"[concat(variables('factoryId'), '/datasets/TwitterAccountStage')]",
				"[concat(variables('factoryId'), '/dataflows/TwitterAccountDataFlow')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/HighPerformanceIR')]",
				"[concat(variables('factoryId'), '/datasets/TwitterCampaignStage')]",
				"[concat(variables('factoryId'), '/datasets/TwitterLineItemStage')]",
				"[concat(variables('factoryId'), '/datasets/TwitterWebSiteCardStage')]",
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]",
				"[concat(variables('factoryId'), '/datasets/TwitterLineItemString')]",
				"[concat(variables('factoryId'), '/datasets/TwitterTweetStage')]",
				"[concat(variables('factoryId'), '/dataflows/TwitterCampaignDataflow')]",
				"[concat(variables('factoryId'), '/dataflows/TwitterLineItemDataFlow')]",
				"[concat(variables('factoryId'), '/datasets/TwitterLineItemTweetStage')]",
				"[concat(variables('factoryId'), '/dataflows/TwitterTweetDataFlow')]",
				"[concat(variables('factoryId'), '/dataflows/TwitterLineItemTweetDataflow')]",
				"[concat(variables('factoryId'), '/datasets/HubspotContact')]",
				"[concat(variables('factoryId'), '/datasets/TwitterEnagagementMetrics')]",
				"[concat(variables('factoryId'), '/datasets/ProdTwitterEnagagementMetrics')]",
				"[concat(variables('factoryId'), '/pipelines/TwitterEngagementsMetricsPipeline')]",
				"[concat(variables('factoryId'), '/datasets/DynamicDataSet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/nseSftppipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sftp to blob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@addminutes(formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss'),-1)",
										"type": "Expression"
									},
									"modifiedDatetimeEnd": {
										"value": "@formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss')",
										"type": "Expression"
									},
									"wildcardFolderPath": {
										"value": "@concat('CM30/DATA/',formatDateTime(utcnow(),'MMMMddyyyy'))",
										"type": "Expression"
									},
									"wildcardFileName": "*.gz",
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "sftpfiles",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sftpbinBlob",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sftpfiles')]",
				"[concat(variables('factoryId'), '/datasets/sftpbinBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AccessTokenTableStorage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardTableStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureTable",
				"schema": [],
				"typeProperties": {
					"tableName": "AccessToken"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardTableStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Account')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AccountId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SourceId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "DisplayName",
						"type": "varchar"
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "CurrencyId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Created",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "Modified",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "StatusId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "TypeId",
						"type": "smallint",
						"precision": 5
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Account"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AccountStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AccountId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Currency",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "varchar"
					},
					{
						"name": "Created",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Modified",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "SourceId",
						"type": "smallint",
						"precision": 5
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AccountStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AccountStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AccountStatusId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "DisplayName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AccountStatus"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AccountType')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AccountTypeId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "DisplayName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AccountType"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AdWordsCampaignMetrics')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "GoogleAdWords"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CampaignId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "CampaignName",
						"type": "varchar"
					},
					{
						"name": "CampaignStatus",
						"type": "varchar"
					},
					{
						"name": "BudgetName",
						"type": "varchar"
					},
					{
						"name": "Budget",
						"type": "float",
						"precision": 15
					},
					{
						"name": "BudgetType",
						"type": "varchar"
					},
					{
						"name": "BudgetStatus",
						"type": "varchar"
					},
					{
						"name": "CampaignType",
						"type": "varchar"
					},
					{
						"name": "Impressions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Interactions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Cost",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Conversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "BidStrategyType",
						"type": "varchar"
					},
					{
						"name": "CostPerAllConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "InteractionRate",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ConversionsFromInteractionsRate",
						"type": "float",
						"precision": 15
					},
					{
						"name": "AverageCost",
						"type": "float",
						"precision": 15
					},
					{
						"name": "SegmentDate",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AdWordsCampaignMetrics"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AdWordsCampaignMetricsStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "GoogleAdWords"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CampaignResourceName",
						"type": "varchar"
					},
					{
						"name": "CampaignName",
						"type": "varchar"
					},
					{
						"name": "CampaignStatus",
						"type": "varchar"
					},
					{
						"name": "BudgetName",
						"type": "varchar"
					},
					{
						"name": "Budget",
						"type": "varchar"
					},
					{
						"name": "BudgetType",
						"type": "varchar"
					},
					{
						"name": "BudgetStatus",
						"type": "varchar"
					},
					{
						"name": "CampaignType",
						"type": "varchar"
					},
					{
						"name": "Impressions",
						"type": "varchar"
					},
					{
						"name": "Interactions",
						"type": "varchar"
					},
					{
						"name": "Cost",
						"type": "varchar"
					},
					{
						"name": "Conversions",
						"type": "varchar"
					},
					{
						"name": "BidStrategyType",
						"type": "varchar"
					},
					{
						"name": "CostPerAllConversions",
						"type": "varchar"
					},
					{
						"name": "InteractionRate",
						"type": "varchar"
					},
					{
						"name": "ConversionsFromInteractionsRate",
						"type": "varchar"
					},
					{
						"name": "AverageCost",
						"type": "varchar"
					},
					{
						"name": "SegmentDate",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AdWordsCampaignMetricsStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Advertisment')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AdvertismentId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "AdvertismentGroupId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StatusId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Headline",
						"type": "varchar"
					},
					{
						"name": "IntroductionText",
						"type": "varchar"
					},
					{
						"name": "Url",
						"type": "varchar"
					},
					{
						"name": "Line",
						"type": "varchar"
					},
					{
						"name": "SponsoredUpdateType",
						"type": "varchar"
					},
					{
						"name": "DSCName",
						"type": "varchar"
					},
					{
						"name": "CampaignId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TypeId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Created",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "Modified",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Advertisment"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AdvertismentDetailLinkedin')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AdvertismentId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AdvertismentStartDate",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "AdvertismentEndDate",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "TotalSpent",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ActionClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AdUnitClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ApproximateUniqueImpressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CardClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CardImpressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Clicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CommentLikes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Comments",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CompanyPageClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ConversionValueInLocalCurrency",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CostInLocalCurrency",
						"type": "float",
						"precision": 15
					},
					{
						"name": "CostInUsd",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ExternalWebsiteConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ExternalWebsitePostClickConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ExternalWebsitePostViewConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Follows",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FullScreenPlays",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Impressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LandingPageClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LeadGenerationMailContactInfoShares",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LeadGenerationMailInterestedClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Likes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OneClickLeadFormOpens",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OneClickLeads",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Opens",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OtherEngagements",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ReturnOnAreactionsdSpend",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Sends",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Shares",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TextUrlClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TotalEngagements",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VideoCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VideoFirstQuartileCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VideoMidpointCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VideoStarts",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VideoThirdQuartileCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VideoViews",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralCardClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralCardImpressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralCommentLikes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralComments",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralCompanyPageClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralExternalWebsiteConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralExternalWebsitePostClickConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralExternalWebsitePostViewConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralFollows",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralFullScreenPlays",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralImpressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralLandingPageClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralLikes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralOneClickLeadFormOpens",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralOneClickLeads",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralOtherEngagements",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralReactions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralShares",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralTotalEngagements",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralVideoCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralVideoFirstQuartileCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralVideoMidpointCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralVideoStarts",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralVideoThirdQuartileCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralVideoViews",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Reactions",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AdvertismentDetailLinkedin"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AdvertismentDetailLinkedinStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AdvertismentId",
						"type": "varchar"
					},
					{
						"name": "AdvertismentDateDay",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AdvertismentDateMonth",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AdvertismentDateYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AdvertismentEndDay",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AdvertismentEndMonth",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AdvertismentEndYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TotalSpent",
						"type": "int",
						"precision": 10
					},
					{
						"name": "actionClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "adUnitClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "approximateUniqueImpressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "cardClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "cardImpressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "clicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "commentLikes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "comments",
						"type": "int",
						"precision": 10
					},
					{
						"name": "companyPageClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "conversionValueInLocalCurrency",
						"type": "int",
						"precision": 10
					},
					{
						"name": "costInLocalCurrency",
						"type": "varchar"
					},
					{
						"name": "costInUsd",
						"type": "varchar"
					},
					{
						"name": "externalWebsiteConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "externalWebsitePostClickConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "externalWebsitePostViewConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "follows",
						"type": "int",
						"precision": 10
					},
					{
						"name": "fullScreenPlays",
						"type": "int",
						"precision": 10
					},
					{
						"name": "impressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "landingPageClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "leadGenerationMailContactInfoShares",
						"type": "int",
						"precision": 10
					},
					{
						"name": "leadGenerationMailInterestedClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "likes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "oneClickLeadFormOpens",
						"type": "int",
						"precision": 10
					},
					{
						"name": "oneClickLeads",
						"type": "int",
						"precision": 10
					},
					{
						"name": "opens",
						"type": "int",
						"precision": 10
					},
					{
						"name": "otherEngagements",
						"type": "int",
						"precision": 10
					},
					{
						"name": "returnOnAreactionsdSpend",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sends",
						"type": "int",
						"precision": 10
					},
					{
						"name": "shares",
						"type": "int",
						"precision": 10
					},
					{
						"name": "textUrlClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "totalEngagements",
						"type": "int",
						"precision": 10
					},
					{
						"name": "videoCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "videoFirstQuartileCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "videoMidpointCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "videoStarts",
						"type": "int",
						"precision": 10
					},
					{
						"name": "videoThirdQuartileCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "videoViews",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralCardClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralCardImpressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralCommentLikes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralComments",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralCompanyPageClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralExternalWebsiteConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralExternalWebsitePostClickConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralExternalWebsitePostViewConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralFollows",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralFullScreenPlays",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralImpressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralLandingPageClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralLikes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralOneClickLeadFormOpens",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralOneClickLeads",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralOtherEngagements",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralReactions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralShares",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralTotalEngagements",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralVideoCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralVideoFirstQuartileCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralVideoMidpointCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralVideoStarts",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralVideoThirdQuartileCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralVideoViews",
						"type": "int",
						"precision": 10
					},
					{
						"name": "reactions",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AdvertismentDetailLinkedinStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AdvertismentStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AdvertismentId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "varchar"
					},
					{
						"name": "AdvertismentGroup",
						"type": "varchar"
					},
					{
						"name": "Headline",
						"type": "varchar"
					},
					{
						"name": "IntroductionText",
						"type": "varchar"
					},
					{
						"name": "Url",
						"type": "varchar"
					},
					{
						"name": "Line",
						"type": "varchar"
					},
					{
						"name": "SponsoredUpdateType",
						"type": "varchar"
					},
					{
						"name": "CampaignId",
						"type": "varchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Created",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Modified",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "DSCName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AdvertismentStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AdvertismentStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AdvertismentStatusId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "DisplayName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AdvertismentStatus"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AdvertismentTextStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AdvertismentId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Text",
						"type": "varchar"
					},
					{
						"name": "Description",
						"type": "varchar"
					},
					{
						"name": "Title",
						"type": "varchar"
					},
					{
						"name": "EntityLocation",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AdvertismentTextStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AdvertismentType')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AdvertismentTypeId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "DisplayName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AdvertismentType"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ApprovalStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ApprovalStatusId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "DisplayName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ApprovalStatus"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BidType')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "DisplayName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BidType"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BidUnit')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "DisplayName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BidUnit"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BudgetServices')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MSDynamics"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SerialNumber",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "AccountingCurrencyAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "Clients",
						"type": "varchar"
					},
					{
						"name": "DepartmentId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CurrencyCode",
						"type": "varchar"
					},
					{
						"name": "Employee",
						"type": "varchar"
					},
					{
						"name": "MainAccountId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Customer",
						"type": "varchar"
					},
					{
						"name": "TransactionCurrencyCode",
						"type": "varchar"
					},
					{
						"name": "TransactionDate",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "ClassDim",
						"type": "varchar"
					},
					{
						"name": "ProjectId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Text",
						"type": "varchar"
					},
					{
						"name": "ReportingCurrencyAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "SPV",
						"type": "varchar"
					},
					{
						"name": "TransactionCurrencyAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "Vendor",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BudgetServices"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BudgetServicesStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MSDynamics"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SerialNumber",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "AccountingCurrencyAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "Clients",
						"type": "varchar"
					},
					{
						"name": "Department",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CurrencyCode",
						"type": "varchar"
					},
					{
						"name": "Employee",
						"type": "varchar"
					},
					{
						"name": "MainAccountId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Customer",
						"type": "varchar"
					},
					{
						"name": "TransactionCurrencyCode",
						"type": "varchar"
					},
					{
						"name": "TransDate",
						"type": "varchar"
					},
					{
						"name": "ClassDim",
						"type": "varchar"
					},
					{
						"name": "Project",
						"type": "varchar"
					},
					{
						"name": "Text",
						"type": "varchar"
					},
					{
						"name": "ReportingCurrencyAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "SPV",
						"type": "varchar"
					},
					{
						"name": "TransactionCurrencyAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "Vendor",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BudgetServicesStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Campaign')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CampaignId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "DisplayName",
						"type": "varchar"
					},
					{
						"name": "CampaignGroupId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TypeId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "AccountId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StatusId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "CostTypeId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ObjectiveId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Created",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "Modified",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "UnitCurrencyId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "UnitAmount",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DailyCurrencyId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "DailyAmount",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Campaign"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CampaignDetailLinkedin')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CampaignId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CampaignStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CampaignEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "TotalSpent",
						"type": "int",
						"precision": 10
					},
					{
						"name": "actionClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "adUnitClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "approximateUniqueImpressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "cardClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "cardImpressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "clicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "commentLikes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "comments",
						"type": "int",
						"precision": 10
					},
					{
						"name": "companyPageClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "conversionValueInLocalCurrency",
						"type": "int",
						"precision": 10
					},
					{
						"name": "costInLocalCurrency",
						"type": "varchar"
					},
					{
						"name": "costInUsd",
						"type": "varchar"
					},
					{
						"name": "externalWebsiteConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "externalWebsitePostClickConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "externalWebsitePostViewConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "follows",
						"type": "int",
						"precision": 10
					},
					{
						"name": "fullScreenPlays",
						"type": "int",
						"precision": 10
					},
					{
						"name": "impressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "landingPageClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "leadGenerationMailContactInfoShares",
						"type": "int",
						"precision": 10
					},
					{
						"name": "leadGenerationMailInterestedClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "likes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "oneClickLeadFormOpens",
						"type": "int",
						"precision": 10
					},
					{
						"name": "oneClickLeads",
						"type": "int",
						"precision": 10
					},
					{
						"name": "opens",
						"type": "int",
						"precision": 10
					},
					{
						"name": "otherEngagements",
						"type": "int",
						"precision": 10
					},
					{
						"name": "returnOnAreactionsdSpend",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sends",
						"type": "int",
						"precision": 10
					},
					{
						"name": "shares",
						"type": "int",
						"precision": 10
					},
					{
						"name": "textUrlClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "totalEngagements",
						"type": "int",
						"precision": 10
					},
					{
						"name": "videoCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "videoFirstQuartileCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "videoMidpointCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "videoStarts",
						"type": "int",
						"precision": 10
					},
					{
						"name": "videoThirdQuartileCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "videoViews",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralCardClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralCardImpressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralCommentLikes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralComments",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralCompanyPageClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralExternalWebsiteConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralExternalWebsitePostClickConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralExternalWebsitePostViewConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralFollows",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralFullScreenPlays",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralImpressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralLandingPageClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralLikes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralOneClickLeadFormOpens",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralOneClickLeads",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralOtherEngagements",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralReactions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralShares",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralTotalEngagements",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralVideoCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralVideoFirstQuartileCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralVideoMidpointCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralVideoStarts",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralVideoThirdQuartileCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralVideoViews",
						"type": "int",
						"precision": 10
					},
					{
						"name": "reactions",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CampaignDetailLinkedin"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CampaignDetailLinkedinStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CampaignId",
						"type": "varchar"
					},
					{
						"name": "CampaignDateDay",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CampaignDateMonth",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CampaignDateYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CampaignEndDay",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CampaignEndMonth",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CampaignEndYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TotalSpent",
						"type": "int",
						"precision": 10
					},
					{
						"name": "actionClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "adUnitClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "approximateUniqueImpressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "cardClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "cardImpressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "clicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "commentLikes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "comments",
						"type": "int",
						"precision": 10
					},
					{
						"name": "companyPageClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "conversionValueInLocalCurrency",
						"type": "int",
						"precision": 10
					},
					{
						"name": "costInLocalCurrency",
						"type": "varchar"
					},
					{
						"name": "costInUsd",
						"type": "varchar"
					},
					{
						"name": "externalWebsiteConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "externalWebsitePostClickConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "externalWebsitePostViewConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "follows",
						"type": "int",
						"precision": 10
					},
					{
						"name": "fullScreenPlays",
						"type": "int",
						"precision": 10
					},
					{
						"name": "impressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "landingPageClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "leadGenerationMailContactInfoShares",
						"type": "int",
						"precision": 10
					},
					{
						"name": "leadGenerationMailInterestedClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "likes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "oneClickLeadFormOpens",
						"type": "int",
						"precision": 10
					},
					{
						"name": "oneClickLeads",
						"type": "int",
						"precision": 10
					},
					{
						"name": "opens",
						"type": "int",
						"precision": 10
					},
					{
						"name": "otherEngagements",
						"type": "int",
						"precision": 10
					},
					{
						"name": "returnOnAreactionsdSpend",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sends",
						"type": "int",
						"precision": 10
					},
					{
						"name": "shares",
						"type": "int",
						"precision": 10
					},
					{
						"name": "textUrlClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "totalEngagements",
						"type": "int",
						"precision": 10
					},
					{
						"name": "videoCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "videoFirstQuartileCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "videoMidpointCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "videoStarts",
						"type": "int",
						"precision": 10
					},
					{
						"name": "videoThirdQuartileCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "videoViews",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralCardClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralCardImpressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralCommentLikes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralComments",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralCompanyPageClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralExternalWebsiteConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralExternalWebsitePostClickConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralExternalWebsitePostViewConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralFollows",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralFullScreenPlays",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralImpressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralLandingPageClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralLikes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralOneClickLeadFormOpens",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralOneClickLeads",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralOtherEngagements",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralReactions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralShares",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralTotalEngagements",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralVideoCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralVideoFirstQuartileCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralVideoMidpointCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralVideoStarts",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralVideoThirdQuartileCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "viralVideoViews",
						"type": "int",
						"precision": 10
					},
					{
						"name": "reactions",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CampaignDetailLinkedinStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CampaignGroup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CampaignGroupId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "DisplayName",
						"type": "nchar"
					},
					{
						"name": "AccountId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Created",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "Modified",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CampaignGroup"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CampaignGroupStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CampaignGroupId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "DisplayName",
						"type": "varchar"
					},
					{
						"name": "AccountId",
						"type": "varchar"
					},
					{
						"name": "Created",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Modified",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Status",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CampaignGroupStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CampaignStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CampaignId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "DisplayName",
						"type": "varchar"
					},
					{
						"name": "CampaignGroup",
						"type": "varchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "varchar"
					},
					{
						"name": "CostType",
						"type": "varchar"
					},
					{
						"name": "Objective",
						"type": "varchar"
					},
					{
						"name": "Account",
						"type": "varchar"
					},
					{
						"name": "Created",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Modified",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "UnitCurrencyCode",
						"type": "varchar"
					},
					{
						"name": "UnitAmount",
						"type": "varchar"
					},
					{
						"name": "DailyCurrencyCode",
						"type": "varchar"
					},
					{
						"name": "DailyAmount",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CampaignStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CampaignStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CampaignStatusID",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "DisplayName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CampaignStatus"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CampaignType')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CampaignTypeId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "DisplayName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CampaignType"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ChargeBy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "DisplayName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ChargeBy"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CostType')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CostTypeId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "DisplayName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CostType"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Currency')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CurrencyId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "DisplayName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Currency"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DV360CampaignCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "dv360report.csv",
						"folderPath": "development/dv360",
						"container": "dashboard"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Campaign",
						"type": "String"
					},
					{
						"name": "Campaign ID",
						"type": "String"
					},
					{
						"name": "Site (DCM)",
						"type": "String"
					},
					{
						"name": "Placement",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "Impressions",
						"type": "String"
					},
					{
						"name": "Clicks",
						"type": "String"
					},
					{
						"name": "Click Rate",
						"type": "String"
					},
					{
						"name": "Active View: Viewable Impressions",
						"type": "String"
					},
					{
						"name": "Active View: Measurable Impressions",
						"type": "String"
					},
					{
						"name": "Active View: Eligible Impressions",
						"type": "String"
					},
					{
						"name": "Total Conversions",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DV360CostReport')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "dv360MetricsReport.csv",
						"folderPath": "development/dv360",
						"container": "dashboard"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Advertiser",
						"type": "String"
					},
					{
						"name": "Advertiser ID",
						"type": "String"
					},
					{
						"name": "Advertiser Currency",
						"type": "String"
					},
					{
						"name": "Insertion Order",
						"type": "String"
					},
					{
						"name": "Insertion Order ID",
						"type": "String"
					},
					{
						"name": "Line Item",
						"type": "String"
					},
					{
						"name": "Line Item ID",
						"type": "String"
					},
					{
						"name": "Campaign",
						"type": "String"
					},
					{
						"name": "Creative",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "Impressions",
						"type": "String"
					},
					{
						"name": "Billable Impressions",
						"type": "String"
					},
					{
						"name": "Clicks",
						"type": "String"
					},
					{
						"name": "Click Rate (CTR)",
						"type": "String"
					},
					{
						"name": "Total Conversions",
						"type": "String"
					},
					{
						"name": "Post-Click Conversions",
						"type": "String"
					},
					{
						"name": "Post-View Conversions",
						"type": "String"
					},
					{
						"name": "Revenue (Adv Currency)",
						"type": "String"
					},
					{
						"name": "Media Cost (Advertiser Currency)",
						"type": "String"
					},
					{
						"name": "Billable Cost (Adv Currency)",
						"type": "String"
					},
					{
						"name": "Platform Fee (Adv Currency)",
						"type": "String"
					},
					{
						"name": "Platform Fee Rate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sftpbinaryBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "December032020_ind.csv",
						"folderPath": "December032020",
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "transcode",
						"type": "String"
					},
					{
						"name": "timestamp",
						"type": "String"
					},
					{
						"name": "tsDateTime",
						"type": "String"
					},
					{
						"name": "indexToken",
						"type": "String"
					},
					{
						"name": "currentIndexValue",
						"type": "String"
					},
					{
						"name": "highIndexValue",
						"type": "String"
					},
					{
						"name": "lowIndexValue",
						"type": "String"
					},
					{
						"name": "percentageChangeInIndex",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sftpbinaryBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DynamicDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TblName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Hubspot"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "prod",
					"table": {
						"value": "@dataset().TblName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DynamicRESTDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DynamicRESTAPI",
					"type": "LinkedServiceReference",
					"parameters": {
						"Url": {
							"value": "@dataset().Url",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"Url": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DynamicRESTAPI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EntityStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "DisplayName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EntityStatus"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GoogleAnalyticsAPI')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "GoogleAnalyticsAPI",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "GoogleAnalytics"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/GoogleAnalyticsAPI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GoogleAnalyticsData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "GoogleAnalytics"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "GroupValue",
						"type": "varchar"
					},
					{
						"name": "SourceDate",
						"type": "date"
					},
					{
						"name": "Users",
						"type": "float",
						"precision": 15
					},
					{
						"name": "NewUsers",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Pageviews",
						"type": "float",
						"precision": 15
					},
					{
						"name": "SessionsPerUser",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Sessions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "BounceRate",
						"type": "float",
						"precision": 15
					},
					{
						"name": "AvgSessionDuration",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Goal1ConversionRate",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Goal1Completions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Goal1Value",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "GoogleAnalyticsData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GoogleAnalyticsStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "GoogleAnalytics"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "MetricsArr",
						"type": "varchar"
					},
					{
						"name": "ValuesArr",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "GoogleAnalyticsStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GoogleAnalyticsToken')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "GoogleAnalytics"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "APIName",
						"type": "varchar"
					},
					{
						"name": "Token",
						"type": "varchar"
					},
					{
						"name": "AccessTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "GoogleAnalyticsToken"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GoogleDV360API')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "GoogleDV360API",
					"type": "LinkedServiceReference",
					"parameters": {
						"Url": {
							"value": "@dataset().Url",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"Url": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/GoogleDV360API')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GoogleDV360Campaign')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DV360"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CampaignId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CampaignName",
						"type": "varchar"
					},
					{
						"name": "Creative",
						"type": "varchar"
					},
					{
						"name": "Date",
						"type": "date"
					},
					{
						"name": "Impressions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Clicks",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ClickRate",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ClickThroughConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TfocoComDetailSubmitTotalConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "NewTfocoComGlobalTagTotalConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "NewTfocoComHomePageVisitTotalConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "NewTfocoComInvestmentPlannerVisitTotalConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "NewTfocoComPortfolioPlannerVisitTotalConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "NewTfocoComWebinarSignupTotalConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "NewTfocoComDetailSubmitTotalConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TfocoComHomePageVisitTotalConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TfocoComWealthPlanningTotalConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TfocoComWhoWeAreTotalConversions",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "GoogleDV360Campaign"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GoogleDV360CampaignStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DV360"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CampaignId",
						"type": "varchar"
					},
					{
						"name": "CampaignName",
						"type": "varchar"
					},
					{
						"name": "Creative",
						"type": "varchar"
					},
					{
						"name": "Date",
						"type": "varchar"
					},
					{
						"name": "Impressions",
						"type": "varchar"
					},
					{
						"name": "Clicks",
						"type": "varchar"
					},
					{
						"name": "ClickRate",
						"type": "varchar"
					},
					{
						"name": "TotalConversions",
						"type": "varchar"
					},
					{
						"name": "ClickThroughConversions",
						"type": "varchar"
					},
					{
						"name": "TfocoComDetailSubmitTotalConversions",
						"type": "varchar"
					},
					{
						"name": "NewTfocoComGlobalTagTotalConversions",
						"type": "varchar"
					},
					{
						"name": "NewTfocoComHomePageVisitTotalConversions",
						"type": "varchar"
					},
					{
						"name": "NewTfocoComInvestmentPlannerVisitTotalConversions",
						"type": "varchar"
					},
					{
						"name": "NewTfocoComPortfolioPlannerVisitTotalConversions",
						"type": "varchar"
					},
					{
						"name": "NewTfocoComWebinarSignupTotalConversions",
						"type": "varchar"
					},
					{
						"name": "NewTfocoComDetailSubmitTotalConversions",
						"type": "varchar"
					},
					{
						"name": "TfocoComHomePageVisitTotalConversions",
						"type": "varchar"
					},
					{
						"name": "TfocoComWealthPlanningTotalConversions",
						"type": "varchar"
					},
					{
						"name": "TfocoComWhoWeAreTotalConversions",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "GoogleDV360CampaignStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GoogleDV360CostMetrics')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DV360"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AdvertiserId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Advertiser",
						"type": "varchar"
					},
					{
						"name": "AdvertiserCurrencyId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "CampaignId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InsertionOrder",
						"type": "varchar"
					},
					{
						"name": "InsertionOrderId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LineItem",
						"type": "varchar"
					},
					{
						"name": "LineItemId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Campaign",
						"type": "varchar"
					},
					{
						"name": "Creative",
						"type": "varchar"
					},
					{
						"name": "Date",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "Impressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BillableImpressions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Clicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ClickRateCTR",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PostClickConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PostViewConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "RevenueAdvCurrency",
						"type": "float",
						"precision": 15
					},
					{
						"name": "MediaCostAdvetiserCurrency",
						"type": "float",
						"precision": 15
					},
					{
						"name": "BillableCostAdvertiserCurrency",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PlatformFeeAdvertiserCurrency",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PlatformFeeRate",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "GoogleDV360CostMetrics"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GoogleDV360CostMetricsStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DV360"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AdvertiserId",
						"type": "varchar"
					},
					{
						"name": "Advertiser",
						"type": "varchar"
					},
					{
						"name": "AdvertiserCurrency",
						"type": "varchar"
					},
					{
						"name": "InsertionOrder",
						"type": "varchar"
					},
					{
						"name": "InsertionOrderId",
						"type": "varchar"
					},
					{
						"name": "LineItem",
						"type": "varchar"
					},
					{
						"name": "LineItemId",
						"type": "varchar"
					},
					{
						"name": "CampaignId",
						"type": "varchar"
					},
					{
						"name": "Campaign",
						"type": "varchar"
					},
					{
						"name": "Creative",
						"type": "varchar"
					},
					{
						"name": "Date",
						"type": "varchar"
					},
					{
						"name": "Impressions",
						"type": "varchar"
					},
					{
						"name": "BillableImpressions",
						"type": "varchar"
					},
					{
						"name": "Clicks",
						"type": "varchar"
					},
					{
						"name": "ClickRateCTR",
						"type": "varchar"
					},
					{
						"name": "TotalConversions",
						"type": "varchar"
					},
					{
						"name": "PostClickConversions",
						"type": "varchar"
					},
					{
						"name": "PostViewConversions",
						"type": "varchar"
					},
					{
						"name": "RevenueAdvCurrency",
						"type": "varchar"
					},
					{
						"name": "MediaCostAdvetiserCurrency",
						"type": "varchar"
					},
					{
						"name": "BillableCostAdvertiserCurrency",
						"type": "varchar"
					},
					{
						"name": "PlatformFeeAdvertiserCurrency",
						"type": "varchar"
					},
					{
						"name": "PlatformFeeRate",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "GoogleDV360CostMetricsStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GoogleDV360Data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "GoogleDV360Data"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GoogleDV360QueryFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DV360"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "QueryId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "StoragePath",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "GoogleDV360QueryFile"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GoogleDV360ReportFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "FileId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "FileName",
						"type": "varchar"
					},
					{
						"name": "StartDate",
						"type": "varchar"
					},
					{
						"name": "EndDate",
						"type": "varchar"
					},
					{
						"name": "GeneratedTimeStamp",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "GoogleDV360ReportFile"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HubspotContact')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Hubspot"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ContactId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "AddressLine1",
						"type": "varchar"
					},
					{
						"name": "AddressLine2",
						"type": "varchar"
					},
					{
						"name": "City",
						"type": "varchar"
					},
					{
						"name": "State",
						"type": "varchar"
					},
					{
						"name": "Country",
						"type": "varchar"
					},
					{
						"name": "MobilePhone",
						"type": "varchar"
					},
					{
						"name": "Phone",
						"type": "varchar"
					},
					{
						"name": "Fax",
						"type": "varchar"
					},
					{
						"name": "DateOfBirth",
						"type": "varchar"
					},
					{
						"name": "ContactType",
						"type": "varchar"
					},
					{
						"name": "Age",
						"type": "varchar"
					},
					{
						"name": "AgeRange",
						"type": "varchar"
					},
					{
						"name": "Gender",
						"type": "varchar"
					},
					{
						"name": "Channel",
						"type": "varchar"
					},
					{
						"name": "HubspotOwnerId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "AcquistionDateFromImport",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "RecentDealCloseDate",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "BecameMarketingQualifiedLeadDate",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "CloseDate",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "AssociatedDeals",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecentDealAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "NumberOfTimesContacted",
						"type": "varchar"
					},
					{
						"name": "NumberOfSalesActivities",
						"type": "varchar"
					},
					{
						"name": "OriginalSource",
						"type": "varchar"
					},
					{
						"name": "LeadsProbablyRelevantForDFOAndARMShouldTalkToHimFirstAssessmentOfLeadStatus",
						"type": "varchar"
					},
					{
						"name": "DetailedSource",
						"type": "varchar"
					},
					{
						"name": "BecameASalesQualifiedLeadDate",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "AssignedRm",
						"type": "varchar"
					},
					{
						"name": "AssignedTo",
						"type": "varchar"
					},
					{
						"name": "MeetingBooked",
						"type": "varchar"
					},
					{
						"name": "WorkEmail",
						"type": "varchar"
					},
					{
						"name": "EmbedUrlUtmMedium",
						"type": "varchar"
					},
					{
						"name": "ActiveSalOrNot",
						"type": "varchar"
					},
					{
						"name": "BecameAnOpportunityDate",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "OriginalSourceDrillDown1",
						"type": "varchar"
					},
					{
						"name": "BrighttalkWebcastTitle",
						"type": "varchar"
					},
					{
						"name": "OriginalSourceDrillDown2",
						"type": "varchar"
					},
					{
						"name": "LifecycleStage",
						"type": "varchar"
					},
					{
						"name": "EmbedUrlUtmSource",
						"type": "varchar"
					},
					{
						"name": "IsThisLeadAlreadyFoundInInternalDatabase",
						"type": "varchar"
					},
					{
						"name": "Persona",
						"type": "varchar"
					},
					{
						"name": "BecameACustomerDate",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "SourceOfSignUp",
						"type": "varchar"
					},
					{
						"name": "WebcastActivity",
						"type": "varchar"
					},
					{
						"name": "DaysToClose",
						"type": "varchar"
					},
					{
						"name": "IPCountry",
						"type": "varchar"
					},
					{
						"name": "updated",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "created",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "FirstPageSeen",
						"type": "varchar"
					},
					{
						"name": "On24UTM",
						"type": "varchar"
					},
					{
						"name": "DFOLifeCycleStage",
						"type": "varchar"
					},
					{
						"name": "RecentConversion",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "HubspotContact"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HubspotContactStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Hubspot"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "hs_object_id",
						"type": "varchar"
					},
					{
						"name": "channel",
						"type": "varchar"
					},
					{
						"name": "acquistion_date_from_import",
						"type": "varchar"
					},
					{
						"name": "recent_deal_close_date",
						"type": "varchar"
					},
					{
						"name": "hs_lifecyclestage_marketingqualifiedlead_date",
						"type": "varchar"
					},
					{
						"name": "closedate",
						"type": "varchar"
					},
					{
						"name": "num_associated_deals",
						"type": "varchar"
					},
					{
						"name": "recent_deal_amount",
						"type": "varchar"
					},
					{
						"name": "num_contacted_notes",
						"type": "varchar"
					},
					{
						"name": "num_notes",
						"type": "varchar"
					},
					{
						"name": "date_of_birth",
						"type": "varchar"
					},
					{
						"name": "hs_analytics_source",
						"type": "varchar"
					},
					{
						"name": "lead_is_probably_relevant_for_dfo",
						"type": "varchar"
					},
					{
						"name": "detailed_source",
						"type": "varchar"
					},
					{
						"name": "hs_lifecyclestage_salesqualifiedlead_date",
						"type": "varchar"
					},
					{
						"name": "assigned_rm",
						"type": "varchar"
					},
					{
						"name": "assigned_to",
						"type": "varchar"
					},
					{
						"name": "meeting_booked",
						"type": "varchar"
					},
					{
						"name": "work_email",
						"type": "varchar"
					},
					{
						"name": "questions_embed_url_utm_medium",
						"type": "varchar"
					},
					{
						"name": "active_sal_or_not",
						"type": "varchar"
					},
					{
						"name": "hs_lifecyclestage_opportunity_date",
						"type": "varchar"
					},
					{
						"name": "hs_analytics_source_data_1",
						"type": "varchar"
					},
					{
						"name": "brighttalk_webcast_title",
						"type": "varchar"
					},
					{
						"name": "hs_analytics_source_data_2",
						"type": "varchar"
					},
					{
						"name": "lifecyclestage",
						"type": "varchar"
					},
					{
						"name": "questions_embed_url_utm_source",
						"type": "varchar"
					},
					{
						"name": "is_this_lead_already_found_in_an_internal_database",
						"type": "varchar"
					},
					{
						"name": "country",
						"type": "varchar"
					},
					{
						"name": "hs_persona",
						"type": "varchar"
					},
					{
						"name": "hs_lifecyclestage_customer_date",
						"type": "varchar"
					},
					{
						"name": "source_of_sign_up",
						"type": "varchar"
					},
					{
						"name": "webcast_activity",
						"type": "varchar"
					},
					{
						"name": "days_to_close",
						"type": "varchar"
					},
					{
						"name": "age_range",
						"type": "varchar"
					},
					{
						"name": "ip_country",
						"type": "varchar"
					},
					{
						"name": "age",
						"type": "varchar"
					},
					{
						"name": "updated",
						"type": "varchar"
					},
					{
						"name": "created",
						"type": "varchar"
					},
					{
						"name": "hasMore",
						"type": "varchar"
					},
					{
						"name": "VidOffset",
						"type": "varchar"
					},
					{
						"name": "InsertedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "contact_type",
						"type": "varchar"
					},
					{
						"name": "hs_analytics_first_url",
						"type": "varchar"
					},
					{
						"name": "gender",
						"type": "varchar"
					},
					{
						"name": "on24utm",
						"type": "varchar"
					},
					{
						"name": "firstname",
						"type": "varchar"
					},
					{
						"name": "lastname",
						"type": "varchar"
					},
					{
						"name": "mobilephone",
						"type": "varchar"
					},
					{
						"name": "phone",
						"type": "varchar"
					},
					{
						"name": "fax",
						"type": "varchar"
					},
					{
						"name": "address_line_1",
						"type": "varchar"
					},
					{
						"name": "address_line_2",
						"type": "varchar"
					},
					{
						"name": "city",
						"type": "varchar"
					},
					{
						"name": "state",
						"type": "varchar"
					},
					{
						"name": "hubspot_owner_id",
						"type": "varchar"
					},
					{
						"name": "lifecycle_stage_status",
						"type": "varchar"
					},
					{
						"name": "time-offset",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "recent_conversion_event_name",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "HubspotContactStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HubspotDeal')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Hubspot"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DealId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DealStage",
						"type": "varchar"
					},
					{
						"name": "ClosedLostReason",
						"type": "varchar"
					},
					{
						"name": "LastModifiedDate",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "Amount",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "AmountSource",
						"type": "varchar"
					},
					{
						"name": "Pipeline",
						"type": "varchar"
					},
					{
						"name": "TFOLifecycleStage",
						"type": "varchar"
					},
					{
						"name": "CreateDate",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "DealOwnerId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LeadStatus",
						"type": "varchar"
					},
					{
						"name": "AssociatedContactIds",
						"type": "varchar"
					},
					{
						"name": "ClosedDate",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "DealType",
						"type": "varchar"
					},
					{
						"name": "NumberOfTimesContacted",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NumberOfSalesActivities",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "HubspotDeal"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HubspotDealStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Hubspot"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "hs_object_id",
						"type": "varchar"
					},
					{
						"name": "closedate",
						"type": "varchar"
					},
					{
						"name": "dealtype",
						"type": "varchar"
					},
					{
						"name": "num_contacted_notes",
						"type": "varchar"
					},
					{
						"name": "num_notes",
						"type": "varchar"
					},
					{
						"name": "hubspot_owner_id",
						"type": "varchar"
					},
					{
						"name": "dealstage",
						"type": "varchar"
					},
					{
						"name": "amount",
						"type": "varchar"
					},
					{
						"name": "lead_status_status",
						"type": "varchar"
					},
					{
						"name": "Offset",
						"type": "varchar"
					},
					{
						"name": "HasMore",
						"type": "varchar"
					},
					{
						"name": "InsertedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "closed_lost_reason",
						"type": "varchar"
					},
					{
						"name": "hs_lastmodifieddate",
						"type": "varchar"
					},
					{
						"name": "amount_source",
						"type": "varchar"
					},
					{
						"name": "pipeline",
						"type": "varchar"
					},
					{
						"name": "lifecyclestage",
						"type": "varchar"
					},
					{
						"name": "createdate",
						"type": "varchar"
					},
					{
						"name": "hs_lead_status",
						"type": "varchar"
					},
					{
						"name": "associatedVids",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "HubspotDealStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HubspotEngagement')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Hubspot"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EngagementId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "TimeStamp",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "TeamId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Created",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "Updated",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "OwnerId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Source",
						"type": "varchar"
					},
					{
						"name": "SourceId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "AllAccessibleTeamIds",
						"type": "varchar"
					},
					{
						"name": "BodyPreview",
						"type": "varchar"
					},
					{
						"name": "CreatedBy",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "ModifiedBy",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "PortalId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Active",
						"type": "bit"
					},
					{
						"name": "ContactAssociations",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "HubspotEngagement"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HubspotEngagementStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Hubspot"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EngagementId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "createdAt",
						"type": "varchar"
					},
					{
						"name": "lastUpdated",
						"type": "varchar"
					},
					{
						"name": "ownerId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "type",
						"type": "varchar"
					},
					{
						"name": "timestamp",
						"type": "varchar"
					},
					{
						"name": "teamId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "source",
						"type": "varchar"
					},
					{
						"name": "sourceId",
						"type": "varchar"
					},
					{
						"name": "allAccessibleTeamIds",
						"type": "varchar"
					},
					{
						"name": "bodyPreview",
						"type": "varchar"
					},
					{
						"name": "createdBy",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "modifiedBy",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "portalId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "active",
						"type": "varchar"
					},
					{
						"name": "contactAssosications",
						"type": "varchar"
					},
					{
						"name": "HasMore",
						"type": "varchar"
					},
					{
						"name": "Offset",
						"type": "varchar"
					},
					{
						"name": "InsertedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "HubspotEngagementStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HubspotOwner')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Hubspot"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OwnerId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "Email",
						"type": "varchar"
					},
					{
						"name": "Created",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "Updated",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "HasContactsAccess",
						"type": "bit"
					},
					{
						"name": "ActiveUserId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ActiveSalesForceId",
						"type": "varchar"
					},
					{
						"name": "IsActive",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "HubspotOwner"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HubspotOwnerStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Hubspot"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OwnerId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "firstName",
						"type": "varchar"
					},
					{
						"name": "lastName",
						"type": "varchar"
					},
					{
						"name": "email",
						"type": "varchar"
					},
					{
						"name": "createdAt",
						"type": "varchar"
					},
					{
						"name": "updatedAt",
						"type": "varchar"
					},
					{
						"name": "hasContactsAccess",
						"type": "varchar"
					},
					{
						"name": "activeUserId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "activeSalesforceId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "isActive",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "HubspotOwnerStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IndustryType')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "IndustryTypeId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "DisplayName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "IndustryType"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Linkedin')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedinAPI",
					"type": "LinkedServiceReference",
					"parameters": {
						"Url": {
							"value": "@dataset().Url",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"Url": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedinAPI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedinShare')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Owner",
						"type": "varchar"
					},
					{
						"name": "Agent",
						"type": "varchar"
					},
					{
						"name": "Activity",
						"type": "varchar"
					},
					{
						"name": "Subject",
						"type": "varchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "Created",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "Id",
						"type": "varchar"
					},
					{
						"name": "LastModifiedBy",
						"type": "varchar"
					},
					{
						"name": "LastModified",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "Text",
						"type": "varchar"
					},
					{
						"name": "LandingPageTitle",
						"type": "varchar"
					},
					{
						"name": "Description",
						"type": "varchar"
					},
					{
						"name": "EntityLocation",
						"type": "varchar"
					},
					{
						"name": "Title",
						"type": "varchar"
					},
					{
						"name": "LandingPageUrl",
						"type": "varchar"
					},
					{
						"name": "Entity",
						"type": "varchar"
					},
					{
						"name": "ShareMediaCategory",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "LinkedinShare"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedinShareMetrics')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ShareId",
						"type": "varchar"
					},
					{
						"name": "ShareCount",
						"type": "float",
						"precision": 15
					},
					{
						"name": "LikeCount",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Engagement",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ClickCount",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ImpressionCount",
						"type": "float",
						"precision": 15
					},
					{
						"name": "CommentCount",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "LinkedinShareMetrics"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedinShareStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "owner",
						"type": "varchar"
					},
					{
						"name": "agent",
						"type": "varchar"
					},
					{
						"name": "activity",
						"type": "varchar"
					},
					{
						"name": "subject",
						"type": "varchar"
					},
					{
						"name": "createdby",
						"type": "varchar"
					},
					{
						"name": "created",
						"type": "varchar"
					},
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "lastModifiedby",
						"type": "varchar"
					},
					{
						"name": "lastModified",
						"type": "varchar"
					},
					{
						"name": "text",
						"type": "varchar"
					},
					{
						"name": "landingPageTitle",
						"type": "varchar"
					},
					{
						"name": "description",
						"type": "varchar"
					},
					{
						"name": "entityLocation",
						"type": "varchar"
					},
					{
						"name": "title",
						"type": "varchar"
					},
					{
						"name": "landingPageUrl",
						"type": "varchar"
					},
					{
						"name": "entity",
						"type": "varchar"
					},
					{
						"name": "shareMediaCategory",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "LinkedinShareStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedinShareString')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "owner",
						"type": "varchar"
					},
					{
						"name": "agent",
						"type": "varchar"
					},
					{
						"name": "activity",
						"type": "varchar"
					},
					{
						"name": "subject",
						"type": "varchar"
					},
					{
						"name": "createdby",
						"type": "varchar"
					},
					{
						"name": "created",
						"type": "varchar"
					},
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "lastModifiedby",
						"type": "varchar"
					},
					{
						"name": "lastModified",
						"type": "varchar"
					},
					{
						"name": "text",
						"type": "varchar"
					},
					{
						"name": "landingPageTitle",
						"type": "varchar"
					},
					{
						"name": "description",
						"type": "varchar"
					},
					{
						"name": "entityLocation",
						"type": "varchar"
					},
					{
						"name": "title",
						"type": "varchar"
					},
					{
						"name": "landingPageUrl",
						"type": "varchar"
					},
					{
						"name": "entity",
						"type": "varchar"
					},
					{
						"name": "shareMediaCategory",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "LinkedinShareString"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MSDynamicsBudgetServices')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MSDynamicsAXLiveService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MSDynamics"
				},
				"annotations": [],
				"type": "DynamicsAXResource",
				"schema": [],
				"typeProperties": {
					"path": "BudgetOdataServices"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MSDynamicsAXLiveService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MSDynamicsLedger')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MSDynamics"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Header",
						"type": "varchar"
					},
					{
						"name": "Year",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "January",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "February",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "March",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "April",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "May",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "June",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "July",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "August",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "September",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "October",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "November",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "December",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "JanuaryTarget",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "FebruaryTarget",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "MarchTarget",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "AprilTarget",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "MayTarget",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "JuneTarget",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "JulyTarget",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "AugustTarget",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "SeptemberTarget",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "OctoberTarget",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "NovemberTarget",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "DecemberTarget",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "MSDynamicsLedger"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MSDynamicsVoucherServices')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MSDynamicsAXLiveService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MSDynamics"
				},
				"annotations": [],
				"type": "DynamicsAXResource",
				"schema": [],
				"typeProperties": {
					"path": "VoucherServices"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MSDynamicsAXLiveService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MainAccountCategory')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "MainAccountCategoryId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "DisplayName",
						"type": "varbinary"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "MainAccountCategory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Objective')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ObjectiveId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "DisplayName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Objective"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Persona')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Hubspot"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PersonaId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "HubspotName",
						"type": "varchar"
					},
					{
						"name": "DisplayName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Persona"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProdAdWordsCampaignMetrics')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "GoogleAdWords"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CampaignId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "CampaignName",
						"type": "varchar"
					},
					{
						"name": "CampaignStatus",
						"type": "varchar"
					},
					{
						"name": "BudgetName",
						"type": "varchar"
					},
					{
						"name": "Budget",
						"type": "float",
						"precision": 15
					},
					{
						"name": "BudgetType",
						"type": "varchar"
					},
					{
						"name": "BudgetStatus",
						"type": "varchar"
					},
					{
						"name": "CampaignType",
						"type": "varchar"
					},
					{
						"name": "Impressions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Interactions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Cost",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Conversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "BidStrategyType",
						"type": "varchar"
					},
					{
						"name": "CostPerAllConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "InteractionRate",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ConversionsFromInteractionsRate",
						"type": "float",
						"precision": 15
					},
					{
						"name": "AverageCost",
						"type": "float",
						"precision": 15
					},
					{
						"name": "SegmentDate",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "prod",
					"table": "AdWordsCampaignMetrics"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProdAdvertismentDetailLinkedin')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AdvertismentId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AdvertismentStartDate",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "AdvertismentEndDate",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "TotalSpent",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ActionClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AdUnitClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ApproximateUniqueImpressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CardClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CardImpressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Clicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CommentLikes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Comments",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CompanyPageClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ConversionValueInLocalCurrency",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CostInLocalCurrency",
						"type": "float",
						"precision": 15
					},
					{
						"name": "CostInUsd",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ExternalWebsiteConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ExternalWebsitePostClickConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ExternalWebsitePostViewConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Follows",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FullScreenPlays",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Impressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LandingPageClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LeadGenerationMailContactInfoShares",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LeadGenerationMailInterestedClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Likes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OneClickLeadFormOpens",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OneClickLeads",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Opens",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OtherEngagements",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ReturnOnAreactionsdSpend",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Sends",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Shares",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TextUrlClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TotalEngagements",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VideoCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VideoFirstQuartileCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VideoMidpointCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VideoStarts",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VideoThirdQuartileCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VideoViews",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralCardClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralCardImpressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralCommentLikes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralComments",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralCompanyPageClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralExternalWebsiteConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralExternalWebsitePostClickConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralExternalWebsitePostViewConversions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralFollows",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralFullScreenPlays",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralImpressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralLandingPageClicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralLikes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralOneClickLeadFormOpens",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralOneClickLeads",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralOtherEngagements",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralReactions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralShares",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralTotalEngagements",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralVideoCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralVideoFirstQuartileCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralVideoMidpointCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralVideoStarts",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralVideoThirdQuartileCompletions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViralVideoViews",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Reactions",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "prod",
					"table": "AdvertismentDetailLinkedin"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProdGoogleAnalyticsData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "GoogleAnalytics"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GroupId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "GroupValue",
						"type": "varchar"
					},
					{
						"name": "SourceDate",
						"type": "date"
					},
					{
						"name": "Users",
						"type": "float",
						"precision": 15
					},
					{
						"name": "NewUsers",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Pageviews",
						"type": "float",
						"precision": 15
					},
					{
						"name": "SessionsPerUser",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Sessions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "BounceRate",
						"type": "float",
						"precision": 15
					},
					{
						"name": "AvgSessionDuration",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Goal1ConversionRate",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Goal1Completions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Goal1Value",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "prod",
					"table": "GoogleAnalyticsData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProdGoogleDV360Campaign')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DV360"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CampaignId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CampaignName",
						"type": "varchar"
					},
					{
						"name": "Creative",
						"type": "varchar"
					},
					{
						"name": "Date",
						"type": "date"
					},
					{
						"name": "Impressions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Clicks",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ClickRate",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ClickThroughConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TfocoComDetailSubmitTotalConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "NewTfocoComGlobalTagTotalConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "NewTfocoComHomePageVisitTotalConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "NewTfocoComInvestmentPlannerVisitTotalConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "NewTfocoComPortfolioPlannerVisitTotalConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "NewTfocoComWebinarSignupTotalConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "NewTfocoComDetailSubmitTotalConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TfocoComHomePageVisitTotalConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TfocoComWealthPlanningTotalConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TfocoComWhoWeAreTotalConversions",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "prod",
					"table": "GoogleDV360Campaign"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProdGoogleDV360CostMetrics')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DV360"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AdvertiserId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Advertiser",
						"type": "varchar"
					},
					{
						"name": "AdvertiserCurrencyId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "CampaignId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InsertionOrder",
						"type": "varchar"
					},
					{
						"name": "InsertionOrderId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LineItem",
						"type": "varchar"
					},
					{
						"name": "LineItemId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Campaign",
						"type": "varchar"
					},
					{
						"name": "Creative",
						"type": "varchar"
					},
					{
						"name": "Date",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "Impressions",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BillableImpressions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Clicks",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ClickRateCTR",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PostClickConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PostViewConversions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "RevenueAdvCurrency",
						"type": "float",
						"precision": 15
					},
					{
						"name": "MediaCostAdvetiserCurrency",
						"type": "float",
						"precision": 15
					},
					{
						"name": "BillableCostAdvertiserCurrency",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PlatformFeeAdvertiserCurrency",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PlatformFeeRate",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "prod",
					"table": "GoogleDV360CostMetrics"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProdMSDynamicsLedger')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MSDynamics"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Header",
						"type": "varchar"
					},
					{
						"name": "Year",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "January",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "February",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "March",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "April",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "May",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "June",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "July",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "August",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "September",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "October",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "November",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "December",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "JanuaryTarget",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "FebruaryTarget",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "MarchTarget",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "AprilTarget",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "MayTarget",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "JuneTarget",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "JulyTarget",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "AugustTarget",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "SeptemberTarget",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "OctoberTarget",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "NovemberTarget",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "DecemberTarget",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "prod",
					"table": "MSDynamicsLedger"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProdTwitterEnagagementMetrics')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "LineItemId",
						"type": "varchar"
					},
					{
						"name": "MetricDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Impressions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TweetsSend",
						"type": "float",
						"precision": 15
					},
					{
						"name": "QualifiedImpressions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Follows",
						"type": "float",
						"precision": 15
					},
					{
						"name": "AppClicks",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Retweets",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Unfollows",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Likes",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Engagements",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Clicks",
						"type": "float",
						"precision": 15
					},
					{
						"name": "CardEngagements",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PollCardVote",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Replies",
						"type": "float",
						"precision": 15
					},
					{
						"name": "BilledChargeLocalMicro",
						"type": "float",
						"precision": 15
					},
					{
						"name": "BilledEngagements",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "prod",
					"table": "TwitterEnagagementMetrics"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProdTwitterOrganicTweetMetrics')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TweetId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "MetricDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Impressions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TweetsSend",
						"type": "float",
						"precision": 15
					},
					{
						"name": "QualifiedImpressions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Follows",
						"type": "float",
						"precision": 15
					},
					{
						"name": "AppClicks",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Retweets",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Unfollows",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Likes",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Engagements",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Clicks",
						"type": "float",
						"precision": 15
					},
					{
						"name": "CardEngagements",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PollCardVote",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Replies",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "prod",
					"table": "TwitterOrganicTweetMetrics"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProductType')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "DisplayName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ProductType"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterAccount')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AccountId",
						"type": "varchar"
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Created",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "Updated",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "BusinessName",
						"type": "varchar"
					},
					{
						"name": "IndustryTypeId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ApprovalStatusId",
						"type": "smallint",
						"precision": 5
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TwitterAccount"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterAccountStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AccountId",
						"type": "varchar"
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Created",
						"type": "varchar"
					},
					{
						"name": "Updated",
						"type": "varchar"
					},
					{
						"name": "BusinessName",
						"type": "varchar"
					},
					{
						"name": "IndustryType",
						"type": "varchar"
					},
					{
						"name": "ApprovalStatus",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TwitterAccountStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterCampaign')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AccountId",
						"type": "varchar"
					},
					{
						"name": "CampaignId",
						"type": "varchar"
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Created",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Modified",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "StatusId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "CurrencyID",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "TotalBudgetAmount",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "DailyBudgetAmount",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Servable",
						"type": "bit"
					},
					{
						"name": "StartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "EndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TwitterCampaign"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterCampaignStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AccountId",
						"type": "varchar"
					},
					{
						"name": "CampaignId",
						"type": "varchar"
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Created",
						"type": "varchar"
					},
					{
						"name": "Modified",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "varchar"
					},
					{
						"name": "Currency",
						"type": "varchar"
					},
					{
						"name": "TotalBudgetAmount",
						"type": "varchar"
					},
					{
						"name": "DailyBudgetAmount",
						"type": "varchar"
					},
					{
						"name": "Servable",
						"type": "varchar"
					},
					{
						"name": "StartDate",
						"type": "varchar"
					},
					{
						"name": "EndDate",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TwitterCampaignStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterEnagagementMetrics')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "LineItemId",
						"type": "varchar"
					},
					{
						"name": "MetricDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Impressions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TweetsSend",
						"type": "float",
						"precision": 15
					},
					{
						"name": "QualifiedImpressions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Follows",
						"type": "float",
						"precision": 15
					},
					{
						"name": "AppClicks",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Retweets",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Unfollows",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Likes",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Engagements",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Clicks",
						"type": "float",
						"precision": 15
					},
					{
						"name": "CardEngagements",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PollCardVote",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Replies",
						"type": "float",
						"precision": 15
					},
					{
						"name": "BilledChargeLocalMicro",
						"type": "float",
						"precision": 15
					},
					{
						"name": "BilledEngagements",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TwitterEnagagementMetrics"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterEnagagementMetricsStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "LineItemId",
						"type": "varchar"
					},
					{
						"name": "StartDate",
						"type": "varchar"
					},
					{
						"name": "EndDate",
						"type": "varchar"
					},
					{
						"name": "impressions",
						"type": "varchar"
					},
					{
						"name": "tweets_send",
						"type": "varchar"
					},
					{
						"name": "qualified_impressions",
						"type": "varchar"
					},
					{
						"name": "follows",
						"type": "varchar"
					},
					{
						"name": "app_clicks",
						"type": "varchar"
					},
					{
						"name": "retweets",
						"type": "varchar"
					},
					{
						"name": "unfollows",
						"type": "varchar"
					},
					{
						"name": "likes",
						"type": "varchar"
					},
					{
						"name": "engagements",
						"type": "varchar"
					},
					{
						"name": "clicks",
						"type": "varchar"
					},
					{
						"name": "card_engagements",
						"type": "varchar"
					},
					{
						"name": "poll_card_vote",
						"type": "varchar"
					},
					{
						"name": "replies",
						"type": "varchar"
					},
					{
						"name": "billed_charge_local_micro",
						"type": "varchar"
					},
					{
						"name": "billed_engagements",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TwitterEnagagementMetricsStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterLineItem')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AccountId",
						"type": "varchar"
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "BidTypeId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "AdvertiserUserId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "StartDate",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "BidAmountLocalMicro",
						"type": "float",
						"precision": 15
					},
					{
						"name": "AutomaticallySelectBid",
						"type": "bit"
					},
					{
						"name": "AdvertiserDomain",
						"type": "varchar"
					},
					{
						"name": "TargetCPALocalMicro",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PrimaryWebEventTag",
						"type": "varchar"
					},
					{
						"name": "ChargeById",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ProductTypeId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "EndDate",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "BidUnitId",
						"type": "varchar"
					},
					{
						"name": "TotalBudgetAmountLocalMicro",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TwitterObjectiveId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Id",
						"type": "varchar"
					},
					{
						"name": "EntityStatusId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Optimization",
						"type": "varchar"
					},
					{
						"name": "CurrencyId",
						"type": "varchar"
					},
					{
						"name": "Created",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "Updated",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "CreativeSource",
						"type": "varchar"
					},
					{
						"name": "CampaignId",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TwitterLineItem"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterLineItemStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AccountId",
						"type": "varchar"
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "BidType",
						"type": "varchar"
					},
					{
						"name": "AdvertiserUserId",
						"type": "varchar"
					},
					{
						"name": "StartDate",
						"type": "varchar"
					},
					{
						"name": "BidAmountLocalMicro",
						"type": "varchar"
					},
					{
						"name": "AutomaticallySelectBid",
						"type": "varchar"
					},
					{
						"name": "AdvertiserDomain",
						"type": "varchar"
					},
					{
						"name": "TargetCPALocalMicro",
						"type": "varchar"
					},
					{
						"name": "PrimaryWebEventTag",
						"type": "varchar"
					},
					{
						"name": "ChargeBy",
						"type": "varchar"
					},
					{
						"name": "ProductType",
						"type": "varchar"
					},
					{
						"name": "EndDate",
						"type": "varchar"
					},
					{
						"name": "BidUnit",
						"type": "varchar"
					},
					{
						"name": "TotalBudgetAmountLocalMicro",
						"type": "varchar"
					},
					{
						"name": "Objective",
						"type": "varchar"
					},
					{
						"name": "Id",
						"type": "varchar"
					},
					{
						"name": "EntityStatus",
						"type": "varchar"
					},
					{
						"name": "Optimization",
						"type": "varchar"
					},
					{
						"name": "Currency",
						"type": "varchar"
					},
					{
						"name": "Created",
						"type": "varchar"
					},
					{
						"name": "Updated",
						"type": "varchar"
					},
					{
						"name": "CreativeSource",
						"type": "varchar"
					},
					{
						"name": "CampaignId",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TwitterLineItemStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterLineItemString')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "LineItemString",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TwitterLineItemString"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterLineItemTweet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TweetId",
						"type": "varchar"
					},
					{
						"name": "LineItemId",
						"type": "varchar"
					},
					{
						"name": "Created",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "Updated",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "EntityStatus",
						"type": "varchar"
					},
					{
						"name": "ApprovalStatus",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TwitterLineItemTweet"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterLineItemTweetStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TweetId",
						"type": "varchar"
					},
					{
						"name": "LineItemId",
						"type": "varchar"
					},
					{
						"name": "created_at",
						"type": "varchar"
					},
					{
						"name": "updated_at",
						"type": "varchar"
					},
					{
						"name": "entity_status",
						"type": "varchar"
					},
					{
						"name": "approval_status",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TwitterLineItemTweetStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterObjective')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "DisplayName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TwitterObjective"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterOrganicTweet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TweetId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "FullText",
						"type": "varchar"
					},
					{
						"name": "FavoriteCount",
						"type": "float",
						"precision": 15
					},
					{
						"name": "RetweetCount",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Created",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "Favorited",
						"type": "float",
						"precision": 15
					},
					{
						"name": "InReplyToStatusId",
						"type": "varchar"
					},
					{
						"name": "AccountId",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TwitterOrganicTweet"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterOrganicTweetMetrics')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TweetId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "MetricDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Impressions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TweetsSend",
						"type": "float",
						"precision": 15
					},
					{
						"name": "QualifiedImpressions",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Follows",
						"type": "float",
						"precision": 15
					},
					{
						"name": "AppClicks",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Retweets",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Unfollows",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Likes",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Engagements",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Clicks",
						"type": "float",
						"precision": 15
					},
					{
						"name": "CardEngagements",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PollCardVote",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Replies",
						"type": "float",
						"precision": 15
					},
					{
						"name": "BilledChargeLocalMicro",
						"type": "float",
						"precision": 15
					},
					{
						"name": "BilledEngagements",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TwitterOrganicTweetMetrics"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterOrganicTweetMetricsStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TweetId",
						"type": "varchar"
					},
					{
						"name": "StartDate",
						"type": "varchar"
					},
					{
						"name": "EndDate",
						"type": "varchar"
					},
					{
						"name": "impressions",
						"type": "varchar"
					},
					{
						"name": "tweets_send",
						"type": "varchar"
					},
					{
						"name": "qualified_impressions",
						"type": "varchar"
					},
					{
						"name": "follows",
						"type": "varchar"
					},
					{
						"name": "app_clicks",
						"type": "varchar"
					},
					{
						"name": "retweets",
						"type": "varchar"
					},
					{
						"name": "unfollows",
						"type": "varchar"
					},
					{
						"name": "likes",
						"type": "varchar"
					},
					{
						"name": "engagements",
						"type": "varchar"
					},
					{
						"name": "clicks",
						"type": "varchar"
					},
					{
						"name": "card_engagements",
						"type": "varchar"
					},
					{
						"name": "poll_card_vote",
						"type": "varchar"
					},
					{
						"name": "replies",
						"type": "varchar"
					},
					{
						"name": "billed_charge_local_micro",
						"type": "varchar"
					},
					{
						"name": "billed_engagements",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TwitterOrganicTweetMetricsStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterOrganicTweetStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "tweet_id",
						"type": "varchar"
					},
					{
						"name": "full_text",
						"type": "varchar"
					},
					{
						"name": "favorite_count",
						"type": "varchar"
					},
					{
						"name": "retweet_count",
						"type": "varchar"
					},
					{
						"name": "created_at",
						"type": "varchar"
					},
					{
						"name": "favorited",
						"type": "varchar"
					},
					{
						"name": "in_reply_to_status_id",
						"type": "varchar"
					},
					{
						"name": "account_id",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TwitterOrganicTweetStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterOrganicTweetString')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "OrganicTweetString",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TwitterOrganicTweetString"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterPromotedTweet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TweetId",
						"type": "varchar"
					},
					{
						"name": "LineItemId",
						"type": "varchar"
					},
					{
						"name": "created_at",
						"type": "varchar"
					},
					{
						"name": "updated_at",
						"type": "varchar"
					},
					{
						"name": "entity_status",
						"type": "varchar"
					},
					{
						"name": "approval_status",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TwitterPromotedTweet"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterPromotedTweetStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TweetId",
						"type": "varchar"
					},
					{
						"name": "LineItemId",
						"type": "varchar"
					},
					{
						"name": "created_at",
						"type": "varchar"
					},
					{
						"name": "updated_at",
						"type": "varchar"
					},
					{
						"name": "entity_status",
						"type": "varchar"
					},
					{
						"name": "approval_status",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TwitterPromotedTweetStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterTweet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TweetId",
						"type": "varchar"
					},
					{
						"name": "AccountId",
						"type": "varchar"
					},
					{
						"name": "FullText",
						"type": "varchar"
					},
					{
						"name": "TweetType",
						"type": "varchar"
					},
					{
						"name": "Hashtags",
						"type": "varchar"
					},
					{
						"name": "InReplyToStatusIdStr",
						"type": "varchar"
					},
					{
						"name": "Geo",
						"type": "varchar"
					},
					{
						"name": "InReplyToUserId",
						"type": "varchar"
					},
					{
						"name": "Created",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "CardUri",
						"type": "varchar"
					},
					{
						"name": "RetweetCount",
						"type": "varchar"
					},
					{
						"name": "InReplyToScreenName",
						"type": "varchar"
					},
					{
						"name": "Source",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TwitterTweet"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterTweetStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "account_id",
						"type": "varchar"
					},
					{
						"name": "tweet_type",
						"type": "varchar"
					},
					{
						"name": "hashtags",
						"type": "varchar"
					},
					{
						"name": "in_reply_to_status_id_str",
						"type": "varchar"
					},
					{
						"name": "geo",
						"type": "varchar"
					},
					{
						"name": "in_reply_to_user_id",
						"type": "varchar"
					},
					{
						"name": "created_at",
						"type": "varchar"
					},
					{
						"name": "full_text",
						"type": "varchar"
					},
					{
						"name": "card_uri",
						"type": "varchar"
					},
					{
						"name": "retweet_count",
						"type": "varchar"
					},
					{
						"name": "in_reply_to_screen_name",
						"type": "varchar"
					},
					{
						"name": "tweet_id",
						"type": "varchar"
					},
					{
						"name": "source",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TwitterTweetStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterWebSiteCardStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Twitter"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "WebsiteShortenedUrl",
						"type": "varchar"
					},
					{
						"name": "ImageDisplayHeight",
						"type": "varchar"
					},
					{
						"name": "MediaUrl",
						"type": "varchar"
					},
					{
						"name": "WebsiteDisplayUrl",
						"type": "varchar"
					},
					{
						"name": "Id",
						"type": "varchar"
					},
					{
						"name": "WebsiteDestUrl",
						"type": "varchar"
					},
					{
						"name": "Created",
						"type": "varchar"
					},
					{
						"name": "MediaKey",
						"type": "varchar"
					},
					{
						"name": "ImageDisplayWidth",
						"type": "varchar"
					},
					{
						"name": "WebsiteTitle",
						"type": "varchar"
					},
					{
						"name": "CardUri",
						"type": "varchar"
					},
					{
						"name": "WebsiteUrl",
						"type": "varchar"
					},
					{
						"name": "Updated",
						"type": "varchar"
					},
					{
						"name": "CardType",
						"type": "varchar"
					},
					{
						"name": "WebsiteDestinationUrl",
						"type": "varchar"
					},
					{
						"name": "AccountId",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TwitterWebSiteCardStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VoucherServices')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MSDynamics"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "JournalId",
						"type": "varchar"
					},
					{
						"name": "MainAccountId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MainAccountCategoryId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "SerialNumber",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "TransactionCurrencyId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "CurrencyId",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "TransactionType",
						"type": "varchar"
					},
					{
						"name": "TransactionCurrencyAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "AccountingCurrencyAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "ReportingCurrencyAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "ExchangeRate",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "TransactionDate",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "EmployeeLedgerDimension",
						"type": "varchar"
					},
					{
						"name": "CustomerLedgerDimension",
						"type": "varchar"
					},
					{
						"name": "VendorLedgerDimension",
						"type": "varchar"
					},
					{
						"name": "ClassLedgerDimension",
						"type": "varchar"
					},
					{
						"name": "ClientsLedgerDimension",
						"type": "varchar"
					},
					{
						"name": "DepartmentLedgerDimension",
						"type": "varchar"
					},
					{
						"name": "ProjectLedgerDimension",
						"type": "varchar"
					},
					{
						"name": "SPVLedgerDimension",
						"type": "varchar"
					},
					{
						"name": "TaxGroup",
						"type": "varchar"
					},
					{
						"name": "TaxItemGroup",
						"type": "varchar"
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Description",
						"type": "varchar"
					},
					{
						"name": "Text",
						"type": "varchar"
					},
					{
						"name": "Voucher",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "VoucherServices"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VoucherServicesStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DashboardDb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MSDynamics"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerLedgerDimension",
						"type": "varchar"
					},
					{
						"name": "TransactionType",
						"type": "varchar"
					},
					{
						"name": "DepartmentLedgerDimension",
						"type": "varchar"
					},
					{
						"name": "SPVLedgerDimension",
						"type": "varchar"
					},
					{
						"name": "TransactionCurrencyAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "Text",
						"type": "varchar"
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "ReportingCurrencyAmount",
						"type": "varchar"
					},
					{
						"name": "ClassLedgerDimension",
						"type": "varchar"
					},
					{
						"name": "JournalId",
						"type": "varchar"
					},
					{
						"name": "TransDate",
						"type": "varchar"
					},
					{
						"name": "ProjectLedgerDimension",
						"type": "varchar"
					},
					{
						"name": "EmployeeLedgerDimension",
						"type": "varchar"
					},
					{
						"name": "TransactionCurrencyCode",
						"type": "varchar"
					},
					{
						"name": "ExchRate",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "MainAccountId",
						"type": "varchar"
					},
					{
						"name": "TaxGroup",
						"type": "varchar"
					},
					{
						"name": "Voucher",
						"type": "varchar"
					},
					{
						"name": "MainAccountCategory",
						"type": "varchar"
					},
					{
						"name": "Currency",
						"type": "varchar"
					},
					{
						"name": "AccountingCurrencyAmount",
						"type": "varchar"
					},
					{
						"name": "Description",
						"type": "varchar"
					},
					{
						"name": "SerialNumber",
						"type": "varchar"
					},
					{
						"name": "TaxItemGroup",
						"type": "varchar"
					},
					{
						"name": "ClientsLedgerDimension",
						"type": "varchar"
					},
					{
						"name": "VendorLedgerDimension",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "VoucherServicesStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DashboardDb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/asciiFiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sftpbinaryBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(formatDateTime(utcnow(),'MMMMddyyyy'),'_ind.csv')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('',formatDateTime(utcnow(),'MMMMddyyyy'))",
							"type": "Expression"
						},
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sftpbinaryBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/binaryBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sftpbinaryBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@concat('',formatDateTime(utcnow(),'MMMMddyyyy'))",
							"type": "Expression"
						},
						"container": "temp"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sftpbinaryBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blobTomysql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "indblobToindSql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "inddata"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/indblobToindSql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/catoMysqlca')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "indblobToindSql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "cadata"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/indblobToindSql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/nseIndTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureMySql1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "ind"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureMySql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sftpBinary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SftpConnLs",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"folderPath": {
							"value": "@concat('CM30/DATA/',formatDateTime(utcnow(),'MMMMddyyyy'))",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SftpConnLs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sftpbinBlob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sftpbinaryBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "concat('',formatDateTime(utcnow(),'MMMMddyyyy')",
							"type": "Expression"
						},
						"container": "temp"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sftpbinaryBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sftpfiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SftpConnLs",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"folderPath": {
							"value": "@concat('CM30/DATA/',formatDateTime(utcnow(),'MMMMddyyyy'))",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SftpConnLs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBatch1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBatch",
				"typeProperties": {
					"accountName": "[parameters('AzureBatch1_properties_typeProperties_accountName')]",
					"accessKey": {
						"type": "SecureString",
						"value": "[parameters('AzureBatch1_accessKey')]"
					},
					"batchUri": "[parameters('AzureBatch1_properties_typeProperties_batchUri')]",
					"poolName": "[parameters('AzureBatch1_properties_typeProperties_poolName')]",
					"linkedServiceName": {
						"referenceName": "sftpbinaryBlob",
						"type": "LinkedServiceReference"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sftpbinaryBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-4486241318413208.8.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks1_accessToken')]"
					},
					"existingClusterId": "1203-115615-brake54"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMySql1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('AzureMySql1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DashboardBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('DashboardBlobStorage_connectionString')]"
				},
				"connectVia": {
					"referenceName": "HighPerformanceIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/HighPerformanceIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DashboardDb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('DashboardDb_connectionString')]"
				},
				"connectVia": {
					"referenceName": "HighPerformanceIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/HighPerformanceIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DashboardTableStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureTableStorage",
				"typeProperties": {
					"connectionString": "[parameters('DashboardTableStorage_connectionString')]"
				},
				"connectVia": {
					"referenceName": "HighPerformanceIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/HighPerformanceIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DynamicRESTAPI')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"Url": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('DynamicRESTAPI_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "HighPerformanceIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/HighPerformanceIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetGoogleAdsBearerToken')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('GetGoogleAdsBearerToken_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('GetGoogleAdsBearerToken_functionKey')]"
					}
				},
				"connectVia": {
					"referenceName": "HighPerformanceIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/HighPerformanceIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetGoogleDoubleClickBidManagerToken')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('GetGoogleDoubleClickBidManagerToken_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('GetGoogleDoubleClickBidManagerToken_functionKey')]"
					}
				},
				"connectVia": {
					"referenceName": "HighPerformanceIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/HighPerformanceIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetHubspotBearerToken')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('GetHubspotBearerToken_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('GetHubspotBearerToken_functionKey')]"
					}
				},
				"connectVia": {
					"referenceName": "HighPerformanceIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/HighPerformanceIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetTwitterAuthenticationHeader')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('GetTwitterAuthenticationHeader_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('GetTwitterAuthenticationHeader_functionKey')]"
					}
				},
				"connectVia": {
					"referenceName": "HighPerformanceIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/HighPerformanceIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GoogleAnalyticsAPI')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('GoogleAnalyticsAPI_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "HighPerformanceIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/HighPerformanceIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GoogleAnalyticsFunction')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('GoogleAnalyticsFunction_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('GoogleAnalyticsFunction_functionKey')]"
					}
				},
				"connectVia": {
					"referenceName": "HighPerformanceIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/HighPerformanceIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GoogleDV360API')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"Url": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('GoogleDV360API_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "HighPerformanceIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/HighPerformanceIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GoogleDV360Function')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('GoogleDV360Function_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('GoogleDV360Function_functionKey')]"
					}
				},
				"connectVia": {
					"referenceName": "HighPerformanceIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/HighPerformanceIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedinAPI')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"Url": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('LinkedinAPI_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "HighPerformanceIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/HighPerformanceIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MSDynamicsAXLiveService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "DynamicsAX",
				"typeProperties": {
					"url": "[parameters('MSDynamicsAXLiveService_properties_typeProperties_url')]",
					"tenant": "[parameters('MSDynamicsAXLiveService_properties_typeProperties_tenant')]",
					"aadResourceId": "[parameters('MSDynamicsAXLiveService_properties_typeProperties_aadResourceId')]",
					"servicePrincipalId": "[parameters('MSDynamicsAXLiveService_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('MSDynamicsAXLiveService_servicePrincipalKey')]"
					}
				},
				"connectVia": {
					"referenceName": "HighPerformanceIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/HighPerformanceIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PythonBatch')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBatch",
				"typeProperties": {
					"accountName": "[parameters('PythonBatch_properties_typeProperties_accountName')]",
					"accessKey": {
						"type": "SecureString",
						"value": "[parameters('PythonBatch_accessKey')]"
					},
					"batchUri": "[parameters('PythonBatch_properties_typeProperties_batchUri')]",
					"poolName": "[parameters('PythonBatch_properties_typeProperties_poolName')]",
					"linkedServiceName": {
						"referenceName": "sftpbinaryBlob",
						"type": "LinkedServiceReference"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sftpbinaryBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SaveDV360MetricCSV')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('SaveDV360MetricCSV_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('SaveDV360MetricCSV_functionKey')]"
					}
				},
				"connectVia": {
					"referenceName": "HighPerformanceIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/HighPerformanceIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SaveDV360ReportFunction')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('SaveDV360ReportFunction_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('SaveDV360ReportFunction_functionKey')]"
					}
				},
				"connectVia": {
					"referenceName": "HighPerformanceIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/HighPerformanceIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SftpConnLs')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('SftpConnLs_properties_typeProperties_host')]",
					"port": "6010",
					"skipHostKeyValidation": true,
					"authenticationType": "SshPublicKey",
					"userName": "[parameters('SftpConnLs_properties_typeProperties_userName')]",
					"privateKeyContent": {
						"type": "SecureString",
						"value": "[parameters('SftpConnLs_privateKeyContent')]"
					},
					"passPhrase": {
						"type": "SecureString",
						"value": "[parameters('SftpConnLs_passPhrase')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterAnalyticsRequestDatesCheck')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('TwitterAnalyticsRequestDatesCheck_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('TwitterAnalyticsRequestDatesCheck_functionKey')]"
					}
				},
				"connectVia": {
					"referenceName": "HighPerformanceIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/HighPerformanceIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/batchnse')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBatch",
				"typeProperties": {
					"accountName": "[parameters('batchnse_properties_typeProperties_accountName')]",
					"accessKey": {
						"type": "SecureString",
						"value": "[parameters('batchnse_accessKey')]"
					},
					"batchUri": "[parameters('batchnse_properties_typeProperties_batchUri')]",
					"poolName": "[parameters('batchnse_properties_typeProperties_poolName')]",
					"linkedServiceName": {
						"referenceName": "sftpbinaryBlob",
						"type": "LinkedServiceReference"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sftpbinaryBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bintoasciiAdb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-5688248870232139.19.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('bintoasciiAdb_accessToken')]"
					},
					"existingClusterId": "1202-171015-hulk634"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/indblobToindSql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('indblobToindSql_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sftpbinaryBlob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('sftpbinaryBlob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AdWordsTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 3,
						"startTime": "2020-11-06T08:15:00",
						"timeZone": "Arab Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DV360CampaignMetricsTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 3,
						"startTime": "2020-11-06T08:10:00",
						"timeZone": "Arab Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DV360CostMetricsTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 3,
						"startTime": "2020-11-06T08:10:00",
						"timeZone": "Arab Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GoogleAnalyticsTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 3,
						"startTime": "2020-11-06T07:55:00",
						"timeZone": "Arab Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HubspotGetAllTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-11-08T14:19:00",
						"timeZone": "Arab Standard Time",
						"schedule": {
							"minutes": [
								10
							],
							"hours": [
								0
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HubspotTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 3,
						"startTime": "2020-11-06T08:00:00",
						"timeZone": "Arab Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedinTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 3,
						"startTime": "2020-11-06T07:30:00",
						"timeZone": "Arab Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MSDynamicsTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 3,
						"startTime": "2020-11-06T08:15:00",
						"timeZone": "Arab Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterOrganicTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 3,
						"startTime": "2020-11-06T07:50:00",
						"timeZone": "Arab Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 3,
						"startTime": "2020-11-06T07:40:00",
						"timeZone": "Arab Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EightCoreIntegrationRunTime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "North Europe",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 16,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HighPerformanceIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 80,
							"timeToLive": 30
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AccountDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Linkedin"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AccountStage",
								"type": "DatasetReference"
							},
							"name": "AccountStage"
						},
						{
							"dataset": {
								"referenceName": "AccountStatus",
								"type": "DatasetReference"
							},
							"name": "AccountStatus"
						},
						{
							"dataset": {
								"referenceName": "AccountType",
								"type": "DatasetReference"
							},
							"name": "AccountType"
						},
						{
							"dataset": {
								"referenceName": "Currency",
								"type": "DatasetReference"
							},
							"name": "Currency"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Account",
								"type": "DatasetReference"
							},
							"name": "IngestIntoAccount"
						}
					],
					"transformations": [
						{
							"name": "JoinStatus"
						},
						{
							"name": "JoinType"
						},
						{
							"name": "JoinCurrency"
						},
						{
							"name": "SelectAccountColumns"
						},
						{
							"name": "PrepareColumns"
						}
					],
					"script": "source(output(\n\t\tAccountId as integer,\n\t\tName as string,\n\t\tCurrency as string,\n\t\tStatus as string,\n\t\tCreated as long,\n\t\tModified as long,\n\t\tType as string,\n\t\tSourceId as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> AccountStage\nsource(output(\n\t\tAccountStatusId as short,\n\t\tName as string,\n\t\tDisplayName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> AccountStatus\nsource(output(\n\t\tAccountTypeId as short,\n\t\tName as string,\n\t\tDisplayName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> AccountType\nsource(output(\n\t\tCurrencyId as short,\n\t\tName as string,\n\t\tDisplayName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Currency\nJoinType, AccountStatus join(Status == AccountStatus@Name,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinStatus\nJoinCurrency, AccountType join(Type == AccountType@Name,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinType\nAccountStage, Currency join(Currency == Currency@Name,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinCurrency\nJoinStatus select(mapColumn(\n\t\tAccountId,\n\t\tName = AccountStage@Name,\n\t\tCreated,\n\t\tModified,\n\t\tSourceId,\n\t\tCurrencyId,\n\t\tAccountTypeId,\n\t\tAccountStatusId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAccountColumns\nSelectAccountColumns derive(Modified = toTimestamp(Modified, 'yyyy-MM-dd HH:mm:ss'),\n\t\tCreated = toTimestamp(Created, 'yyyy-MM-dd HH:mm:ss'),\n\t\tSourceId = 1,\n\t\tCurrencyId = toInteger(CurrencyId),\n\t\tTypeId = toInteger(AccountTypeId),\n\t\tStatusId = toInteger(AccountStatusId)) ~> PrepareColumns\nPrepareColumns sink(input(\n\t\tAccountId as integer,\n\t\tSourceId as integer,\n\t\tDisplayName as string,\n\t\tName as string,\n\t\tCurrencyId as integer,\n\t\tCreated as timestamp,\n\t\tModified as timestamp,\n\t\tStatusId as integer,\n\t\tTypeId as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tAccountId,\n\t\tSourceId,\n\t\tName,\n\t\tCurrencyId,\n\t\tCreated,\n\t\tModified,\n\t\tStatusId,\n\t\tTypeId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> IngestIntoAccount"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AccountStage')]",
				"[concat(variables('factoryId'), '/datasets/AccountStatus')]",
				"[concat(variables('factoryId'), '/datasets/AccountType')]",
				"[concat(variables('factoryId'), '/datasets/Currency')]",
				"[concat(variables('factoryId'), '/datasets/Account')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AdvertismentDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Linkedin"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AdvertismentStage",
								"type": "DatasetReference"
							},
							"name": "AdvertismentStage"
						},
						{
							"dataset": {
								"referenceName": "AdvertismentType",
								"type": "DatasetReference"
							},
							"name": "AdvertismentType"
						},
						{
							"dataset": {
								"referenceName": "AdvertismentStatus",
								"type": "DatasetReference"
							},
							"name": "AdvertismentStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Advertisment",
								"type": "DatasetReference"
							},
							"name": "Advertisment"
						}
					],
					"transformations": [
						{
							"name": "JoinType"
						},
						{
							"name": "JoinStatus"
						},
						{
							"name": "SelectAdvertismentColumns"
						},
						{
							"name": "PrepareAdvertismentCoumns"
						}
					],
					"script": "source(output(\n\t\tAdvertismentId as integer,\n\t\tName as string,\n\t\tStatus as string,\n\t\tAdvertismentGroup as string,\n\t\tHeadline as string,\n\t\tIntroductionText as string,\n\t\tUrl as string,\n\t\tLine as string,\n\t\tSponsoredUpdateType as string,\n\t\tCampaignId as string,\n\t\tType as string,\n\t\tCreated as long,\n\t\tModified as long,\n\t\tDSCName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> AdvertismentStage\nsource(output(\n\t\tAdvertismentTypeId as short,\n\t\tName as string,\n\t\tDisplayName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> AdvertismentType\nsource(output(\n\t\tAdvertismentStatusId as short,\n\t\tName as string,\n\t\tDisplayName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> AdvertismentStatus\nJoinStatus, AdvertismentType join(Type == AdvertismentType@Name,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinType\nAdvertismentStage, AdvertismentStatus join(Status == AdvertismentStatus@Name,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinStatus\nJoinType select(mapColumn(\n\t\tAdvertismentId,\n\t\tName = AdvertismentStage@Name,\n\t\tAdvertismentGroup,\n\t\tHeadline,\n\t\tIntroductionText,\n\t\tUrl,\n\t\tLine,\n\t\tSponsoredUpdateType,\n\t\tCampaignId,\n\t\tCreated,\n\t\tModified,\n\t\tDSCName,\n\t\tAdvertismentStatusId,\n\t\tAdvertismentTypeId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAdvertismentColumns\nSelectAdvertismentColumns derive(Created = toTimestamp(Created, 'yyyy-MM-dd HH:mm:ss'),\n\t\tModified = toTimestamp(Modified, 'yyyy-MM-dd HH:mm:ss'),\n\t\tCampaignId = replace(CampaignId, 'urn:li:sponsoredCampaign:', '')) ~> PrepareAdvertismentCoumns\nPrepareAdvertismentCoumns sink(input(\n\t\tAdvertismentId as integer,\n\t\tName as string,\n\t\tAdvertismentGroupId as integer,\n\t\tStatusId as integer,\n\t\tHeadline as string,\n\t\tIntroductionText as string,\n\t\tUrl as string,\n\t\tLine as string,\n\t\tSponsoredUpdateType as string,\n\t\tDSCName as string,\n\t\tCampaignId as integer,\n\t\tTypeId as integer,\n\t\tCreated as timestamp,\n\t\tModified as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tAdvertismentId,\n\t\tName,\n\t\tAdvertismentGroupId = AdvertismentGroup,\n\t\tStatusId = AdvertismentStatusId,\n\t\tHeadline,\n\t\tIntroductionText,\n\t\tUrl,\n\t\tLine,\n\t\tSponsoredUpdateType,\n\t\tDSCName,\n\t\tCampaignId,\n\t\tTypeId = AdvertismentTypeId,\n\t\tCreated,\n\t\tModified\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> Advertisment"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AdvertismentStage')]",
				"[concat(variables('factoryId'), '/datasets/AdvertismentType')]",
				"[concat(variables('factoryId'), '/datasets/AdvertismentStatus')]",
				"[concat(variables('factoryId'), '/datasets/Advertisment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AdvertismentDetailLinkedinDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Linkedin"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AdvertismentDetailLinkedinStage",
								"type": "DatasetReference"
							},
							"name": "AdvertismentDetailLinkedinStage"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AdvertismentDetailLinkedin",
								"type": "DatasetReference"
							},
							"name": "AdvertismentDetailLinkedin"
						}
					],
					"transformations": [
						{
							"name": "PrepareColumns"
						}
					],
					"script": "source(output(\n\t\tAdvertismentId as string,\n\t\tAdvertismentDateDay as integer,\n\t\tAdvertismentDateMonth as integer,\n\t\tAdvertismentDateYear as integer,\n\t\tAdvertismentEndDay as integer,\n\t\tAdvertismentEndMonth as integer,\n\t\tAdvertismentEndYear as integer,\n\t\tTotalSpent as integer,\n\t\tactionClicks as integer,\n\t\tadUnitClicks as integer,\n\t\tapproximateUniqueImpressions as integer,\n\t\tcardClicks as integer,\n\t\tcardImpressions as integer,\n\t\tclicks as integer,\n\t\tcommentLikes as integer,\n\t\tcomments as integer,\n\t\tcompanyPageClicks as integer,\n\t\tconversionValueInLocalCurrency as integer,\n\t\tcostInLocalCurrency as string,\n\t\tcostInUsd as string,\n\t\texternalWebsiteConversions as integer,\n\t\texternalWebsitePostClickConversions as integer,\n\t\texternalWebsitePostViewConversions as integer,\n\t\tfollows as integer,\n\t\tfullScreenPlays as integer,\n\t\timpressions as integer,\n\t\tlandingPageClicks as integer,\n\t\tleadGenerationMailContactInfoShares as integer,\n\t\tleadGenerationMailInterestedClicks as integer,\n\t\tlikes as integer,\n\t\toneClickLeadFormOpens as integer,\n\t\toneClickLeads as integer,\n\t\topens as integer,\n\t\totherEngagements as integer,\n\t\treturnOnAreactionsdSpend as integer,\n\t\tsends as integer,\n\t\tshares as integer,\n\t\ttextUrlClicks as integer,\n\t\ttotalEngagements as integer,\n\t\tvideoCompletions as integer,\n\t\tvideoFirstQuartileCompletions as integer,\n\t\tvideoMidpointCompletions as integer,\n\t\tvideoStarts as integer,\n\t\tvideoThirdQuartileCompletions as integer,\n\t\tvideoViews as integer,\n\t\tviralCardClicks as integer,\n\t\tviralCardImpressions as integer,\n\t\tviralClicks as integer,\n\t\tviralCommentLikes as integer,\n\t\tviralComments as integer,\n\t\tviralCompanyPageClicks as integer,\n\t\tviralExternalWebsiteConversions as integer,\n\t\tviralExternalWebsitePostClickConversions as integer,\n\t\tviralExternalWebsitePostViewConversions as integer,\n\t\tviralFollows as integer,\n\t\tviralFullScreenPlays as integer,\n\t\tviralImpressions as integer,\n\t\tviralLandingPageClicks as integer,\n\t\tviralLikes as integer,\n\t\tviralOneClickLeadFormOpens as integer,\n\t\tviralOneClickLeads as integer,\n\t\tviralOtherEngagements as integer,\n\t\tviralReactions as integer,\n\t\tviralShares as integer,\n\t\tviralTotalEngagements as integer,\n\t\tviralVideoCompletions as integer,\n\t\tviralVideoFirstQuartileCompletions as integer,\n\t\tviralVideoMidpointCompletions as integer,\n\t\tviralVideoStarts as integer,\n\t\tviralVideoThirdQuartileCompletions as integer,\n\t\tviralVideoViews as integer,\n\t\treactions as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> AdvertismentDetailLinkedinStage\nAdvertismentDetailLinkedinStage derive(AdvertismentId = replace(replace(AdvertismentId, '[\"urn:li:sponsoredCreative:',''),'\"]',''),\n\t\tAdvertismentStartDate = toDate(toString(AdvertismentDateYear) + '-' + toString(AdvertismentDateMonth) +  '-'+ toString(AdvertismentDateDay) , 'yyyy-MM-dd'),\n\t\tAdvertismentEndDate = toDate(toString(AdvertismentEndYear) + '-' + toString(AdvertismentEndMonth) +  '-'+ toString(AdvertismentEndDay) , 'yyyy-MM-dd')) ~> PrepareColumns\nPrepareColumns sink(input(\n\t\tAdvertismentId as integer,\n\t\tAdvertismentStartDate as timestamp,\n\t\tAdvertismentEndDate as timestamp,\n\t\tTotalSpent as integer,\n\t\tActionClicks as integer,\n\t\tAdUnitClicks as integer,\n\t\tApproximateUniqueImpressions as integer,\n\t\tCardClicks as integer,\n\t\tCardImpressions as integer,\n\t\tClicks as integer,\n\t\tCommentLikes as integer,\n\t\tComments as integer,\n\t\tCompanyPageClicks as integer,\n\t\tConversionValueInLocalCurrency as integer,\n\t\tCostInLocalCurrency as double,\n\t\tCostInUsd as double,\n\t\tExternalWebsiteConversions as integer,\n\t\tExternalWebsitePostClickConversions as integer,\n\t\tExternalWebsitePostViewConversions as integer,\n\t\tFollows as integer,\n\t\tFullScreenPlays as integer,\n\t\tImpressions as integer,\n\t\tLandingPageClicks as integer,\n\t\tLeadGenerationMailContactInfoShares as integer,\n\t\tLeadGenerationMailInterestedClicks as integer,\n\t\tLikes as integer,\n\t\tOneClickLeadFormOpens as integer,\n\t\tOneClickLeads as integer,\n\t\tOpens as integer,\n\t\tOtherEngagements as integer,\n\t\tReturnOnAreactionsdSpend as integer,\n\t\tSends as integer,\n\t\tShares as integer,\n\t\tTextUrlClicks as integer,\n\t\tTotalEngagements as integer,\n\t\tVideoCompletions as integer,\n\t\tVideoFirstQuartileCompletions as integer,\n\t\tVideoMidpointCompletions as integer,\n\t\tVideoStarts as integer,\n\t\tVideoThirdQuartileCompletions as integer,\n\t\tVideoViews as integer,\n\t\tViralCardClicks as integer,\n\t\tViralCardImpressions as integer,\n\t\tViralClicks as integer,\n\t\tViralCommentLikes as integer,\n\t\tViralComments as integer,\n\t\tViralCompanyPageClicks as integer,\n\t\tViralExternalWebsiteConversions as integer,\n\t\tViralExternalWebsitePostClickConversions as integer,\n\t\tViralExternalWebsitePostViewConversions as integer,\n\t\tViralFollows as integer,\n\t\tViralFullScreenPlays as integer,\n\t\tViralImpressions as integer,\n\t\tViralLandingPageClicks as integer,\n\t\tViralLikes as integer,\n\t\tViralOneClickLeadFormOpens as integer,\n\t\tViralOneClickLeads as integer,\n\t\tViralOtherEngagements as integer,\n\t\tViralReactions as integer,\n\t\tViralShares as integer,\n\t\tViralTotalEngagements as integer,\n\t\tViralVideoCompletions as integer,\n\t\tViralVideoFirstQuartileCompletions as integer,\n\t\tViralVideoMidpointCompletions as integer,\n\t\tViralVideoStarts as integer,\n\t\tViralVideoThirdQuartileCompletions as integer,\n\t\tViralVideoViews as integer,\n\t\tReactions as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tAdvertismentId,\n\t\tAdvertismentStartDate,\n\t\tAdvertismentEndDate,\n\t\tTotalSpent,\n\t\tActionClicks = actionClicks,\n\t\tAdUnitClicks = adUnitClicks,\n\t\tApproximateUniqueImpressions = approximateUniqueImpressions,\n\t\tCardClicks = cardClicks,\n\t\tCardImpressions = cardImpressions,\n\t\tClicks = clicks,\n\t\tCommentLikes = commentLikes,\n\t\tComments = comments,\n\t\tCompanyPageClicks = companyPageClicks,\n\t\tConversionValueInLocalCurrency = conversionValueInLocalCurrency,\n\t\tCostInLocalCurrency = costInLocalCurrency,\n\t\tCostInUsd = costInUsd,\n\t\tExternalWebsiteConversions = externalWebsiteConversions,\n\t\tExternalWebsitePostClickConversions = externalWebsitePostClickConversions,\n\t\tExternalWebsitePostViewConversions = externalWebsitePostViewConversions,\n\t\tFollows = follows,\n\t\tFullScreenPlays = fullScreenPlays,\n\t\tImpressions = impressions,\n\t\tLandingPageClicks = landingPageClicks,\n\t\tLeadGenerationMailContactInfoShares = leadGenerationMailContactInfoShares,\n\t\tLeadGenerationMailInterestedClicks = leadGenerationMailInterestedClicks,\n\t\tLikes = likes,\n\t\tOneClickLeadFormOpens = oneClickLeadFormOpens,\n\t\tOneClickLeads = oneClickLeads,\n\t\tOpens = opens,\n\t\tOtherEngagements = otherEngagements,\n\t\tReturnOnAreactionsdSpend = returnOnAreactionsdSpend,\n\t\tSends = sends,\n\t\tShares = shares,\n\t\tTextUrlClicks = textUrlClicks,\n\t\tTotalEngagements = totalEngagements,\n\t\tVideoCompletions = videoCompletions,\n\t\tVideoFirstQuartileCompletions = videoFirstQuartileCompletions,\n\t\tVideoMidpointCompletions = videoMidpointCompletions,\n\t\tVideoStarts = videoStarts,\n\t\tVideoThirdQuartileCompletions = videoThirdQuartileCompletions,\n\t\tVideoViews = videoViews,\n\t\tViralCardClicks = viralCardClicks,\n\t\tViralCardImpressions = viralCardImpressions,\n\t\tViralClicks = viralClicks,\n\t\tViralCommentLikes = viralCommentLikes,\n\t\tViralComments = viralComments,\n\t\tViralCompanyPageClicks = viralCompanyPageClicks,\n\t\tViralExternalWebsiteConversions = viralExternalWebsiteConversions,\n\t\tViralExternalWebsitePostClickConversions = viralExternalWebsitePostClickConversions,\n\t\tViralExternalWebsitePostViewConversions = viralExternalWebsitePostViewConversions,\n\t\tViralFollows = viralFollows,\n\t\tViralFullScreenPlays = viralFullScreenPlays,\n\t\tViralImpressions = viralImpressions,\n\t\tViralLandingPageClicks = viralLandingPageClicks,\n\t\tViralLikes = viralLikes,\n\t\tViralOneClickLeadFormOpens = viralOneClickLeadFormOpens,\n\t\tViralOneClickLeads = viralOneClickLeads,\n\t\tViralOtherEngagements = viralOtherEngagements,\n\t\tViralReactions = viralReactions,\n\t\tViralShares = viralShares,\n\t\tViralTotalEngagements = viralTotalEngagements,\n\t\tViralVideoCompletions = viralVideoCompletions,\n\t\tViralVideoFirstQuartileCompletions = viralVideoFirstQuartileCompletions,\n\t\tViralVideoMidpointCompletions = viralVideoMidpointCompletions,\n\t\tViralVideoStarts = viralVideoStarts,\n\t\tViralVideoThirdQuartileCompletions = viralVideoThirdQuartileCompletions,\n\t\tViralVideoViews = viralVideoViews,\n\t\tReactions = reactions\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> AdvertismentDetailLinkedin"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AdvertismentDetailLinkedinStage')]",
				"[concat(variables('factoryId'), '/datasets/AdvertismentDetailLinkedin')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BudgetServicesDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "BudgetServicesStage",
								"type": "DatasetReference"
							},
							"name": "BudgetServicesStage"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "BudgetServices",
								"type": "DatasetReference"
							},
							"name": "BudgetServices"
						}
					],
					"transformations": [
						{
							"name": "PrepareColumns"
						}
					],
					"script": "source(output(\n\t\tSerialNumber as long,\n\t\tAccountingCurrencyAmount as decimal(18,0),\n\t\tClients as string,\n\t\tDepartment as integer,\n\t\tCurrencyCode as string,\n\t\tEmployee as string,\n\t\tMainAccountId as integer,\n\t\tCustomer as string,\n\t\tTransactionCurrencyCode as string,\n\t\tTransDate as string,\n\t\tClassDim as string,\n\t\tProject as string,\n\t\tText as string,\n\t\tReportingCurrencyAmount as decimal(18,0),\n\t\tSPV as string,\n\t\tTransactionCurrencyAmount as decimal(18,0),\n\t\tVendor as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> BudgetServicesStage\nBudgetServicesStage derive(TransDate = toTimestamp(replace(TransDate,' +00:00',''), 'MM/dd/yyyy HH:mm:ss')) ~> PrepareColumns\nPrepareColumns sink(input(\n\t\tSerialNumber as long,\n\t\tAccountingCurrencyAmount as decimal(18,0),\n\t\tClients as string,\n\t\tDepartmentId as integer,\n\t\tCurrencyCode as string,\n\t\tEmployee as string,\n\t\tMainAccountId as integer,\n\t\tCustomer as string,\n\t\tTransactionCurrencyCode as string,\n\t\tTransactionDate as timestamp,\n\t\tClassDim as string,\n\t\tProjectId as integer,\n\t\tText as string,\n\t\tReportingCurrencyAmount as decimal(18,0),\n\t\tSPV as string,\n\t\tTransactionCurrencyAmount as decimal(18,0),\n\t\tVendor as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tSerialNumber,\n\t\tAccountingCurrencyAmount,\n\t\tClients,\n\t\tDepartmentId = Department,\n\t\tCurrencyCode,\n\t\tEmployee,\n\t\tMainAccountId,\n\t\tCustomer,\n\t\tTransactionCurrencyCode,\n\t\tTransactionDate = TransDate,\n\t\tClassDim,\n\t\tProjectId = Project,\n\t\tText,\n\t\tReportingCurrencyAmount,\n\t\tSPV,\n\t\tTransactionCurrencyAmount,\n\t\tVendor\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> BudgetServices"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BudgetServicesStage')]",
				"[concat(variables('factoryId'), '/datasets/BudgetServices')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CampaignDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Linkedin"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CampaignStage",
								"type": "DatasetReference"
							},
							"name": "CampaignStage"
						},
						{
							"dataset": {
								"referenceName": "CampaignType",
								"type": "DatasetReference"
							},
							"name": "CampaignType"
						},
						{
							"dataset": {
								"referenceName": "CampaignStatus",
								"type": "DatasetReference"
							},
							"name": "CampaignStatus"
						},
						{
							"dataset": {
								"referenceName": "Objective",
								"type": "DatasetReference"
							},
							"name": "Objective"
						},
						{
							"dataset": {
								"referenceName": "CostType",
								"type": "DatasetReference"
							},
							"name": "CostType"
						},
						{
							"dataset": {
								"referenceName": "Currency",
								"type": "DatasetReference"
							},
							"name": "Currency"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Campaign",
								"type": "DatasetReference"
							},
							"name": "Campaign"
						}
					],
					"transformations": [
						{
							"name": "JoinType"
						},
						{
							"name": "JoinStatus"
						},
						{
							"name": "JoinObjective"
						},
						{
							"name": "JoinCostType"
						},
						{
							"name": "JoinUnitCurrency"
						},
						{
							"name": "SelectCampaignColumns"
						},
						{
							"name": "JoinDailyCurrency"
						},
						{
							"name": "SelectAllCampaignColumns"
						},
						{
							"name": "PrepareCampaignColumns"
						}
					],
					"script": "source(output(\n\t\tCampaignId as integer,\n\t\tName as string,\n\t\tDisplayName as string,\n\t\tCampaignGroup as string,\n\t\tType as string,\n\t\tStatus as string,\n\t\tCostType as string,\n\t\tObjective as string,\n\t\tAccount as string,\n\t\tCreated as long,\n\t\tModified as long,\n\t\tUnitCurrencyCode as string,\n\t\tUnitAmount as string,\n\t\tDailyCurrencyCode as string,\n\t\tDailyAmount as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> CampaignStage\nsource(output(\n\t\tCampaignTypeId as short,\n\t\tName as string,\n\t\tDisplayName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> CampaignType\nsource(output(\n\t\tCampaignStatusID as short,\n\t\tName as string,\n\t\tDisplayName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> CampaignStatus\nsource(output(\n\t\tObjectiveId as short,\n\t\tName as string,\n\t\tDisplayName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Objective\nsource(output(\n\t\tCostTypeId as short,\n\t\tName as string,\n\t\tDisplayName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> CostType\nsource(output(\n\t\tCurrencyId as short,\n\t\tName as string,\n\t\tDisplayName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Currency\nJoinStatus, CampaignType join(Type == CampaignType@Name,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinType\nJoinObjective, CampaignStatus join(Status == CampaignStatus@Name,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinStatus\nJoinCostType, Objective join(Objective == Objective@Name,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinObjective\nJoinUnitCurrency, CostType join(CostType == CostType@Name,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinCostType\nCampaignStage, Currency join(UnitCurrencyCode == Currency@Name,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinUnitCurrency\nJoinType select(mapColumn(\n\t\tCampaignId,\n\t\tName = CampaignStage@Name,\n\t\tDisplayName = CampaignStage@DisplayName,\n\t\tCampaignGroup,\n\t\tAccount,\n\t\tCreated,\n\t\tModified,\n\t\tUnitCurrencyCode,\n\t\tUnitAmount,\n\t\tDailyCurrencyCode,\n\t\tDailyAmount,\n\t\tUnitCurrencyId = CurrencyId,\n\t\tCostTypeId,\n\t\tObjectiveId,\n\t\tCampaignStatusID,\n\t\tCampaignTypeId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCampaignColumns\nSelectCampaignColumns, Currency join(DailyCurrencyCode == Currency@Name,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinDailyCurrency\nJoinDailyCurrency select(mapColumn(\n\t\tCampaignId,\n\t\tName = SelectCampaignColumns@Name,\n\t\tDisplayName = SelectCampaignColumns@DisplayName,\n\t\tCampaignGroup,\n\t\tAccount,\n\t\tCreated,\n\t\tModified,\n\t\tUnitAmount,\n\t\tDailyAmount,\n\t\tUnitCurrencyId,\n\t\tCostTypeId,\n\t\tObjectiveId,\n\t\tCampaignStatusId = CampaignStatusID,\n\t\tCampaignTypeId,\n\t\tDailyCurrencyId = CurrencyId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAllCampaignColumns\nSelectAllCampaignColumns derive(CampaignGroupId = replace(CampaignGroup,'urn:li:sponsoredCampaignGroup:',''),\n\t\tAccountId = replace(Account, 'urn:li:sponsoredAccount:', ''),\n\t\tCreated = toTimestamp(Created, 'yyyy-MM-dd HH:mm:ss'),\n\t\tModified = toTimestamp(Modified, 'yyyy-MM-dd HH:mm:ss')) ~> PrepareCampaignColumns\nPrepareCampaignColumns sink(input(\n\t\tCampaignId as integer,\n\t\tName as string,\n\t\tDisplayName as string,\n\t\tCampaignGroupId as integer,\n\t\tTypeId as integer,\n\t\tAccountId as integer,\n\t\tStatusId as integer,\n\t\tCostTypeId as integer,\n\t\tObjectiveId as integer,\n\t\tCreated as timestamp,\n\t\tModified as timestamp,\n\t\tUnitCurrencyId as integer,\n\t\tUnitAmount as double,\n\t\tDailyCurrencyId as integer,\n\t\tDailyAmount as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tCampaignId,\n\t\tName,\n\t\tDisplayName,\n\t\tCampaignGroupId,\n\t\tTypeId = CampaignTypeId,\n\t\tAccountId,\n\t\tStatusId = CampaignStatusId,\n\t\tCostTypeId,\n\t\tObjectiveId,\n\t\tCreated,\n\t\tModified,\n\t\tUnitCurrencyId,\n\t\tUnitAmount,\n\t\tDailyCurrencyId,\n\t\tDailyAmount\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> Campaign"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CampaignStage')]",
				"[concat(variables('factoryId'), '/datasets/CampaignType')]",
				"[concat(variables('factoryId'), '/datasets/CampaignStatus')]",
				"[concat(variables('factoryId'), '/datasets/Objective')]",
				"[concat(variables('factoryId'), '/datasets/CostType')]",
				"[concat(variables('factoryId'), '/datasets/Currency')]",
				"[concat(variables('factoryId'), '/datasets/Campaign')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CampaignDetailLinkedinDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Linkedin"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CampaignDetailLinkedinStage",
								"type": "DatasetReference"
							},
							"name": "CampaignDetailLinkedinStage"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CampaignDetailLinkedin",
								"type": "DatasetReference"
							},
							"name": "CampaignDetailLinkedin"
						}
					],
					"transformations": [
						{
							"name": "PrepareColumns"
						}
					],
					"script": "source(output(\n\t\tCampaignId as string,\n\t\tCampaignDateDay as integer,\n\t\tCampaignDateMonth as integer,\n\t\tCampaignDateYear as integer,\n\t\tCampaignEndDay as integer,\n\t\tCampaignEndMonth as integer,\n\t\tCampaignEndYear as integer,\n\t\tTotalSpent as integer,\n\t\tactionClicks as integer,\n\t\tadUnitClicks as integer,\n\t\tapproximateUniqueImpressions as integer,\n\t\tcardClicks as integer,\n\t\tcardImpressions as integer,\n\t\tclicks as integer,\n\t\tcommentLikes as integer,\n\t\tcomments as integer,\n\t\tcompanyPageClicks as integer,\n\t\tconversionValueInLocalCurrency as integer,\n\t\tcostInLocalCurrency as string,\n\t\tcostInUsd as string,\n\t\texternalWebsiteConversions as integer,\n\t\texternalWebsitePostClickConversions as integer,\n\t\texternalWebsitePostViewConversions as integer,\n\t\tfollows as integer,\n\t\tfullScreenPlays as integer,\n\t\timpressions as integer,\n\t\tlandingPageClicks as integer,\n\t\tleadGenerationMailContactInfoShares as integer,\n\t\tleadGenerationMailInterestedClicks as integer,\n\t\tlikes as integer,\n\t\toneClickLeadFormOpens as integer,\n\t\toneClickLeads as integer,\n\t\topens as integer,\n\t\totherEngagements as integer,\n\t\treturnOnAreactionsdSpend as integer,\n\t\tsends as integer,\n\t\tshares as integer,\n\t\ttextUrlClicks as integer,\n\t\ttotalEngagements as integer,\n\t\tvideoCompletions as integer,\n\t\tvideoFirstQuartileCompletions as integer,\n\t\tvideoMidpointCompletions as integer,\n\t\tvideoStarts as integer,\n\t\tvideoThirdQuartileCompletions as integer,\n\t\tvideoViews as integer,\n\t\tviralCardClicks as integer,\n\t\tviralCardImpressions as integer,\n\t\tviralClicks as integer,\n\t\tviralCommentLikes as integer,\n\t\tviralComments as integer,\n\t\tviralCompanyPageClicks as integer,\n\t\tviralExternalWebsiteConversions as integer,\n\t\tviralExternalWebsitePostClickConversions as integer,\n\t\tviralExternalWebsitePostViewConversions as integer,\n\t\tviralFollows as integer,\n\t\tviralFullScreenPlays as integer,\n\t\tviralImpressions as integer,\n\t\tviralLandingPageClicks as integer,\n\t\tviralLikes as integer,\n\t\tviralOneClickLeadFormOpens as integer,\n\t\tviralOneClickLeads as integer,\n\t\tviralOtherEngagements as integer,\n\t\tviralReactions as integer,\n\t\tviralShares as integer,\n\t\tviralTotalEngagements as integer,\n\t\tviralVideoCompletions as integer,\n\t\tviralVideoFirstQuartileCompletions as integer,\n\t\tviralVideoMidpointCompletions as integer,\n\t\tviralVideoStarts as integer,\n\t\tviralVideoThirdQuartileCompletions as integer,\n\t\tviralVideoViews as integer,\n\t\treactions as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> CampaignDetailLinkedinStage\nCampaignDetailLinkedinStage derive(CampaignId = replace(replace(CampaignId, '[\"urn:li:sponsoredCampaign:',''),'\"]',''),\n\t\tCampaignStartDate = toDate(toString(CampaignDateYear) + '-' + toString(CampaignDateMonth) +  '-'+ toString(CampaignDateDay) , 'yyyy-MM-dd'),\n\t\tCampaignEndDate = toDate(toString(CampaignEndYear) + '-' + toString(CampaignEndMonth) +  '-'+ toString(CampaignEndDay) , 'yyyy-MM-dd')) ~> PrepareColumns\nPrepareColumns sink(input(\n\t\tCampaignId as integer,\n\t\tCampaignStartDate as timestamp,\n\t\tCampaignEndDate as timestamp,\n\t\tTotalSpent as integer,\n\t\tactionClicks as integer,\n\t\tadUnitClicks as integer,\n\t\tapproximateUniqueImpressions as integer,\n\t\tcardClicks as integer,\n\t\tcardImpressions as integer,\n\t\tclicks as integer,\n\t\tcommentLikes as integer,\n\t\tcomments as integer,\n\t\tcompanyPageClicks as integer,\n\t\tconversionValueInLocalCurrency as integer,\n\t\tcostInLocalCurrency as string,\n\t\tcostInUsd as string,\n\t\texternalWebsiteConversions as integer,\n\t\texternalWebsitePostClickConversions as integer,\n\t\texternalWebsitePostViewConversions as integer,\n\t\tfollows as integer,\n\t\tfullScreenPlays as integer,\n\t\timpressions as integer,\n\t\tlandingPageClicks as integer,\n\t\tleadGenerationMailContactInfoShares as integer,\n\t\tleadGenerationMailInterestedClicks as integer,\n\t\tlikes as integer,\n\t\toneClickLeadFormOpens as integer,\n\t\toneClickLeads as integer,\n\t\topens as integer,\n\t\totherEngagements as integer,\n\t\treturnOnAreactionsdSpend as integer,\n\t\tsends as integer,\n\t\tshares as integer,\n\t\ttextUrlClicks as integer,\n\t\ttotalEngagements as integer,\n\t\tvideoCompletions as integer,\n\t\tvideoFirstQuartileCompletions as integer,\n\t\tvideoMidpointCompletions as integer,\n\t\tvideoStarts as integer,\n\t\tvideoThirdQuartileCompletions as integer,\n\t\tvideoViews as integer,\n\t\tviralCardClicks as integer,\n\t\tviralCardImpressions as integer,\n\t\tviralClicks as integer,\n\t\tviralCommentLikes as integer,\n\t\tviralComments as integer,\n\t\tviralCompanyPageClicks as integer,\n\t\tviralExternalWebsiteConversions as integer,\n\t\tviralExternalWebsitePostClickConversions as integer,\n\t\tviralExternalWebsitePostViewConversions as integer,\n\t\tviralFollows as integer,\n\t\tviralFullScreenPlays as integer,\n\t\tviralImpressions as integer,\n\t\tviralLandingPageClicks as integer,\n\t\tviralLikes as integer,\n\t\tviralOneClickLeadFormOpens as integer,\n\t\tviralOneClickLeads as integer,\n\t\tviralOtherEngagements as integer,\n\t\tviralReactions as integer,\n\t\tviralShares as integer,\n\t\tviralTotalEngagements as integer,\n\t\tviralVideoCompletions as integer,\n\t\tviralVideoFirstQuartileCompletions as integer,\n\t\tviralVideoMidpointCompletions as integer,\n\t\tviralVideoStarts as integer,\n\t\tviralVideoThirdQuartileCompletions as integer,\n\t\tviralVideoViews as integer,\n\t\treactions as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tCampaignId,\n\t\tCampaignStartDate,\n\t\tCampaignEndDate,\n\t\tTotalSpent,\n\t\tactionClicks,\n\t\tadUnitClicks,\n\t\tapproximateUniqueImpressions,\n\t\tcardClicks,\n\t\tcardImpressions,\n\t\tclicks,\n\t\tcommentLikes,\n\t\tcomments,\n\t\tcompanyPageClicks,\n\t\tconversionValueInLocalCurrency,\n\t\tcostInLocalCurrency,\n\t\tcostInUsd,\n\t\texternalWebsiteConversions,\n\t\texternalWebsitePostClickConversions,\n\t\texternalWebsitePostViewConversions,\n\t\tfollows,\n\t\tfullScreenPlays,\n\t\timpressions,\n\t\tlandingPageClicks,\n\t\tleadGenerationMailContactInfoShares,\n\t\tleadGenerationMailInterestedClicks,\n\t\tlikes,\n\t\toneClickLeadFormOpens,\n\t\toneClickLeads,\n\t\topens,\n\t\totherEngagements,\n\t\treturnOnAreactionsdSpend,\n\t\tsends,\n\t\tshares,\n\t\ttextUrlClicks,\n\t\ttotalEngagements,\n\t\tvideoCompletions,\n\t\tvideoFirstQuartileCompletions,\n\t\tvideoMidpointCompletions,\n\t\tvideoStarts,\n\t\tvideoThirdQuartileCompletions,\n\t\tvideoViews,\n\t\tviralCardClicks,\n\t\tviralCardImpressions,\n\t\tviralClicks,\n\t\tviralCommentLikes,\n\t\tviralComments,\n\t\tviralCompanyPageClicks,\n\t\tviralExternalWebsiteConversions,\n\t\tviralExternalWebsitePostClickConversions,\n\t\tviralExternalWebsitePostViewConversions,\n\t\tviralFollows,\n\t\tviralFullScreenPlays,\n\t\tviralImpressions,\n\t\tviralLandingPageClicks,\n\t\tviralLikes,\n\t\tviralOneClickLeadFormOpens,\n\t\tviralOneClickLeads,\n\t\tviralOtherEngagements,\n\t\tviralReactions,\n\t\tviralShares,\n\t\tviralTotalEngagements,\n\t\tviralVideoCompletions,\n\t\tviralVideoFirstQuartileCompletions,\n\t\tviralVideoMidpointCompletions,\n\t\tviralVideoStarts,\n\t\tviralVideoThirdQuartileCompletions,\n\t\tviralVideoViews,\n\t\treactions\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> CampaignDetailLinkedin"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CampaignDetailLinkedinStage')]",
				"[concat(variables('factoryId'), '/datasets/CampaignDetailLinkedin')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CampaignGroupDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Linkedin"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CampaignGroupStage",
								"type": "DatasetReference"
							},
							"name": "CampaignGroupStage"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CampaignGroup",
								"type": "DatasetReference"
							},
							"name": "CampaignGroup"
						}
					],
					"transformations": [
						{
							"name": "PrepareColumns"
						}
					],
					"script": "source(output(\n\t\tCampaignGroupId as integer,\n\t\tName as string,\n\t\tDisplayName as string,\n\t\tAccountId as string,\n\t\tCreated as long,\n\t\tModified as long,\n\t\tStatus as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> CampaignGroupStage\nCampaignGroupStage derive(Created = toTimestamp(Created, 'yyyy-MM-dd HH:mm:ss'),\n\t\tModified = toTimestamp(Modified, 'yyyy-MM-dd HH:mm:ss'),\n\t\tAccountId = replace(AccountId, 'urn:li:sponsoredAccount:', '')) ~> PrepareColumns\nPrepareColumns sink(input(\n\t\tCampaignGroupId as integer,\n\t\tName as string,\n\t\tDisplayName as string,\n\t\tAccountId as integer,\n\t\tCreated as timestamp,\n\t\tModified as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> CampaignGroup"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CampaignGroupStage')]",
				"[concat(variables('factoryId'), '/datasets/CampaignGroup')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ContactsDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Hubspot"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "HubspotContactStage",
								"type": "DatasetReference"
							},
							"name": "HubspotContactStage"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HubspotContact",
								"type": "DatasetReference"
							},
							"name": "HubspotContact"
						}
					],
					"transformations": [
						{
							"name": "PrepareColumns"
						}
					],
					"script": "source(output(\n\t\ths_object_id as string,\n\t\tchannel as string,\n\t\tacquistion_date_from_import as string,\n\t\trecent_deal_close_date as string,\n\t\ths_lifecyclestage_marketingqualifiedlead_date as string,\n\t\tclosedate as string,\n\t\tnum_associated_deals as string,\n\t\trecent_deal_amount as string,\n\t\tnum_contacted_notes as string,\n\t\tnum_notes as string,\n\t\tdate_of_birth as string,\n\t\ths_analytics_source as string,\n\t\tlead_is_probably_relevant_for_dfo as string,\n\t\tdetailed_source as string,\n\t\ths_lifecyclestage_salesqualifiedlead_date as string,\n\t\tassigned_rm as string,\n\t\tassigned_to as string,\n\t\tmeeting_booked as string,\n\t\twork_email as string,\n\t\tquestions_embed_url_utm_medium as string,\n\t\tactive_sal_or_not as string,\n\t\ths_lifecyclestage_opportunity_date as string,\n\t\ths_analytics_source_data_1 as string,\n\t\tbrighttalk_webcast_title as string,\n\t\ths_analytics_source_data_2 as string,\n\t\tlifecyclestage as string,\n\t\tquestions_embed_url_utm_source as string,\n\t\tis_this_lead_already_found_in_an_internal_database as string,\n\t\tcountry as string,\n\t\ths_persona as string,\n\t\ths_lifecyclestage_customer_date as string,\n\t\tsource_of_sign_up as string,\n\t\twebcast_activity as string,\n\t\tdays_to_close as string,\n\t\tage_range as string,\n\t\tip_country as string,\n\t\tage as string,\n\t\tupdated as string,\n\t\tcreated as string,\n\t\thasMore as string,\n\t\tVidOffset as string,\n\t\tInsertedDate as timestamp,\n\t\tcontact_type as string,\n\t\ths_analytics_first_url as string,\n\t\tgender as string,\n\t\ton24utm as string,\n\t\tfirstname as string,\n\t\tlastname as string,\n\t\tmobilephone as string,\n\t\tphone as string,\n\t\tfax as string,\n\t\taddress_line_1 as string,\n\t\taddress_line_2 as string,\n\t\tcity as string,\n\t\tstate as string,\n\t\thubspot_owner_id as string,\n\t\tlifecycle_stage_status as string,\n\t\t{time-offset} as long,\n\t\trecent_conversion_event_name as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> HubspotContactStage\nHubspotContactStage derive(acquistion_date_from_import = toTimestamp(toLong(acquistion_date_from_import),'yyyy-MM-dd HH:mm:ss'),\n\t\ths_lifecyclestage_marketingqualifiedlead_date = toTimestamp(toLong(hs_lifecyclestage_marketingqualifiedlead_date),'yyyy-MM-dd HH:mm:ss'),\n\t\ths_lifecyclestage_salesqualifiedlead_date = toTimestamp(toLong(hs_lifecyclestage_salesqualifiedlead_date),'yyyy-MM-dd HH:mm:ss'),\n\t\ths_lifecyclestage_opportunity_date = toTimestamp(toLong(hs_lifecyclestage_opportunity_date),'yyyy-MM-dd HH:mm:ss'),\n\t\ths_lifecyclestage_customer_date = toTimestamp(toLong(hs_lifecyclestage_customer_date),'yyyy-MM-dd HH:mm:ss'),\n\t\tcreated = toTimestamp(toLong(created),'yyyy-MM-dd HH:mm:ss'),\n\t\tupdated = toTimestamp(toLong(updated),'yyyy-MM-dd HH:mm:ss'),\n\t\tclosedate = toTimestamp(toLong(closedate),'yyyy-MM-dd HH:mm:ss'),\n\t\trecent_deal_close_date = toTimestamp(toLong(recent_deal_close_date),'yyyy-MM-dd HH:mm:ss')) ~> PrepareColumns\nPrepareColumns sink(input(\n\t\tContactId as integer,\n\t\tFirstName as string,\n\t\tLastName as string,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tCountry as string,\n\t\tMobilePhone as string,\n\t\tPhone as string,\n\t\tFax as string,\n\t\tDateOfBirth as string,\n\t\tContactType as string,\n\t\tAge as string,\n\t\tAgeRange as string,\n\t\tGender as string,\n\t\tChannel as string,\n\t\tHubspotOwnerId as long,\n\t\tAcquistionDateFromImport as timestamp,\n\t\tRecentDealCloseDate as timestamp,\n\t\tBecameMarketingQualifiedLeadDate as timestamp,\n\t\tCloseDate as timestamp,\n\t\tAssociatedDeals as integer,\n\t\tRecentDealAmount as decimal(18,0),\n\t\tNumberOfTimesContacted as string,\n\t\tNumberOfSalesActivities as string,\n\t\tOriginalSource as string,\n\t\tLeadsProbablyRelevantForDFOAndARMShouldTalkToHimFirstAssessmentOfLeadStatus as string,\n\t\tDetailedSource as string,\n\t\tBecameASalesQualifiedLeadDate as timestamp,\n\t\tAssignedRm as string,\n\t\tAssignedTo as string,\n\t\tMeetingBooked as string,\n\t\tWorkEmail as string,\n\t\tEmbedUrlUtmMedium as string,\n\t\tActiveSalOrNot as string,\n\t\tBecameAnOpportunityDate as timestamp,\n\t\tOriginalSourceDrillDown1 as string,\n\t\tBrighttalkWebcastTitle as string,\n\t\tOriginalSourceDrillDown2 as string,\n\t\tLifecycleStage as string,\n\t\tEmbedUrlUtmSource as string,\n\t\tIsThisLeadAlreadyFoundInInternalDatabase as string,\n\t\tPersona as string,\n\t\tBecameACustomerDate as timestamp,\n\t\tSourceOfSignUp as string,\n\t\tWebcastActivity as string,\n\t\tDaysToClose as string,\n\t\tIPCountry as string,\n\t\tupdated as timestamp,\n\t\tcreated as timestamp,\n\t\tFirstPageSeen as string,\n\t\tOn24UTM as string,\n\t\tDFOLifeCycleStage as string,\n\t\tRecentConversion as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tContactId = hs_object_id,\n\t\tChannel = channel,\n\t\tAcquistionDateFromImport = acquistion_date_from_import,\n\t\tRecentDealCloseDate = recent_deal_close_date,\n\t\tBecameMarketingQualifiedLeadDate = hs_lifecyclestage_marketingqualifiedlead_date,\n\t\tCloseDate = closedate,\n\t\tAssociatedDeals = num_associated_deals,\n\t\tRecentDealAmount = recent_deal_amount,\n\t\tNumberOfTimesContacted = num_contacted_notes,\n\t\tNumberOfSalesActivities = num_notes,\n\t\tDateOfBirth = date_of_birth,\n\t\tOriginalSource = hs_analytics_source,\n\t\tLeadsProbablyRelevantForDFOAndARMShouldTalkToHimFirstAssessmentOfLeadStatus = lead_is_probably_relevant_for_dfo,\n\t\tDetailedSource = detailed_source,\n\t\tBecameASalesQualifiedLeadDate = hs_lifecyclestage_salesqualifiedlead_date,\n\t\tAssignedRm = assigned_rm,\n\t\tAssignedTo = assigned_to,\n\t\tMeetingBooked = meeting_booked,\n\t\tWorkEmail = work_email,\n\t\tEmbedUrlUtmMedium = questions_embed_url_utm_medium,\n\t\tActiveSalOrNot = active_sal_or_not,\n\t\tBecameAnOpportunityDate = hs_lifecyclestage_opportunity_date,\n\t\tOriginalSourceDrillDown1 = hs_analytics_source_data_1,\n\t\tBrighttalkWebcastTitle = brighttalk_webcast_title,\n\t\tOriginalSourceDrillDown2 = hs_analytics_source_data_2,\n\t\tLifecycleStage = lifecyclestage,\n\t\tEmbedUrlUtmSource = questions_embed_url_utm_source,\n\t\tIsThisLeadAlreadyFoundInInternalDatabase = is_this_lead_already_found_in_an_internal_database,\n\t\tCountry = country,\n\t\tPersona = hs_persona,\n\t\tBecameACustomerDate = hs_lifecyclestage_customer_date,\n\t\tSourceOfSignUp = source_of_sign_up,\n\t\tWebcastActivity = webcast_activity,\n\t\tDaysToClose = days_to_close,\n\t\tAgeRange = age_range,\n\t\tIPCountry = ip_country,\n\t\tAge = age,\n\t\tupdated,\n\t\tcreated,\n\t\tContactType = contact_type,\n\t\tFirstPageSeen = hs_analytics_first_url,\n\t\tGender = gender,\n\t\tOn24UTM = on24utm,\n\t\tFirstName = firstname,\n\t\tLastName = lastname,\n\t\tMobilePhone = mobilephone,\n\t\tPhone = phone,\n\t\tFax = fax,\n\t\tAddressLine1 = address_line_1,\n\t\tAddressLine2 = address_line_2,\n\t\tCity = city,\n\t\tHubspotOwnerId = hubspot_owner_id,\n\t\tState = state,\n\t\tDFOLifeCycleStage = lifecycle_stage_status,\n\t\tRecentConversion = recent_conversion_event_name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> HubspotContact"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HubspotContactStage')]",
				"[concat(variables('factoryId'), '/datasets/HubspotContact')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DV360CampaignDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DV360"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "GoogleDV360CampaignStage",
								"type": "DatasetReference"
							},
							"name": "GoogleDV360CampaignStage"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "GoogleDV360Campaign",
								"type": "DatasetReference"
							},
							"name": "GoogleDV360Campaign"
						}
					],
					"transformations": [
						{
							"name": "PrepareColumns"
						}
					],
					"script": "source(output(\n\t\tCampaignId as string,\n\t\tCampaignName as string,\n\t\tCreative as string,\n\t\tDate as string,\n\t\tImpressions as string,\n\t\tClicks as string,\n\t\tClickRate as string,\n\t\tTotalConversions as string,\n\t\tClickThroughConversions as string,\n\t\tTfocoComDetailSubmitTotalConversions as string,\n\t\tNewTfocoComGlobalTagTotalConversions as string,\n\t\tNewTfocoComHomePageVisitTotalConversions as string,\n\t\tNewTfocoComInvestmentPlannerVisitTotalConversions as string,\n\t\tNewTfocoComPortfolioPlannerVisitTotalConversions as string,\n\t\tNewTfocoComWebinarSignupTotalConversions as string,\n\t\tNewTfocoComDetailSubmitTotalConversions as string,\n\t\tTfocoComHomePageVisitTotalConversions as string,\n\t\tTfocoComWealthPlanningTotalConversions as string,\n\t\tTfocoComWhoWeAreTotalConversions as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> GoogleDV360CampaignStage\nGoogleDV360CampaignStage derive(Date = toDate(Date, 'yyyy-MM-dd')) ~> PrepareColumns\nPrepareColumns sink(input(\n\t\tCampaignId as integer,\n\t\tCampaignName as string,\n\t\tCreative as string,\n\t\tDate as date,\n\t\tImpressions as double,\n\t\tClicks as double,\n\t\tClickRate as double,\n\t\tTotalConversions as double,\n\t\tClickThroughConversions as double,\n\t\tTfocoComDetailSubmitTotalConversions as double,\n\t\tNewTfocoComGlobalTagTotalConversions as double,\n\t\tNewTfocoComHomePageVisitTotalConversions as double,\n\t\tNewTfocoComInvestmentPlannerVisitTotalConversions as double,\n\t\tNewTfocoComPortfolioPlannerVisitTotalConversions as double,\n\t\tNewTfocoComWebinarSignupTotalConversions as double,\n\t\tNewTfocoComDetailSubmitTotalConversions as double,\n\t\tTfocoComHomePageVisitTotalConversions as double,\n\t\tTfocoComWealthPlanningTotalConversions as double,\n\t\tTfocoComWhoWeAreTotalConversions as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tCampaignId,\n\t\tCampaignName,\n\t\tCreative,\n\t\tDate,\n\t\tImpressions,\n\t\tClicks,\n\t\tClickRate,\n\t\tTotalConversions,\n\t\tClickThroughConversions,\n\t\tTfocoComDetailSubmitTotalConversions,\n\t\tNewTfocoComGlobalTagTotalConversions,\n\t\tNewTfocoComHomePageVisitTotalConversions,\n\t\tNewTfocoComInvestmentPlannerVisitTotalConversions,\n\t\tNewTfocoComPortfolioPlannerVisitTotalConversions,\n\t\tNewTfocoComWebinarSignupTotalConversions,\n\t\tNewTfocoComDetailSubmitTotalConversions,\n\t\tTfocoComHomePageVisitTotalConversions,\n\t\tTfocoComWealthPlanningTotalConversions,\n\t\tTfocoComWhoWeAreTotalConversions\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> GoogleDV360Campaign"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/GoogleDV360CampaignStage')]",
				"[concat(variables('factoryId'), '/datasets/GoogleDV360Campaign')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DV360CostMetricsDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DV360"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Currency",
								"type": "DatasetReference"
							},
							"name": "Currency"
						},
						{
							"dataset": {
								"referenceName": "GoogleDV360CostMetricsStage",
								"type": "DatasetReference"
							},
							"name": "GoogleDV360CostMetricsStage"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "GoogleDV360CostMetrics",
								"type": "DatasetReference"
							},
							"name": "GoogleDV360CostMetrics"
						}
					],
					"transformations": [
						{
							"name": "PrepareColumns"
						},
						{
							"name": "SelectMetricsColumns"
						},
						{
							"name": "JoinCurrency"
						}
					],
					"script": "source(output(\n\t\tCurrencyId as short,\n\t\tName as string,\n\t\tDisplayName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Currency\nsource(output(\n\t\tAdvertiserId as string,\n\t\tAdvertiser as string,\n\t\tAdvertiserCurrency as string,\n\t\tInsertionOrder as string,\n\t\tInsertionOrderId as string,\n\t\tLineItem as string,\n\t\tLineItemId as string,\n\t\tCampaignId as string,\n\t\tCampaign as string,\n\t\tCreative as string,\n\t\tDate as string,\n\t\tImpressions as string,\n\t\tBillableImpressions as string,\n\t\tClicks as string,\n\t\tClickRateCTR as string,\n\t\tTotalConversions as string,\n\t\tPostClickConversions as string,\n\t\tPostViewConversions as string,\n\t\tRevenueAdvCurrency as string,\n\t\tMediaCostAdvetiserCurrency as string,\n\t\tBillableCostAdvertiserCurrency as string,\n\t\tPlatformFeeAdvertiserCurrency as string,\n\t\tPlatformFeeRate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> GoogleDV360CostMetricsStage\nSelectMetricsColumns derive(Date = toDate(Date, 'yyyy/MM/dd'),\n\t\tClickRateCTR = replace(ClickRateCTR,'%',''),\n\t\tPlatformFeeRate = replace(PlatformFeeRate,'%','')) ~> PrepareColumns\nJoinCurrency select(mapColumn(\n\t\tAdvertiserId,\n\t\tAdvertiser,\n\t\tAdvertiserCurrency,\n\t\tInsertionOrder,\n\t\tInsertionOrderId,\n\t\tLineItem,\n\t\tLineItemId,\n\t\tCampaignId,\n\t\tCampaign,\n\t\tCreative,\n\t\tDate,\n\t\tImpressions,\n\t\tBillableImpressions,\n\t\tClicks,\n\t\tClickRateCTR,\n\t\tTotalConversions,\n\t\tPostClickConversions,\n\t\tPostViewConversions,\n\t\tRevenueAdvCurrency,\n\t\tMediaCostAdvetiserCurrency,\n\t\tBillableCostAdvertiserCurrency,\n\t\tPlatformFeeAdvertiserCurrency,\n\t\tPlatformFeeRate,\n\t\tCurrencyId,\n\t\tName,\n\t\tDisplayName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectMetricsColumns\nGoogleDV360CostMetricsStage, Currency join(AdvertiserCurrency == Name,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinCurrency\nPrepareColumns sink(input(\n\t\tAdvertiserId as integer,\n\t\tAdvertiser as string,\n\t\tAdvertiserCurrencyId as integer,\n\t\tCampaignId as integer,\n\t\tInsertionOrder as string,\n\t\tInsertionOrderId as integer,\n\t\tLineItem as string,\n\t\tLineItemId as integer,\n\t\tCampaign as string,\n\t\tCreative as string,\n\t\tDate as timestamp,\n\t\tImpressions as integer,\n\t\tBillableImpressions as double,\n\t\tClicks as integer,\n\t\tClickRateCTR as double,\n\t\tTotalConversions as double,\n\t\tPostClickConversions as double,\n\t\tPostViewConversions as double,\n\t\tRevenueAdvCurrency as double,\n\t\tMediaCostAdvetiserCurrency as double,\n\t\tBillableCostAdvertiserCurrency as double,\n\t\tPlatformFeeAdvertiserCurrency as double,\n\t\tPlatformFeeRate as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tAdvertiserId,\n\t\tAdvertiser,\n\t\tAdvertiserCurrencyId = CurrencyId,\n\t\tCampaignId,\n\t\tInsertionOrder,\n\t\tInsertionOrderId,\n\t\tLineItem,\n\t\tLineItemId,\n\t\tCampaign,\n\t\tCreative,\n\t\tDate,\n\t\tImpressions,\n\t\tBillableImpressions,\n\t\tClicks,\n\t\tClickRateCTR,\n\t\tTotalConversions,\n\t\tPostClickConversions,\n\t\tPostViewConversions,\n\t\tRevenueAdvCurrency,\n\t\tMediaCostAdvetiserCurrency,\n\t\tBillableCostAdvertiserCurrency,\n\t\tPlatformFeeAdvertiserCurrency,\n\t\tPlatformFeeRate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> GoogleDV360CostMetrics"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Currency')]",
				"[concat(variables('factoryId'), '/datasets/GoogleDV360CostMetricsStage')]",
				"[concat(variables('factoryId'), '/datasets/GoogleDV360CostMetrics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DealsDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Hubspot"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "HubspotDealStage",
								"type": "DatasetReference"
							},
							"name": "HubspotDealStage"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HubspotDeal",
								"type": "DatasetReference"
							},
							"name": "HubspotDeal"
						}
					],
					"transformations": [
						{
							"name": "PrepareColumns"
						}
					],
					"script": "source(output(\n\t\ths_object_id as string,\n\t\tclosedate as string,\n\t\tdealtype as string,\n\t\tnum_contacted_notes as string,\n\t\tnum_notes as string,\n\t\thubspot_owner_id as string,\n\t\tdealstage as string,\n\t\tamount as string,\n\t\tlead_status_status as string,\n\t\tOffset as string,\n\t\tHasMore as string,\n\t\tInsertedDate as timestamp,\n\t\tclosed_lost_reason as string,\n\t\ths_lastmodifieddate as string,\n\t\tamount_source as string,\n\t\tpipeline as string,\n\t\tlifecyclestage as string,\n\t\tcreatedate as string,\n\t\ths_lead_status as string,\n\t\tassociatedVids as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> HubspotDealStage\nHubspotDealStage derive(closedate = toTimestamp(toLong(closedate),'yyyy-MM-dd HH:mm:ss'),\n\t\ths_lastmodifieddate = toTimestamp(toLong(hs_lastmodifieddate),'yyyy-MM-dd HH:mm:ss'),\n\t\tcreatedate = toTimestamp(toLong(createdate),'yyyy-MM-dd HH:mm:ss'),\n\t\tassociatedVids = replace(replace(associatedVids,'[',''),']','')) ~> PrepareColumns\nPrepareColumns sink(input(\n\t\tDealId as integer,\n\t\tDealStage as string,\n\t\tClosedLostReason as string,\n\t\tLastModifiedDate as timestamp,\n\t\tAmount as decimal(18,0),\n\t\tAmountSource as string,\n\t\tPipeline as string,\n\t\tTFOLifecycleStage as string,\n\t\tCreateDate as timestamp,\n\t\tDealOwnerId as integer,\n\t\tLeadStatus as string,\n\t\tAssociatedContactIds as string,\n\t\tClosedDate as timestamp,\n\t\tDealType as string,\n\t\tNumberOfTimesContacted as integer,\n\t\tNumberOfSalesActivities as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tDealId = hs_object_id,\n\t\tDealStage = dealstage,\n\t\tClosedLostReason = closed_lost_reason,\n\t\tLastModifiedDate = hs_lastmodifieddate,\n\t\tAmount = amount,\n\t\tAmountSource = amount_source,\n\t\tPipeline = pipeline,\n\t\tTFOLifecycleStage = lifecyclestage,\n\t\tCreateDate = createdate,\n\t\tDealOwnerId = hubspot_owner_id,\n\t\tLeadStatus = lead_status_status,\n\t\tAssociatedContactIds = associatedVids,\n\t\tClosedDate = closedate,\n\t\tDealType = dealtype,\n\t\tNumberOfTimesContacted = num_contacted_notes,\n\t\tNumberOfSalesActivities = num_notes\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> HubspotDeal"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HubspotDealStage')]",
				"[concat(variables('factoryId'), '/datasets/HubspotDeal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EngagementDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Hubspot"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "HubspotEngagementStage",
								"type": "DatasetReference"
							},
							"name": "HubspotEngagementStage"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HubspotEngagement",
								"type": "DatasetReference"
							},
							"name": "HubspotEngagement"
						}
					],
					"transformations": [
						{
							"name": "PrepareColumns"
						}
					],
					"script": "source(output(\n\t\tEngagementId as long,\n\t\tcreatedAt as string,\n\t\tlastUpdated as string,\n\t\townerId as long,\n\t\ttype as string,\n\t\ttimestamp as string,\n\t\tteamId as long,\n\t\tsource as string,\n\t\tsourceId as string,\n\t\tallAccessibleTeamIds as string,\n\t\tbodyPreview as string,\n\t\tcreatedBy as long,\n\t\tmodifiedBy as long,\n\t\tportalId as long,\n\t\tactive as string,\n\t\tcontactAssosications as string,\n\t\tHasMore as string,\n\t\tOffset as string,\n\t\tInsertedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> HubspotEngagementStage\nHubspotEngagementStage derive(timestamp = toTimestamp(toLong(timestamp),'yyyy-MM-dd HH:mm:ss.SSS'),\n\t\tcreatedAt = toTimestamp(toLong(createdAt),'yyyy-MM-dd HH:mm:ss.SSS'),\n\t\tlastUpdated = toTimestamp(toLong(lastUpdated),'yyyy-MM-dd HH:mm:ss.SSS'),\n\t\tactive = toBoolean(active)) ~> PrepareColumns\nPrepareColumns sink(input(\n\t\tEngagementId as long,\n\t\tType as string,\n\t\tTimeStamp as timestamp,\n\t\tTeamId as long,\n\t\tCreated as timestamp,\n\t\tUpdated as timestamp,\n\t\tOwnerId as long,\n\t\tSource as string,\n\t\tSourceId as long,\n\t\tAllAccessibleTeamIds as string,\n\t\tBodyPreview as string,\n\t\tCreatedBy as long,\n\t\tModifiedBy as long,\n\t\tPortalId as long,\n\t\tActive as boolean,\n\t\tContactAssociations as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tEngagementId,\n\t\tType = type,\n\t\tTimeStamp = timestamp,\n\t\tTeamId = teamId,\n\t\tCreated = createdAt,\n\t\tUpdated = lastUpdated,\n\t\tOwnerId = ownerId,\n\t\tSource = source,\n\t\tSourceId = sourceId,\n\t\tAllAccessibleTeamIds = allAccessibleTeamIds,\n\t\tBodyPreview = bodyPreview,\n\t\tCreatedBy = createdBy,\n\t\tModifiedBy = modifiedBy,\n\t\tPortalId = portalId,\n\t\tActive = active,\n\t\tContactAssociations = contactAssosications\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> HubspotEngagement"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HubspotEngagementStage')]",
				"[concat(variables('factoryId'), '/datasets/HubspotEngagement')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GoogleAnalyticsDataDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "GoogleAnalyticsStage",
								"type": "DatasetReference"
							},
							"name": "GoogleAnalyticsStage"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "GoogleAnalyticsData",
								"type": "DatasetReference"
							},
							"name": "GoogleAnalyticsData"
						}
					],
					"transformations": [
						{
							"name": "PrepareData"
						}
					],
					"script": "parameters{\n\tGroupId as integer (1)\n}\nsource(output(\n\t\tGroupId as short,\n\t\tMetricsArr as string,\n\t\tValuesArr as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> GoogleAnalyticsStage\nGoogleAnalyticsStage derive(GroupValue = replace(split(replace(replace(MetricsArr, ']',''),'[',''),',')[1],'\"',''),\n\t\tSourceDate = toDate(replace(split(replace(replace(MetricsArr, ']',''),'[',''),',')[2],'\"',''), 'yyyyMMdd'),\n\t\tUsers = replace(split(replace(replace(ValuesArr, ']',''),'[',''),',')[1],'\"',''),\n\t\tNewUsers = replace(split(replace(replace(ValuesArr, ']',''),'[',''),',')[2],'\"',''),\n\t\tPageViews = replace(split(replace(replace(ValuesArr, ']',''),'[',''),',')[3],'\"',''),\n\t\tSessionsPerUser = replace(split(replace(replace(ValuesArr, ']',''),'[',''),',')[4],'\"',''),\n\t\tSessions = replace(split(replace(replace(ValuesArr, ']',''),'[',''),',')[5],'\"',''),\n\t\tBounceRate = replace(split(replace(replace(ValuesArr, ']',''),'[',''),',')[6],'\"',''),\n\t\tAvgSessionDuration = replace(split(replace(replace(ValuesArr, ']',''),'[',''),',')[7],'\"',''),\n\t\tGroupId = $GroupId,\n\t\tGoal1ConversionRate = replace(split(replace(replace(ValuesArr, ']',''),'[',''),',')[8],'\"',''),\n\t\tGoal1Completions = replace(split(replace(replace(ValuesArr, ']',''),'[',''),',')[9],'\"',''),\n\t\tGoal1Value = replace(split(replace(replace(ValuesArr, ']',''),'[',''),',')[10],'\"','')) ~> PrepareData\nPrepareData sink(input(\n\t\tGroupId as integer,\n\t\tGroupValue as string,\n\t\tSourceDate as date,\n\t\tUsers as double,\n\t\tNewUsers as double,\n\t\tPageviews as double,\n\t\tSessionsPerUser as double,\n\t\tSessions as double,\n\t\tBounceRate as double,\n\t\tAvgSessionDuration as double,\n\t\tGoal1ConversionRate as double,\n\t\tGoal1Completions as double,\n\t\tGoal1Value as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tGroupId,\n\t\tGroupValue,\n\t\tSourceDate,\n\t\tUsers,\n\t\tNewUsers,\n\t\tPageviews = PageViews,\n\t\tSessionsPerUser,\n\t\tSessions,\n\t\tBounceRate,\n\t\tAvgSessionDuration,\n\t\tGoal1ConversionRate,\n\t\tGoal1Completions,\n\t\tGoal1Value\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> GoogleAnalyticsData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/GoogleAnalyticsStage')]",
				"[concat(variables('factoryId'), '/datasets/GoogleAnalyticsData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OwnerDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Hubspot"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "HubspotOwnerStage",
								"type": "DatasetReference"
							},
							"name": "HubspotOwnerStage"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HubspotOwner",
								"type": "DatasetReference"
							},
							"name": "HubspotOwner"
						}
					],
					"transformations": [
						{
							"name": "PrepareColumns"
						}
					],
					"script": "source(output(\n\t\tOwnerId as long,\n\t\tfirstName as string,\n\t\tlastName as string,\n\t\temail as string,\n\t\tcreatedAt as string,\n\t\tupdatedAt as string,\n\t\thasContactsAccess as string,\n\t\tactiveUserId as long,\n\t\tactiveSalesforceId as long,\n\t\tisActive as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> HubspotOwnerStage\nHubspotOwnerStage derive(createdAt = toTimestamp(toLong(createdAt),'yyyy-MM-dd HH:mm:ss'),\n\t\tupdatedAt = toTimestamp(toLong(updatedAt),'yyyy-MM-dd HH:mm:ss')) ~> PrepareColumns\nPrepareColumns sink(input(\n\t\tOwnerId as long,\n\t\tFirstName as string,\n\t\tLastName as string,\n\t\tEmail as string,\n\t\tCreated as timestamp,\n\t\tUpdated as timestamp,\n\t\tHasContactsAccess as boolean,\n\t\tActiveUserId as integer,\n\t\tActiveSalesForceId as string,\n\t\tIsActive as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tOwnerId,\n\t\tFirstName = firstName,\n\t\tLastName = lastName,\n\t\tEmail = email,\n\t\tCreated = createdAt,\n\t\tUpdated = updatedAt,\n\t\tHasContactsAccess = hasContactsAccess,\n\t\tActiveUserId = activeUserId,\n\t\tActiveSalesForceId = activeSalesforceId,\n\t\tIsActive = isActive\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> HubspotOwner"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HubspotOwnerStage')]",
				"[concat(variables('factoryId'), '/datasets/HubspotOwner')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ShareDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Linkedin"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "LinkedinShareStage",
								"type": "DatasetReference"
							},
							"name": "LinkedinShareStage"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "LinkedinShare",
								"type": "DatasetReference"
							},
							"name": "LinkedinShare"
						}
					],
					"transformations": [
						{
							"name": "PrepareColumns"
						}
					],
					"script": "source(output(\n\t\towner as string,\n\t\tagent as string,\n\t\tactivity as string,\n\t\tsubject as string,\n\t\tcreatedby as string,\n\t\tcreated as string,\n\t\tid as string,\n\t\tlastModifiedby as string,\n\t\tlastModified as string,\n\t\ttext as string,\n\t\tlandingPageTitle as string,\n\t\tdescription as string,\n\t\tentityLocation as string,\n\t\ttitle as string,\n\t\tlandingPageUrl as string,\n\t\tentity as string,\n\t\tshareMediaCategory as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> LinkedinShareStage\nLinkedinShareStage derive(created = toTimestamp(toLong(created), 'yyyy-MM-dd HH:mm:ss'),\n\t\tlastModified = toTimestamp(toLong(lastModified), 'yyyy-MM-dd HH:mm:ss')) ~> PrepareColumns\nPrepareColumns sink(input(\n\t\tOwner as string,\n\t\tAgent as string,\n\t\tActivity as string,\n\t\tSubject as string,\n\t\tCreatedBy as string,\n\t\tCreated as timestamp,\n\t\tId as string,\n\t\tLastModifiedBy as string,\n\t\tLastModified as timestamp,\n\t\tText as string,\n\t\tLandingPageTitle as string,\n\t\tDescription as string,\n\t\tEntityLocation as string,\n\t\tTitle as string,\n\t\tLandingPageUrl as string,\n\t\tEntity as string,\n\t\tShareMediaCategory as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tOwner = owner,\n\t\tAgent = agent,\n\t\tActivity = activity,\n\t\tSubject = subject,\n\t\tCreatedBy = createdby,\n\t\tCreated = created,\n\t\tId = id,\n\t\tLastModifiedBy = lastModifiedby,\n\t\tLastModified = lastModified,\n\t\tText = text,\n\t\tLandingPageTitle = landingPageTitle,\n\t\tDescription = description,\n\t\tEntityLocation = entityLocation,\n\t\tTitle = title,\n\t\tLandingPageUrl = landingPageUrl,\n\t\tEntity = entity,\n\t\tShareMediaCategory = shareMediaCategory\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> LinkedinShare"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LinkedinShareStage')]",
				"[concat(variables('factoryId'), '/datasets/LinkedinShare')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterAccountDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Twitter"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TwitterAccountStage",
								"type": "DatasetReference"
							},
							"name": "TwitterAccountStage"
						},
						{
							"dataset": {
								"referenceName": "IndustryType",
								"type": "DatasetReference"
							},
							"name": "InustryType"
						},
						{
							"dataset": {
								"referenceName": "ApprovalStatus",
								"type": "DatasetReference"
							},
							"name": "ApprovalStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TwitterAccount",
								"type": "DatasetReference"
							},
							"name": "TwitterAccount"
						}
					],
					"transformations": [
						{
							"name": "JoinApprovalStatus"
						},
						{
							"name": "JoinIndustryType"
						},
						{
							"name": "SelectAccountColumns"
						},
						{
							"name": "PrepareColumns"
						}
					],
					"script": "source(output(\n\t\tAccountId as string,\n\t\tName as string,\n\t\tCreated as string,\n\t\tUpdated as string,\n\t\tBusinessName as string,\n\t\tIndustryType as string,\n\t\tApprovalStatus as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> TwitterAccountStage\nsource(output(\n\t\tIndustryTypeId as short,\n\t\tName as string,\n\t\tDisplayName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> InustryType\nsource(output(\n\t\tApprovalStatusId as short,\n\t\tName as string,\n\t\tDisplayName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ApprovalStatus\nJoinIndustryType, ApprovalStatus join(ApprovalStatus == ApprovalStatus@Name,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinApprovalStatus\nTwitterAccountStage, InustryType join(IndustryType == InustryType@Name,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinIndustryType\nPrepareColumns select(mapColumn(\n\t\tAccountId,\n\t\tName = TwitterAccountStage@Name,\n\t\tCreated,\n\t\tUpdated,\n\t\tBusinessName,\n\t\tIndustryTypeId,\n\t\tApprovalStatusId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAccountColumns\nJoinApprovalStatus derive(Created = toTimestamp(Created, 'yyyy-MM-dd\\'T\\'HH:mm:ss','UTC+3'),\n\t\tUpdated = toTimestamp(Updated, 'yyyy-MM-dd\\'T\\'HH:mm:ss','UTC+3')) ~> PrepareColumns\nSelectAccountColumns sink(input(\n\t\tAccountId as string,\n\t\tName as string,\n\t\tCreated as timestamp,\n\t\tUpdated as timestamp,\n\t\tBusinessName as string,\n\t\tIndustryTypeId as integer,\n\t\tApprovalStatusId as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tAccountId,\n\t\tName,\n\t\tCreated,\n\t\tUpdated,\n\t\tBusinessName,\n\t\tIndustryTypeId,\n\t\tApprovalStatusId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TwitterAccount"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TwitterAccountStage')]",
				"[concat(variables('factoryId'), '/datasets/IndustryType')]",
				"[concat(variables('factoryId'), '/datasets/ApprovalStatus')]",
				"[concat(variables('factoryId'), '/datasets/TwitterAccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterCampaignDataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Twitter"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TwitterCampaignStage",
								"type": "DatasetReference"
							},
							"name": "TwitterCampaignStage"
						},
						{
							"dataset": {
								"referenceName": "Currency",
								"type": "DatasetReference"
							},
							"name": "Currency"
						},
						{
							"dataset": {
								"referenceName": "CampaignStatus",
								"type": "DatasetReference"
							},
							"name": "CampaignStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TwitterCampaign",
								"type": "DatasetReference"
							},
							"name": "TwitterCampaign"
						}
					],
					"transformations": [
						{
							"name": "JoinCurrency"
						},
						{
							"name": "JoinStatus"
						},
						{
							"name": "PrepareColumns"
						},
						{
							"name": "SelectCampaignColumns"
						}
					],
					"script": "source(output(\n\t\tAccountId as string,\n\t\tCampaignId as string,\n\t\tName as string,\n\t\tCreated as string,\n\t\tModified as string,\n\t\tStatus as string,\n\t\tCurrency as string,\n\t\tTotalBudgetAmount as string,\n\t\tDailyBudgetAmount as string,\n\t\tServable as string,\n\t\tStartDate as string,\n\t\tEndDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> TwitterCampaignStage\nsource(output(\n\t\tCurrencyId as short,\n\t\tName as string,\n\t\tDisplayName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Currency\nsource(output(\n\t\tCampaignStatusID as short,\n\t\tName as string,\n\t\tDisplayName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> CampaignStatus\nJoinStatus, Currency join(Currency == Currency@Name,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinCurrency\nTwitterCampaignStage, CampaignStatus join(Status == CampaignStatus@Name,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinStatus\nJoinCurrency derive(Created = toTimestamp(Created, 'yyyy-MM-dd\\'T\\'HH:mm:ss','UTC+3'),\n\t\tModified = toTimestamp(Modified, 'yyyy-MM-dd\\'T\\'HH:mm:ss','UTC+3'),\n\t\tStartDate = toTimestamp(StartDate, 'yyyy-MM-dd\\'T\\'HH:mm:ss','UTC+3'),\n\t\tEndDate = toTimestamp(EndDate, 'yyyy-MM-dd\\'T\\'HH:mm:ss','UTC+3')) ~> PrepareColumns\nPrepareColumns select(mapColumn(\n\t\tAccountId,\n\t\tCampaignId,\n\t\tName = TwitterCampaignStage@Name,\n\t\tCreated,\n\t\tModified,\n\t\tStatus,\n\t\tCurrency,\n\t\tTotalBudgetAmount,\n\t\tDailyBudgetAmount,\n\t\tServable,\n\t\tStartDate,\n\t\tEndDate,\n\t\tCampaignStatusID,\n\t\tCurrencyId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCampaignColumns\nSelectCampaignColumns sink(input(\n\t\tAccountId as string,\n\t\tCampaignId as string,\n\t\tName as string,\n\t\tCreated as timestamp,\n\t\tModified as timestamp,\n\t\tStatusId as integer,\n\t\tCurrencyID as integer,\n\t\tTotalBudgetAmount as long,\n\t\tDailyBudgetAmount as long,\n\t\tServable as boolean,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tAccountId,\n\t\tCampaignId,\n\t\tName,\n\t\tCreated,\n\t\tModified,\n\t\tStatusId = CampaignStatusID,\n\t\tCurrencyID = CurrencyId,\n\t\tTotalBudgetAmount,\n\t\tDailyBudgetAmount,\n\t\tServable,\n\t\tStartDate,\n\t\tEndDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TwitterCampaign"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TwitterCampaignStage')]",
				"[concat(variables('factoryId'), '/datasets/Currency')]",
				"[concat(variables('factoryId'), '/datasets/CampaignStatus')]",
				"[concat(variables('factoryId'), '/datasets/TwitterCampaign')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterLineItemDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Twitter"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TwitterLineItemStage",
								"type": "DatasetReference"
							},
							"name": "TwitterLineItemStage"
						},
						{
							"dataset": {
								"referenceName": "BidType",
								"type": "DatasetReference"
							},
							"name": "BidType"
						},
						{
							"dataset": {
								"referenceName": "ChargeBy",
								"type": "DatasetReference"
							},
							"name": "ChargeBy"
						},
						{
							"dataset": {
								"referenceName": "ProductType",
								"type": "DatasetReference"
							},
							"name": "ProductType"
						},
						{
							"dataset": {
								"referenceName": "EntityStatus",
								"type": "DatasetReference"
							},
							"name": "EntityStatus"
						},
						{
							"dataset": {
								"referenceName": "BidUnit",
								"type": "DatasetReference"
							},
							"name": "BidUnit"
						},
						{
							"dataset": {
								"referenceName": "TwitterObjective",
								"type": "DatasetReference"
							},
							"name": "TwitterObjetive"
						},
						{
							"dataset": {
								"referenceName": "Currency",
								"type": "DatasetReference"
							},
							"name": "Currency"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TwitterLineItem",
								"type": "DatasetReference"
							},
							"name": "TwitterLineItem"
						}
					],
					"transformations": [
						{
							"name": "JoinBidType"
						},
						{
							"name": "JoinChargeBy"
						},
						{
							"name": "JoinProductType"
						},
						{
							"name": "JoinEntityStatus"
						},
						{
							"name": "JoinBidUnit"
						},
						{
							"name": "JoinObjective"
						},
						{
							"name": "JoinCurrency"
						},
						{
							"name": "SelectColumns"
						},
						{
							"name": "PrepareColumns"
						}
					],
					"script": "source(output(\n\t\tAccountId as string,\n\t\tName as string,\n\t\tBidType as string,\n\t\tAdvertiserUserId as string,\n\t\tStartDate as string,\n\t\tBidAmountLocalMicro as string,\n\t\tAutomaticallySelectBid as string,\n\t\tAdvertiserDomain as string,\n\t\tTargetCPALocalMicro as string,\n\t\tPrimaryWebEventTag as string,\n\t\tChargeBy as string,\n\t\tProductType as string,\n\t\tEndDate as string,\n\t\tBidUnit as string,\n\t\tTotalBudgetAmountLocalMicro as string,\n\t\tObjective as string,\n\t\tId as string,\n\t\tEntityStatus as string,\n\t\tOptimization as string,\n\t\tCurrency as string,\n\t\tCreated as string,\n\t\tUpdated as string,\n\t\tCreativeSource as string,\n\t\tCampaignId as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> TwitterLineItemStage\nsource(output(\n\t\tId as short,\n\t\tName as string,\n\t\tDisplayName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> BidType\nsource(output(\n\t\tId as short,\n\t\tName as string,\n\t\tDisplayName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ChargeBy\nsource(output(\n\t\tId as short,\n\t\tName as string,\n\t\tDisplayName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ProductType\nsource(output(\n\t\tId as short,\n\t\tName as string,\n\t\tDisplayName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> EntityStatus\nsource(output(\n\t\tId as short,\n\t\tName as string,\n\t\tDisplayName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> BidUnit\nsource(output(\n\t\tId as short,\n\t\tName as string,\n\t\tDisplayName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> TwitterObjetive\nsource(output(\n\t\tCurrencyId as short,\n\t\tName as string,\n\t\tDisplayName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Currency\nJoinChargeBy, BidType join(BidType == BidType@Name,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinBidType\nJoinProductType, ChargeBy join(ChargeBy == ChargeBy@Name,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinChargeBy\nJoinEntityStatus, ProductType join(ProductType == ProductType@Name,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinProductType\nJoinBidUnit, EntityStatus join(EntityStatus == EntityStatus@Name,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinEntityStatus\nJoinObjective, BidUnit join(BidUnit == BidUnit@Name,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinBidUnit\nJoinCurrency, TwitterObjetive join(Objective == TwitterObjetive@Name,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinObjective\nTwitterLineItemStage, Currency join(Currency == Currency@Name,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinCurrency\nJoinBidType select(mapColumn(\n\t\tAccountId,\n\t\tName = TwitterLineItemStage@Name,\n\t\tBidType,\n\t\tAdvertiserUserId,\n\t\tStartDate,\n\t\tBidAmountLocalMicro,\n\t\tAutomaticallySelectBid,\n\t\tAdvertiserDomain,\n\t\tTargetCPALocalMicro,\n\t\tPrimaryWebEventTag,\n\t\tChargeBy,\n\t\tProductType,\n\t\tEndDate,\n\t\tBidUnit,\n\t\tTotalBudgetAmountLocalMicro,\n\t\tObjective,\n\t\tId = TwitterLineItemStage@Id,\n\t\tEntityStatus,\n\t\tOptimization,\n\t\tCurrency,\n\t\tCreated,\n\t\tUpdated,\n\t\tCreativeSource,\n\t\tCampaignId,\n\t\tCurrencyId,\n\t\tName = Currency@Name,\n\t\tDisplayName = Currency@DisplayName,\n\t\tTwitterObjectiveId = TwitterObjetive@Id,\n\t\tBidUnitId = BidUnit@Id,\n\t\tEntityStatusId = EntityStatus@Id,\n\t\tProductTypeId = ProductType@Id,\n\t\tChargeById = ChargeBy@Id,\n\t\tBidTypeId = BidType@Id\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColumns\nSelectColumns derive(StartDate = toTimestamp(StartDate, 'yyyy-MM-dd\\'T\\'HH:mm:ss','UTC+3'),\n\t\tEndDate = toTimestamp(EndDate, 'yyyy-MM-dd\\'T\\'HH:mm:ss','UTC+3'),\n\t\tCreated = toTimestamp(Created, 'yyyy-MM-dd\\'T\\'HH:mm:ss','UTC+3'),\n\t\tUpdated = toTimestamp(Updated, 'yyyy-MM-dd\\'T\\'HH:mm:ss','UTC+3')) ~> PrepareColumns\nPrepareColumns sink(input(\n\t\tAccountId as string,\n\t\tName as string,\n\t\tBidTypeId as integer,\n\t\tAdvertiserUserId as long,\n\t\tStartDate as timestamp,\n\t\tBidAmountLocalMicro as double,\n\t\tAutomaticallySelectBid as boolean,\n\t\tAdvertiserDomain as string,\n\t\tTargetCPALocalMicro as double,\n\t\tPrimaryWebEventTag as string,\n\t\tChargeById as integer,\n\t\tProductTypeId as integer,\n\t\tEndDate as timestamp,\n\t\tBidUnitId as string,\n\t\tTotalBudgetAmountLocalMicro as double,\n\t\tTwitterObjectiveId as integer,\n\t\tId as string,\n\t\tEntityStatusId as integer,\n\t\tOptimization as string,\n\t\tCurrencyId as string,\n\t\tCreated as timestamp,\n\t\tUpdated as timestamp,\n\t\tCreativeSource as string,\n\t\tCampaignId as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tAccountId,\n\t\tName,\n\t\tBidTypeId,\n\t\tAdvertiserUserId,\n\t\tStartDate,\n\t\tBidAmountLocalMicro,\n\t\tAutomaticallySelectBid,\n\t\tAdvertiserDomain,\n\t\tTargetCPALocalMicro,\n\t\tPrimaryWebEventTag,\n\t\tChargeById,\n\t\tProductTypeId,\n\t\tEndDate,\n\t\tBidUnitId,\n\t\tTotalBudgetAmountLocalMicro,\n\t\tTwitterObjectiveId,\n\t\tId,\n\t\tEntityStatusId,\n\t\tOptimization,\n\t\tCurrencyId,\n\t\tCreated,\n\t\tUpdated,\n\t\tCreativeSource,\n\t\tCampaignId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TwitterLineItem"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TwitterLineItemStage')]",
				"[concat(variables('factoryId'), '/datasets/BidType')]",
				"[concat(variables('factoryId'), '/datasets/ChargeBy')]",
				"[concat(variables('factoryId'), '/datasets/ProductType')]",
				"[concat(variables('factoryId'), '/datasets/EntityStatus')]",
				"[concat(variables('factoryId'), '/datasets/BidUnit')]",
				"[concat(variables('factoryId'), '/datasets/TwitterObjective')]",
				"[concat(variables('factoryId'), '/datasets/Currency')]",
				"[concat(variables('factoryId'), '/datasets/TwitterLineItem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterLineItemTweetDataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Twitter"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TwitterLineItemTweetStage",
								"type": "DatasetReference"
							},
							"name": "TwitterLineItemTweetStage"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TwitterLineItemTweet",
								"type": "DatasetReference"
							},
							"name": "TwitterLineItemTweet"
						}
					],
					"transformations": [
						{
							"name": "PrepareColumns"
						}
					],
					"script": "source(output(\n\t\tTweetId as string,\n\t\tLineItemId as string,\n\t\tcreated_at as string,\n\t\tupdated_at as string,\n\t\tentity_status as string,\n\t\tapproval_status as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> TwitterLineItemTweetStage\nTwitterLineItemTweetStage derive(created_at = toTimestamp(created_at, 'yyyy-MM-dd\\'T\\'HH:mm:ss','UTC+3'),\n\t\tupdated_at = toTimestamp(updated_at, 'yyyy-MM-dd\\'T\\'HH:mm:ss','UTC+3')) ~> PrepareColumns\nPrepareColumns sink(input(\n\t\tTweetId as string,\n\t\tLineItemId as string,\n\t\tCreated as timestamp,\n\t\tUpdated as timestamp,\n\t\tEntityStatus as string,\n\t\tApprovalStatus as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tTweetId,\n\t\tLineItemId,\n\t\tCreated = created_at,\n\t\tUpdated = updated_at,\n\t\tEntityStatus = entity_status,\n\t\tApprovalStatus = approval_status\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TwitterLineItemTweet"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TwitterLineItemTweetStage')]",
				"[concat(variables('factoryId'), '/datasets/TwitterLineItemTweet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterOrganicTweetFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Twitter"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TwitterOrganicTweetStage",
								"type": "DatasetReference"
							},
							"name": "TwitterOrganicTweetStage"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TwitterOrganicTweet",
								"type": "DatasetReference"
							},
							"name": "TwitterOrganicTweet"
						}
					],
					"transformations": [
						{
							"name": "PrepareColumns"
						}
					],
					"script": "source(output(\n\t\ttweet_id as string,\n\t\tfull_text as string,\n\t\tfavorite_count as string,\n\t\tretweet_count as string,\n\t\tcreated_at as string,\n\t\tfavorited as string,\n\t\tin_reply_to_status_id as string,\n\t\taccount_id as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> TwitterOrganicTweetStage\nTwitterOrganicTweetStage derive(created_at = toDate(trim(concat(substring(substring(replace(created_at, '+0000', ''),4),1,7), substring(substring(replace(created_at, '+0000', ''),4),17))),'MMM dd yyyy')) ~> PrepareColumns\nPrepareColumns sink(input(\n\t\tTweetId as long,\n\t\tFullText as string,\n\t\tFavoriteCount as double,\n\t\tRetweetCount as double,\n\t\tCreated as timestamp,\n\t\tFavorited as double,\n\t\tInReplyToStatusId as string,\n\t\tAccountId as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tTweetId = tweet_id,\n\t\tFullText = full_text,\n\t\tFavoriteCount = favorite_count,\n\t\tRetweetCount = retweet_count,\n\t\tCreated = created_at,\n\t\tFavorited = favorited,\n\t\tInReplyToStatusId = in_reply_to_status_id,\n\t\tAccountId = account_id\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TwitterOrganicTweet"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TwitterOrganicTweetStage')]",
				"[concat(variables('factoryId'), '/datasets/TwitterOrganicTweet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TwitterTweetDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Twitter"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TwitterTweetStage",
								"type": "DatasetReference"
							},
							"name": "TwitterTweetStage"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TwitterTweet",
								"type": "DatasetReference"
							},
							"name": "TwitterTweet"
						}
					],
					"transformations": [
						{
							"name": "PrepareColumn"
						}
					],
					"script": "source(output(\n\t\taccount_id as string,\n\t\ttweet_type as string,\n\t\thashtags as string,\n\t\tin_reply_to_status_id_str as string,\n\t\tgeo as string,\n\t\tin_reply_to_user_id as string,\n\t\tcreated_at as string,\n\t\tfull_text as string,\n\t\tcard_uri as string,\n\t\tretweet_count as string,\n\t\tin_reply_to_screen_name as string,\n\t\ttweet_id as string,\n\t\tsource as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> TwitterTweetStage\nTwitterTweetStage derive(created_at = toDate(trim(concat(substring(substring(replace(created_at, '+0000', ''),4),1,7), substring(substring(replace(created_at, '+0000', ''),4),17))),'MMM dd yyyy')) ~> PrepareColumn\nPrepareColumn sink(input(\n\t\tTweetId as string,\n\t\tAccountId as string,\n\t\tFullText as string,\n\t\tTweetType as string,\n\t\tHashtags as string,\n\t\tInReplyToStatusIdStr as string,\n\t\tGeo as string,\n\t\tInReplyToUserId as string,\n\t\tCreated as timestamp,\n\t\tCardUri as string,\n\t\tRetweetCount as string,\n\t\tInReplyToScreenName as string,\n\t\tSource as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tTweetId = tweet_id,\n\t\tAccountId = account_id,\n\t\tFullText = full_text,\n\t\tTweetType = tweet_type,\n\t\tHashtags = hashtags,\n\t\tInReplyToStatusIdStr = in_reply_to_status_id_str,\n\t\tGeo = geo,\n\t\tInReplyToUserId = in_reply_to_status_id_str,\n\t\tCreated = created_at,\n\t\tCardUri = card_uri,\n\t\tRetweetCount = retweet_count,\n\t\tInReplyToScreenName = in_reply_to_screen_name,\n\t\tSource = source\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> TwitterTweet"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TwitterTweetStage')]",
				"[concat(variables('factoryId'), '/datasets/TwitterTweet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VoucherServicesDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "VoucherServicesStage",
								"type": "DatasetReference"
							},
							"name": "VoucherServicesStage"
						},
						{
							"dataset": {
								"referenceName": "Currency",
								"type": "DatasetReference"
							},
							"name": "Currency"
						},
						{
							"dataset": {
								"referenceName": "MainAccountCategory",
								"type": "DatasetReference"
							},
							"name": "MainAccountCategory"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "VoucherServices",
								"type": "DatasetReference"
							},
							"name": "VoucherServices"
						}
					],
					"transformations": [
						{
							"name": "JoinTransactionCurrency"
						},
						{
							"name": "JoinMainAccountCategory"
						},
						{
							"name": "SelectVoucherService"
						},
						{
							"name": "JoinCurrency"
						},
						{
							"name": "SelectVourceServiceColumns"
						},
						{
							"name": "PrepareColumns"
						}
					],
					"script": "source(output(\n\t\tCustomerLedgerDimension as string,\n\t\tTransactionType as string,\n\t\tDepartmentLedgerDimension as string,\n\t\tSPVLedgerDimension as string,\n\t\tTransactionCurrencyAmount as decimal(18,0),\n\t\tText as string,\n\t\tName as string,\n\t\tReportingCurrencyAmount as string,\n\t\tClassLedgerDimension as string,\n\t\tJournalId as string,\n\t\tTransDate as string,\n\t\tProjectLedgerDimension as string,\n\t\tEmployeeLedgerDimension as string,\n\t\tTransactionCurrencyCode as string,\n\t\tExchRate as decimal(18,0),\n\t\tMainAccountId as string,\n\t\tTaxGroup as string,\n\t\tVoucher as string,\n\t\tMainAccountCategory as string,\n\t\tCurrency as string,\n\t\tAccountingCurrencyAmount as string,\n\t\tDescription as string,\n\t\tSerialNumber as string,\n\t\tTaxItemGroup as string,\n\t\tClientsLedgerDimension as string,\n\t\tVendorLedgerDimension as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> VoucherServicesStage\nsource(output(\n\t\tCurrencyId as short,\n\t\tName as string,\n\t\tDisplayName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Currency\nsource(output(\n\t\tMainAccountCategoryId as short,\n\t\tName as string,\n\t\tDisplayName as binary\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> MainAccountCategory\nJoinMainAccountCategory, Currency join(TransactionCurrencyCode == Currency@Name,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinTransactionCurrency\nVoucherServicesStage, MainAccountCategory join(MainAccountCategory == MainAccountCategory@Name,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinMainAccountCategory\nJoinTransactionCurrency select(mapColumn(\n\t\tCustomerLedgerDimension,\n\t\tTransactionType,\n\t\tDepartmentLedgerDimension,\n\t\tSPVLedgerDimension,\n\t\tTransactionCurrencyAmount,\n\t\tText,\n\t\tName = VoucherServicesStage@Name,\n\t\tReportingCurrencyAmount,\n\t\tClassLedgerDimension,\n\t\tJournalId,\n\t\tTransDate,\n\t\tProjectLedgerDimension,\n\t\tEmployeeLedgerDimension,\n\t\tExchRate,\n\t\tMainAccountId,\n\t\tTaxGroup,\n\t\tVoucher,\n\t\tCurrency,\n\t\tAccountingCurrencyAmount,\n\t\tDescription,\n\t\tSerialNumber,\n\t\tTaxItemGroup,\n\t\tClientsLedgerDimension,\n\t\tVendorLedgerDimension,\n\t\tMainAccountCategoryId,\n\t\tTransactionCurrencyId = CurrencyId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectVoucherService\nSelectVoucherService, Currency join(Currency == Currency@Name,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinCurrency\nJoinCurrency select(mapColumn(\n\t\tCustomerLedgerDimension,\n\t\tTransactionType,\n\t\tDepartmentLedgerDimension,\n\t\tSPVLedgerDimension,\n\t\tTransactionCurrencyAmount,\n\t\tText,\n\t\tName = SelectVoucherService@Name,\n\t\tReportingCurrencyAmount,\n\t\tClassLedgerDimension,\n\t\tJournalId,\n\t\tTransDate,\n\t\tProjectLedgerDimension,\n\t\tEmployeeLedgerDimension,\n\t\tExchRate,\n\t\tMainAccountId,\n\t\tTaxGroup,\n\t\tVoucher,\n\t\tAccountingCurrencyAmount,\n\t\tDescription,\n\t\tSerialNumber,\n\t\tTaxItemGroup,\n\t\tClientsLedgerDimension,\n\t\tVendorLedgerDimension,\n\t\tMainAccountCategoryId,\n\t\tTransactionCurrencyId,\n\t\tCurrencyId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectVourceServiceColumns\nSelectVourceServiceColumns derive(TransDate = toTimestamp(replace(TransDate,' +00:00',''), 'MM/dd/yyyy HH:mm:ss')) ~> PrepareColumns\nPrepareColumns sink(input(\n\t\tJournalId as string,\n\t\tMainAccountId as integer,\n\t\tMainAccountCategoryId as integer,\n\t\tSerialNumber as long,\n\t\tTransactionCurrencyId as integer,\n\t\tCurrencyId as integer,\n\t\tTransactionType as string,\n\t\tTransactionCurrencyAmount as decimal(18,0),\n\t\tAccountingCurrencyAmount as decimal(18,0),\n\t\tReportingCurrencyAmount as decimal(18,0),\n\t\tExchangeRate as decimal(18,0),\n\t\tTransactionDate as timestamp,\n\t\tEmployeeLedgerDimension as string,\n\t\tCustomerLedgerDimension as string,\n\t\tVendorLedgerDimension as string,\n\t\tClassLedgerDimension as string,\n\t\tClientsLedgerDimension as string,\n\t\tDepartmentLedgerDimension as string,\n\t\tProjectLedgerDimension as string,\n\t\tSPVLedgerDimension as string,\n\t\tTaxGroup as string,\n\t\tTaxItemGroup as string,\n\t\tName as string,\n\t\tDescription as string,\n\t\tText as string,\n\t\tVoucher as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tJournalId,\n\t\tMainAccountId,\n\t\tMainAccountCategoryId,\n\t\tSerialNumber,\n\t\tTransactionCurrencyId,\n\t\tCurrencyId,\n\t\tTransactionType,\n\t\tTransactionCurrencyAmount,\n\t\tAccountingCurrencyAmount,\n\t\tReportingCurrencyAmount,\n\t\tExchangeRate = ExchRate,\n\t\tTransactionDate = TransDate,\n\t\tEmployeeLedgerDimension,\n\t\tCustomerLedgerDimension,\n\t\tVendorLedgerDimension,\n\t\tClassLedgerDimension,\n\t\tClientsLedgerDimension,\n\t\tDepartmentLedgerDimension,\n\t\tProjectLedgerDimension,\n\t\tSPVLedgerDimension,\n\t\tTaxGroup,\n\t\tTaxItemGroup,\n\t\tName,\n\t\tDescription,\n\t\tText,\n\t\tVoucher\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> VoucherServices"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/VoucherServicesStage')]",
				"[concat(variables('factoryId'), '/datasets/Currency')]",
				"[concat(variables('factoryId'), '/datasets/MainAccountCategory')]",
				"[concat(variables('factoryId'), '/datasets/VoucherServices')]"
			]
		}
	]
}